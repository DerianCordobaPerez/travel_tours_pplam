{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Popper = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _overlays = require(\"@react-native-aria/overlays\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Popper/Popper.tsx\";\n\nvar defaultArrowHeight = 15;\nvar defaultArrowWidth = 15;\n\nvar getDiagonalLength = function getDiagonalLength(height, width) {\n  return Math.pow(height * height + width * width, 0.5);\n};\n\nvar _createContext = (0, _utils.createContext)('PopperContext'),\n    _createContext2 = (0, _slicedToArray2.default)(_createContext, 2),\n    PopperProvider = _createContext2[0],\n    usePopperContext = _createContext2[1];\n\nvar Popper = function Popper(props) {\n  return _react.default.createElement(PopperProvider, (0, _extends2.default)({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }), props.children);\n};\n\nexports.Popper = Popper;\n\nvar PopperContent = _react.default.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"children\", \"style\"]);\n\n  var _usePopperContext = usePopperContext('PopperContent'),\n      triggerRef = _usePopperContext.triggerRef,\n      shouldFlip = _usePopperContext.shouldFlip,\n      crossOffset = _usePopperContext.crossOffset,\n      offset = _usePopperContext.offset,\n      placementProp = _usePopperContext.placement,\n      onClose = _usePopperContext.onClose,\n      shouldOverlapWithTrigger = _usePopperContext.shouldOverlapWithTrigger,\n      setOverlayRef = _usePopperContext.setOverlayRef;\n\n  var overlayRef = _react.default.useRef(null);\n\n  var _useOverlayPosition = (0, _overlays.useOverlayPosition)({\n    targetRef: triggerRef,\n    overlayRef: overlayRef,\n    shouldFlip: shouldFlip,\n    crossOffset: crossOffset,\n    isOpen: true,\n    offset: offset,\n    placement: placementProp,\n    containerPadding: 0,\n    onClose: onClose,\n    shouldOverlapWithTrigger: shouldOverlapWithTrigger\n  }),\n      overlayProps = _useOverlayPosition.overlayProps,\n      rendered = _useOverlayPosition.rendered,\n      arrowProps = _useOverlayPosition.arrowProps,\n      placement = _useOverlayPosition.placement;\n\n  var restElements = [];\n  var arrowElement = null;\n\n  _react.default.useEffect(function () {\n    setOverlayRef && setOverlayRef(overlayRef);\n  }, [overlayRef, setOverlayRef]);\n\n  _react.default.Children.forEach(children, function (child) {\n    if (_react.default.isValidElement(child) && child.type.displayName === 'PopperArrow') {\n      arrowElement = _react.default.cloneElement(child, {\n        arrowProps: arrowProps,\n        actualPlacement: placement\n      });\n    } else {\n      restElements.push(child);\n    }\n  });\n\n  var arrowHeight = 0;\n  var arrowWidth = 0;\n\n  if (arrowElement) {\n    arrowHeight = defaultArrowHeight;\n    arrowWidth = defaultArrowWidth;\n\n    if (arrowElement.props.height) {\n      arrowHeight = arrowElement.props.height;\n    }\n\n    if (arrowElement.props.width) {\n      arrowWidth = arrowElement.props.width;\n    }\n  }\n\n  var containerStyle = _react.default.useMemo(function () {\n    return getContainerStyle({\n      placement: placement,\n      arrowHeight: arrowHeight,\n      arrowWidth: arrowWidth\n    });\n  }, [arrowHeight, arrowWidth, placement]);\n\n  var overlayStyle = _react.default.useMemo(function () {\n    return _reactNative.StyleSheet.create({\n      overlay: (0, _extends2.default)({}, overlayProps.style, {\n        opacity: rendered ? 1 : 0,\n        position: 'absolute'\n      })\n    });\n  }, [rendered, overlayProps.style]);\n\n  return _react.default.createElement(_reactNative.View, {\n    ref: overlayRef,\n    collapsable: false,\n    style: overlayStyle.overlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, arrowElement, _react.default.createElement(_Box.default, (0, _extends2.default)({\n    style: _reactNative.StyleSheet.flatten([containerStyle, style])\n  }, rest, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }), restElements));\n});\n\nvar PopperArrow = _react.default.forwardRef(function (_ref2, ref) {\n  var _ref2$height = _ref2.height,\n      height = _ref2$height === void 0 ? defaultArrowHeight : _ref2$height,\n      _ref2$width = _ref2.width,\n      width = _ref2$width === void 0 ? defaultArrowWidth : _ref2$width,\n      arrowProps = _ref2.arrowProps,\n      actualPlacement = _ref2.actualPlacement,\n      style = _ref2.style,\n      _ref2$borderColor = _ref2.borderColor,\n      borderColor = _ref2$borderColor === void 0 ? '#52525b' : _ref2$borderColor,\n      _ref2$backgroundColor = _ref2.backgroundColor,\n      backgroundColor = _ref2$backgroundColor === void 0 ? 'black' : _ref2$backgroundColor,\n      rest = (0, _objectWithoutProperties2.default)(_ref2, [\"height\", \"width\", \"arrowProps\", \"actualPlacement\", \"style\", \"borderColor\", \"backgroundColor\"]);\n\n  var additionalStyles = _react.default.useMemo(function () {\n    return getArrowStyles({\n      placement: actualPlacement,\n      height: height,\n      width: width\n    });\n  }, [actualPlacement, height, width]);\n\n  var triangleStyle = _react.default.useMemo(function () {\n    return {\n      position: 'absolute',\n      width: width,\n      height: height\n    };\n  }, [width, height]);\n\n  var arrowStyles = _react.default.useMemo(function () {\n    return [arrowProps.style, triangleStyle, additionalStyles, style];\n  }, [triangleStyle, additionalStyles, arrowProps.style, style]);\n\n  return _react.default.createElement(_Box.default, (0, _extends2.default)({\n    ref: ref,\n    style: arrowStyles,\n    borderColor: borderColor,\n    backgroundColor: backgroundColor,\n    zIndex: 1\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }));\n});\n\nvar getArrowStyles = function getArrowStyles(props) {\n  var additionalStyles = {\n    transform: []\n  };\n  var diagonalLength = getDiagonalLength(defaultArrowHeight, defaultArrowHeight);\n\n  if (props.placement === 'top' && props.width) {\n    additionalStyles.transform.push({\n      translateX: -props.width / 2\n    });\n    additionalStyles.transform.push({\n      rotate: '45deg'\n    });\n    additionalStyles.bottom = Math.ceil((diagonalLength - defaultArrowHeight) / 2);\n    additionalStyles.borderBottomWidth = 1;\n    additionalStyles.borderRightWidth = 1;\n  }\n\n  if (props.placement === 'bottom' && props.width) {\n    additionalStyles.transform.push({\n      translateX: -props.width / 2\n    });\n    additionalStyles.transform.push({\n      rotate: '45deg'\n    });\n    additionalStyles.top = Math.ceil((diagonalLength - defaultArrowHeight) / 2);\n    additionalStyles.borderTopWidth = 1;\n    additionalStyles.borderLeftWidth = 1;\n  }\n\n  if (props.placement === 'left' && props.height) {\n    additionalStyles.transform.push({\n      translateY: -props.height / 2\n    });\n    additionalStyles.transform.push({\n      rotate: '45deg'\n    });\n    additionalStyles.right = Math.ceil((diagonalLength - defaultArrowHeight) / 2);\n    additionalStyles.borderTopWidth = 1;\n    additionalStyles.borderRightWidth = 1;\n  }\n\n  if (props.placement === 'right' && props.height) {\n    additionalStyles.transform.push({\n      translateY: -props.height / 2\n    });\n    additionalStyles.transform.push({\n      rotate: '45deg'\n    });\n    additionalStyles.left = Math.ceil((diagonalLength - defaultArrowHeight) / 2);\n    additionalStyles.borderBottomWidth = 1;\n    additionalStyles.borderLeftWidth = 1;\n  }\n\n  return additionalStyles;\n};\n\nvar getContainerStyle = function getContainerStyle(_ref3) {\n  var placement = _ref3.placement,\n      arrowHeight = _ref3.arrowHeight;\n  var diagonalLength = getDiagonalLength(arrowHeight, arrowHeight) / 2;\n\n  if (placement === 'top') {\n    return {\n      marginBottom: diagonalLength\n    };\n  }\n\n  if (placement === 'bottom') {\n    return {\n      marginTop: diagonalLength\n    };\n  }\n\n  if (placement === 'left') {\n    return {\n      marginRight: diagonalLength\n    };\n  }\n\n  if (placement === 'right') {\n    return {\n      marginLeft: diagonalLength\n    };\n  }\n\n  return {};\n};\n\nPopperArrow.displayName = 'PopperArrow';\nPopper.Content = PopperContent;\nPopper.Arrow = PopperArrow;","map":{"version":3,"sources":["Popper.tsx"],"names":["defaultArrowHeight","defaultArrowWidth","getDiagonalLength","Math","height","width","PopperProvider","usePopperContext","Popper","props","PopperContent","React","children","style","rest","triggerRef","shouldFlip","crossOffset","offset","placementProp","onClose","shouldOverlapWithTrigger","setOverlayRef","overlayRef","overlayProps","rendered","arrowProps","placement","targetRef","isOpen","containerPadding","restElements","arrowElement","child","actualPlacement","arrowHeight","arrowWidth","containerStyle","getContainerStyle","overlayStyle","StyleSheet","overlay","opacity","position","PopperArrow","borderColor","backgroundColor","additionalStyles","getArrowStyles","triangleStyle","arrowStyles","transform","diagonalLength","translateX","rotate","translateY","marginBottom","marginTop","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useOverlayPosition } from '@react-native-aria/overlays';\nimport { StyleSheet, View, ViewStyle } from 'react-native';\nimport type {\n  IPopperProps,\n  IScrollContentStyle,\n  IArrowStyles,\n  IPopoverArrowProps,\n} from './types';\nimport { createContext } from '../../../utils';\nimport Box, { IBoxProps } from '../../primitives/Box';\n// import { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nconst defaultArrowHeight = 15;\nconst defaultArrowWidth = 15;\n\nconst getDiagonalLength = (height: number, width: number) => {\n  return Math.pow(height * height + width * width, 0.5);\n};\n\ntype PopperContext = IPopperProps & {\n  triggerRef: any;\n  onClose: any;\n  setOverlayRef?: (overlayRef: any) => void;\n};\n\nconst [PopperProvider, usePopperContext] = createContext<PopperContext>(\n  'PopperContext'\n);\n\nconst Popper = (\n  props: IPopperProps & {\n    triggerRef: any;\n    onClose: any;\n    setOverlayRef?: (overlayRef: any) => void;\n  }\n) => {\n  return <PopperProvider {...props}>{props.children}</PopperProvider>;\n};\n\nconst PopperContent = React.forwardRef(\n  ({ children, style, ...rest }: IBoxProps, ref: any) => {\n    const {\n      triggerRef,\n      shouldFlip,\n      crossOffset,\n      offset,\n      placement: placementProp,\n      onClose,\n      shouldOverlapWithTrigger,\n      setOverlayRef,\n    } = usePopperContext('PopperContent');\n    const overlayRef = React.useRef(null);\n    // const { top } = useSafeAreaInsets();\n    const {\n      overlayProps,\n      rendered,\n      arrowProps,\n      placement,\n    } = useOverlayPosition({\n      targetRef: triggerRef,\n      overlayRef,\n      shouldFlip: shouldFlip,\n      crossOffset: crossOffset,\n      isOpen: true,\n      offset: offset,\n      placement: placementProp as any,\n      containerPadding: 0,\n      onClose: onClose,\n      shouldOverlapWithTrigger,\n    });\n\n    let restElements: React.ReactNode[] = [];\n    let arrowElement: React.ReactElement | null = null;\n\n    React.useEffect(() => {\n      setOverlayRef && setOverlayRef(overlayRef);\n    }, [overlayRef, setOverlayRef]);\n\n    // Might have performance impact if there are a lot of siblings!\n    // Shouldn't be an issue with popovers since it would have atmost 2. Arrow and Content.\n    React.Children.forEach(children, (child) => {\n      if (\n        React.isValidElement(child) &&\n        // @ts-ignore\n        child.type.displayName === 'PopperArrow'\n      ) {\n        arrowElement = React.cloneElement(child, {\n          // @ts-ignore\n          arrowProps,\n          actualPlacement: placement,\n        });\n      } else {\n        restElements.push(child);\n      }\n    });\n\n    let arrowHeight = 0;\n    let arrowWidth = 0;\n\n    if (arrowElement) {\n      arrowHeight = defaultArrowHeight;\n      arrowWidth = defaultArrowWidth;\n\n      //@ts-ignore\n      if (arrowElement.props.height) {\n        //@ts-ignore\n        arrowHeight = arrowElement.props.height;\n      }\n\n      //@ts-ignore\n      if (arrowElement.props.width) {\n        //@ts-ignore\n        arrowWidth = arrowElement.props.width;\n      }\n    }\n\n    const containerStyle = React.useMemo(\n      () =>\n        getContainerStyle({\n          placement,\n          arrowHeight,\n          arrowWidth,\n        }),\n      [arrowHeight, arrowWidth, placement]\n    );\n\n    const overlayStyle = React.useMemo(\n      () =>\n        StyleSheet.create({\n          overlay: {\n            ...overlayProps.style,\n            // To handle translucent android StatusBar\n            // marginTop: Platform.select({ android: top, default: 0 }),\n            opacity: rendered ? 1 : 0,\n            position: 'absolute',\n          },\n        }),\n      [rendered, overlayProps.style]\n    );\n\n    return (\n      <View ref={overlayRef} collapsable={false} style={overlayStyle.overlay}>\n        {arrowElement}\n        <Box\n          style={StyleSheet.flatten([containerStyle, style])}\n          {...rest}\n          ref={ref}\n        >\n          {restElements}\n        </Box>\n      </View>\n    );\n  }\n);\n\n// This is an internal implementation of PopoverArrow\nconst PopperArrow = React.forwardRef(\n  (\n    {\n      height = defaultArrowHeight,\n      width = defaultArrowWidth,\n\n      //@ts-ignore - Will be passed by React.cloneElement from PopperContent\n      arrowProps,\n      //@ts-ignore - Will be passed by React.cloneElement from PopperContent\n      actualPlacement,\n      style,\n      borderColor = '#52525b',\n      backgroundColor = 'black',\n      ...rest\n    }: IPopoverArrowProps & IBoxProps,\n    ref: any\n  ) => {\n    const additionalStyles = React.useMemo(\n      () => getArrowStyles({ placement: actualPlacement, height, width }),\n      [actualPlacement, height, width]\n    );\n\n    let triangleStyle: ViewStyle = React.useMemo(\n      () => ({\n        position: 'absolute',\n        width,\n        height,\n      }),\n      [width, height]\n    );\n\n    let arrowStyles = React.useMemo(\n      () => [arrowProps.style, triangleStyle, additionalStyles, style],\n      [triangleStyle, additionalStyles, arrowProps.style, style]\n    );\n\n    return (\n      <Box\n        ref={ref}\n        style={arrowStyles}\n        borderColor={borderColor}\n        backgroundColor={backgroundColor}\n        zIndex={1}\n        {...rest}\n      />\n    );\n  }\n);\n\nconst getArrowStyles = (props: IArrowStyles) => {\n  let additionalStyles: any = {\n    transform: [],\n  };\n\n  const diagonalLength = getDiagonalLength(\n    defaultArrowHeight,\n    defaultArrowHeight\n  );\n\n  if (props.placement === 'top' && props.width) {\n    additionalStyles.transform.push({ translateX: -props.width / 2 });\n    additionalStyles.transform.push({ rotate: '45deg' });\n    additionalStyles.bottom = Math.ceil(\n      (diagonalLength - defaultArrowHeight) / 2\n    );\n    additionalStyles.borderBottomWidth = 1;\n    additionalStyles.borderRightWidth = 1;\n  }\n\n  if (props.placement === 'bottom' && props.width) {\n    additionalStyles.transform.push({ translateX: -props.width / 2 });\n    additionalStyles.transform.push({ rotate: '45deg' });\n    additionalStyles.top = Math.ceil((diagonalLength - defaultArrowHeight) / 2);\n    additionalStyles.borderTopWidth = 1;\n    additionalStyles.borderLeftWidth = 1;\n  }\n\n  if (props.placement === 'left' && props.height) {\n    additionalStyles.transform.push({ translateY: -props.height / 2 });\n    additionalStyles.transform.push({ rotate: '45deg' });\n    additionalStyles.right = Math.ceil(\n      (diagonalLength - defaultArrowHeight) / 2\n    );\n    additionalStyles.borderTopWidth = 1;\n    additionalStyles.borderRightWidth = 1;\n  }\n\n  if (props.placement === 'right' && props.height) {\n    additionalStyles.transform.push({ translateY: -props.height / 2 });\n    additionalStyles.transform.push({ rotate: '45deg' });\n    additionalStyles.left = Math.ceil(\n      (diagonalLength - defaultArrowHeight) / 2\n    );\n    additionalStyles.borderBottomWidth = 1;\n    additionalStyles.borderLeftWidth = 1;\n  }\n\n  return additionalStyles;\n};\n\nconst getContainerStyle = ({ placement, arrowHeight }: IScrollContentStyle) => {\n  const diagonalLength = getDiagonalLength(arrowHeight, arrowHeight) / 2;\n\n  if (placement === 'top') {\n    return { marginBottom: diagonalLength };\n  }\n\n  if (placement === 'bottom') {\n    return { marginTop: diagonalLength };\n  }\n\n  if (placement === 'left') {\n    return { marginRight: diagonalLength };\n  }\n\n  if (placement === 'right') {\n    return { marginLeft: diagonalLength };\n  }\n\n  return {};\n};\n\nPopperArrow.displayName = 'PopperArrow';\nPopper.Content = PopperContent;\nPopper.Arrow = PopperArrow;\n\nexport { Popper };\n"]},"metadata":{},"sourceType":"script"}