{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.isnil\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Flex = _interopRequireDefault(require(\"../../primitives/Flex\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Wrap/index.tsx\";\n\nvar Wrap = function Wrap(_ref, ref) {\n  var children = _ref.children,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\"]);\n\n  var _useThemeProps = (0, _hooks.useThemeProps)('Wrap', props),\n      space = _useThemeProps.space,\n      newProps = (0, _objectWithoutProperties2.default)(_useThemeProps, [\"space\"]);\n\n  return _react.default.createElement(_Flex.default, (0, _extends2.default)({\n    wrap: \"wrap\"\n  }, newProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }), (0, _lodash.default)(space) ? children : _react.default.Children.map(children, function (child) {\n    return _react.default.cloneElement(child, (0, _extends2.default)({}, props, {\n      style: {\n        margin: space\n      }\n    }), child.props.children);\n  }));\n};\n\nvar _default = _react.default.memo(_react.default.forwardRef(Wrap));\n\nexports.default = _default;","map":{"version":3,"sources":["index.tsx"],"names":["Wrap","children","props","space","newProps","React","style","margin","child"],"mappings":";;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,yBAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,kBAAA;;;;;AAEA,IAAMA,IAAI,GAAJA,SAAAA,IAAAA,CAAO,IAAPA,EAAO,GAAPA,EAA0D;AAAhDC,MAAAA,QAAgD,GAAA,IAAA,CAAhDA,QAAAA;AAAAA,MAAaC,KAAmC,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,UAAA,CAAA,CAAhDD;;AAAgD,MAAA,cAAA,GAC/B,CAAA,GAAA,MAAA,CAAA,aAAA,EAAA,MAAA,EAD+B,KAC/B,CAD+B;AAAA,MACtDE,KADsD,GAAA,cAAA,CAAA,KAAA;AAAA,MAC5CC,QAD4C,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,cAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;AAE9D,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AAAM,IAAA,IAAI,EAAV;AAAA,GAAA,EAAA,QAAA,EAAA;AAAgC,IAAA,GAAG,EAAnC,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EACG,CAAA,GAAA,OAAA,CAAA,OAAA,EAAA,KAAA,IAAA,QAAA,GAEGC,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EAA6B,UAAA,KAAA,EAAgB;AAC3C,WAAOA,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,KAAAA,EAAAA,CAAAA,GAAAA,SAAAA,CAAAA,OAAAA,EAAAA,EAAAA,EAAAA,KAAAA,EAAAA;AAEOC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAFtBF;AAEc;AAFdA,KAAAA,CAAAA,EAGLG,KAAK,CAALA,KAAAA,CAHF,QAAOH,CAAP;AALV,GAIQA,CAHN,CADF;AAFF,CAAA;;eAiBeA,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAWA,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAXA,IAAWA,CAAXA,C","sourcesContent":["import isNil from 'lodash.isnil';\nimport React from 'react';\nimport Flex from '../../primitives/Flex';\nimport type { IWrapProps } from './types';\nimport { useThemeProps } from '../../../hooks';\n\nconst Wrap = ({ children, ...props }: IWrapProps, ref?: any) => {\n  const { space, ...newProps } = useThemeProps('Wrap', props);\n  return (\n    <Flex wrap=\"wrap\" {...newProps} ref={ref}>\n      {isNil(space)\n        ? children\n        : React.Children.map(children, (child: any) => {\n            return React.cloneElement(\n              child,\n              { ...props, style: { margin: space } },\n              child.props.children\n            );\n          })}\n    </Flex>\n  );\n};\n\nexport default React.memo(React.forwardRef(Wrap));\nexport type { IWrapProps };\n"]},"metadata":{},"sourceType":"script"}