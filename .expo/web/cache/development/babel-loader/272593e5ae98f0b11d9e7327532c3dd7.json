{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _native = _interopRequireDefault(require(\"styled-components/native\"));\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _theme = require(\"../../../theme\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/CircularProgress/CircularProgress.tsx\";\n\nvar StyleAnimatedView = (0, _native.default)(_reactNative.Animated.View)(_styledSystem.color, _styledSystem.border);\n\nvar CircularProgress = function CircularProgress(_ref, ref) {\n  var value = _ref.value,\n      isIndeterminate = _ref.isIndeterminate,\n      max = _ref.max,\n      min = _ref.min,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"value\", \"isIndeterminate\", \"max\", \"min\"]);\n  var theme = (0, _hooks.useTheme)();\n  var isDomUsable = (0, _utils.canUseDom)();\n\n  if (min) {\n    value = value - min;\n  }\n\n  var sizeProps;\n  var newProps = (0, _hooks.useThemeProps)('CircularProgress', props);\n\n  var _themeTools$extractIn = _theme.themeTools.extractInObject(props, ['size']),\n      _themeTools$extractIn2 = (0, _slicedToArray2.default)(_themeTools$extractIn, 2),\n      remainingProps = _themeTools$extractIn2[1];\n\n  if (!newProps.size) {\n    sizeProps = {\n      height: newProps.height,\n      width: newProps.width\n    };\n  } else {\n    sizeProps = {\n      height: newProps.size,\n      width: newProps.size\n    };\n  }\n\n  var themeHeight = (0, _lodash.default)(theme, 'space.' + sizeProps.height);\n  var themeWidth = (0, _lodash.default)(theme, 'space.' + sizeProps.width);\n  var styleSize = {\n    height: themeHeight ? parseInt(themeHeight.slice(themeHeight.Length, -2), 10) : sizeProps.height,\n    width: themeWidth ? parseInt(themeWidth.slice(themeWidth.Length, -2), 10) : sizeProps.width\n  };\n  var defaultThickness = newProps.thickness;\n  var degree = new _reactNative.Animated.Value(0);\n\n  if (isIndeterminate) {\n    if (isDomUsable) {\n      _reactNative.Animated.loop(_reactNative.Animated.timing(degree, {\n        toValue: 1,\n        duration: 600,\n        easing: _reactNative.Easing.linear,\n        useNativeDriver: false\n      })).start();\n    }\n  }\n\n  var _React$useState = _react.default.useState(0),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      viewHeight = _React$useState2[0],\n      setViewHeight = _React$useState2[1];\n\n  var layout = function layout(e) {\n    var height = e.nativeEvent.layout.height;\n    setViewHeight(height);\n  };\n\n  var defaultStyling = (0, _extends2.default)({\n    borderBottomLeftRadius: viewHeight / 2,\n    borderBottomRightRadius: viewHeight / 2,\n    borderTopLeftRadius: viewHeight / 2,\n    borderTopRightRadius: viewHeight / 2,\n    borderLeftWidth: defaultThickness,\n    borderBottomWidth: defaultThickness,\n    position: 'absolute',\n    borderLeftColor: 'transparent',\n    borderBottomColor: 'transparent'\n  }, styleSize);\n\n  var styles = _reactNative.StyleSheet.create({\n    firstProgressLayer: (0, _extends2.default)({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling, {\n      transform: [{\n        rotateZ: '-135deg'\n      }]\n    }),\n    secondProgressLayer: (0, _extends2.default)({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling, {\n      transform: [{\n        rotateZ: '45deg'\n      }]\n    }),\n    offsetLayer: (0, _extends2.default)({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling, {\n      borderRadius: viewHeight / 2,\n      transform: [{\n        rotateZ: '-135deg'\n      }]\n    }),\n    animateStyle: (0, _extends2.default)({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling, {\n      transform: [{\n        rotateZ: degree.interpolate({\n          inputRange: [0, 1],\n          outputRange: ['0deg', '360deg']\n        })\n      }]\n    })\n  });\n\n  var halfSide = (max ? min ? max - min : max : 100) / 2;\n\n  var propStyle = function propStyle(percent, base_degrees) {\n    var rotateBy = base_degrees + percent * 180 / halfSide;\n    return {\n      transform: [{\n        rotateZ: rotateBy + 'deg'\n      }]\n    };\n  };\n\n  var renderThirdLayer = function renderThirdLayer(percent) {\n    if (percent > halfSide) {\n      return _react.default.createElement(_Box.default, {\n        borderTopColor: newProps.color,\n        borderRightColor: newProps.color,\n        style: [styles.secondProgressLayer, propStyle(percent - halfSide, 45)],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return _react.default.createElement(_Box.default, {\n        borderTopColor: newProps.trackColor,\n        borderRightColor: newProps.trackColor,\n        style: styles.offsetLayer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  var firstProgressLayerStyle;\n\n  if (value > halfSide) {\n    firstProgressLayerStyle = propStyle(halfSide, -135);\n  } else {\n    firstProgressLayerStyle = propStyle(value, -135);\n  }\n\n  return _react.default.createElement(_Box.default, (0, _extends2.default)({}, sizeProps, {\n    rounded: viewHeight / 2,\n    borderWidth: defaultThickness,\n    borderColor: newProps.trackColor,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, remainingProps, {\n    ref: ref,\n    accessible: true,\n    accessibilityRole: \"progressbar\",\n    accessibilityValue: {\n      min: min,\n      max: max,\n      now: value\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }), !isIndeterminate ? _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_Box.default, {\n    onLayout: layout,\n    borderTopColor: newProps.color,\n    borderRightColor: newProps.color,\n    style: [styles.firstProgressLayer, firstProgressLayerStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }), renderThirdLayer(value), _react.default.createElement(_Box.default, {\n    _text: newProps._text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, remainingProps.children)) : _react.default.createElement(StyleAnimatedView, {\n    onLayout: layout,\n    borderTopColor: newProps.color,\n    borderRightColor: newProps.color,\n    style: styles.animateStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar _default = _react.default.memo(_react.default.forwardRef(CircularProgress));\n\nexports.default = _default;","map":{"version":3,"sources":["CircularProgress.tsx"],"names":["StyleAnimatedView","Animated","color","border","CircularProgress","value","isIndeterminate","max","min","props","theme","isDomUsable","newProps","remainingProps","themeTools","sizeProps","height","width","themeHeight","themeWidth","styleSize","parseInt","defaultThickness","degree","toValue","duration","easing","Easing","useNativeDriver","viewHeight","setViewHeight","React","layout","e","defaultStyling","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","borderLeftWidth","borderBottomWidth","position","borderLeftColor","borderBottomColor","styles","StyleSheet","firstProgressLayer","borderTopWidth","borderRightWidth","transform","rotateZ","secondProgressLayer","offsetLayer","borderRadius","animateStyle","inputRange","outputRange","halfSide","propStyle","rotateBy","base_degrees","percent","renderThirdLayer","firstProgressLayerStyle","now"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport React from 'react';\nimport { Animated, Easing, StyleSheet } from 'react-native';\nimport styled from 'styled-components/native';\nimport { border, color } from 'styled-system';\nimport { useTheme, useThemeProps } from '../../../hooks';\nimport { canUseDom } from '../../../utils';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport type { ICircularProgressProps } from './types';\nimport { themeTools } from '../../../theme';\n\nconst StyleAnimatedView = styled(Animated.View)<IBoxProps>(color, border);\n\nconst CircularProgress = (\n  { value, isIndeterminate, max, min, ...props }: ICircularProgressProps,\n  ref: any\n) => {\n  const theme = useTheme();\n\n  const isDomUsable = canUseDom();\n  if (min) {\n    value = value - min;\n  }\n\n  let sizeProps;\n  let newProps = useThemeProps('CircularProgress', props);\n  let [, remainingProps] = themeTools.extractInObject(props, ['size']); // removing size from props so that Box don't accept size passed for CircularProgress\n\n  if (!newProps.size) {\n    sizeProps = {\n      height: newProps.height,\n      width: newProps.width,\n    };\n  } else {\n    sizeProps = { height: newProps.size, width: newProps.size };\n  }\n  // fetching size from theme for passing into style prop\n  const themeHeight = get(theme, 'space.' + sizeProps.height);\n  const themeWidth = get(theme, 'space.' + sizeProps.width);\n\n  const styleSize = {\n    height: themeHeight\n      ? parseInt(themeHeight.slice(themeHeight.Length, -2), 10)\n      : sizeProps.height,\n    width: themeWidth\n      ? parseInt(themeWidth.slice(themeWidth.Length, -2), 10)\n      : sizeProps.width,\n  };\n\n  const defaultThickness = newProps.thickness;\n  const degree: any = new Animated.Value(0);\n  if (isIndeterminate) {\n    if (isDomUsable) {\n      Animated.loop(\n        Animated.timing(degree, {\n          toValue: 1,\n          duration: 600,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        })\n      ).start();\n    }\n  }\n  const [viewHeight, setViewHeight] = React.useState(0);\n  const layout = (e: any) => {\n    let height = e.nativeEvent.layout.height;\n    setViewHeight(height);\n  };\n\n  const defaultStyling: any = {\n    borderBottomLeftRadius: viewHeight / 2,\n    borderBottomRightRadius: viewHeight / 2,\n    borderTopLeftRadius: viewHeight / 2,\n    borderTopRightRadius: viewHeight / 2,\n    borderLeftWidth: defaultThickness,\n    borderBottomWidth: defaultThickness,\n    position: 'absolute',\n    borderLeftColor: 'transparent',\n    borderBottomColor: 'transparent',\n    ...styleSize,\n  };\n  const styles = StyleSheet.create({\n    firstProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    secondProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '45deg' }],\n    },\n    offsetLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      borderRadius: viewHeight / 2,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    animateStyle: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [\n        {\n          rotateZ: degree.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg'],\n          }),\n        },\n      ],\n    },\n  });\n  let halfSide = (max ? (min ? max - min : max) : 100) / 2; // calculating the halfvalue of the progress according to min and max\n\n  const propStyle = (percent: number, base_degrees: number) => {\n    const rotateBy = base_degrees + (percent * 180) / halfSide;\n    return {\n      transform: [{ rotateZ: rotateBy + 'deg' }],\n    };\n  };\n\n  const renderThirdLayer = (percent: number) => {\n    if (percent > halfSide) {\n      return (\n        <Box\n          borderTopColor={newProps.color}\n          borderRightColor={newProps.color}\n          style={[\n            styles.secondProgressLayer,\n            propStyle(percent - halfSide, 45),\n          ]}\n        />\n      );\n    } else {\n      return (\n        <Box\n          borderTopColor={newProps.trackColor}\n          borderRightColor={newProps.trackColor}\n          style={styles.offsetLayer}\n        />\n      );\n    }\n  };\n  let firstProgressLayerStyle;\n  if (value > halfSide) {\n    firstProgressLayerStyle = propStyle(halfSide, -135);\n  } else {\n    firstProgressLayerStyle = propStyle(value, -135);\n  }\n\n  return (\n    <Box\n      {...sizeProps}\n      rounded={viewHeight / 2}\n      borderWidth={defaultThickness}\n      borderColor={newProps.trackColor}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      {...remainingProps}\n      ref={ref}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityValue={{\n        min,\n        max,\n        now: value,\n      }}\n    >\n      {!isIndeterminate ? (\n        <>\n          <Box\n            onLayout={layout}\n            borderTopColor={newProps.color}\n            borderRightColor={newProps.color}\n            style={[styles.firstProgressLayer, firstProgressLayerStyle]}\n          />\n          {renderThirdLayer(value)}\n          <Box _text={newProps._text}>{remainingProps.children}</Box>\n        </>\n      ) : (\n        <StyleAnimatedView\n          onLayout={layout}\n          borderTopColor={newProps.color}\n          borderRightColor={newProps.color}\n          style={styles.animateStyle}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(CircularProgress));\n"]},"metadata":{},"sourceType":"script"}