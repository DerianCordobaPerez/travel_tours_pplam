{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Typeahead = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _button = require(\"@react-native-aria/button\");\n\nvar _combobox = require(\"@react-stately/combobox\");\n\nvar _combobox2 = require(\"@react-native-aria/combobox\");\n\nvar _listbox = require(\"@react-native-aria/listbox\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _collections = require(\"@react-stately/collections\");\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _Pressable = require(\"../../primitives/Pressable\");\n\nvar _Text = _interopRequireDefault(require(\"../../primitives/Text\"));\n\nvar _tools = require(\"../../../theme/tools\");\n\nvar _types = require(\"./types\");\n\nvar _Input = require(\"../../primitives/Input\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Typeahead/Typeahead.tsx\";\n\nvar Typeahead = _react.default.forwardRef(function (_ref, ref) {\n  var onSelectedItemChange = _ref.onSelectedItemChange,\n      options = _ref.options,\n      renderItem = _ref.renderItem,\n      getOptionLabel = _ref.getOptionLabel,\n      getOptionKey = _ref.getOptionKey,\n      onChange = _ref.onChange,\n      numberOfItems = _ref.numberOfItems,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"onSelectedItemChange\", \"options\", \"renderItem\", \"getOptionLabel\", \"getOptionKey\", \"onChange\", \"numberOfItems\"]);\n  return _react.default.createElement(ComboBoxImplementation, (0, _extends2.default)({}, rest, {\n    onSelectionChange: onSelectedItemChange,\n    items: numberOfItems !== undefined ? options.slice(0, numberOfItems) : options,\n    onInputChange: onChange,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), function (item) {\n    if (typeof item !== 'string' && getOptionLabel === undefined) {\n      throw new Error('Please use getOptionLabel prop');\n    }\n\n    if (item.id === undefined && getOptionKey === undefined) {\n      throw new Error('Please use getOptionKey prop');\n    }\n\n    var optionLabel = getOptionLabel ? getOptionLabel(item) : item;\n    var optionKey = getOptionKey ? getOptionKey(item) : item.id !== undefined ? item.id : optionLabel;\n    return _react.default.createElement(_collections.Item, {\n      textValue: optionLabel,\n      key: optionKey,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, renderItem ? renderItem(item) : _react.default.createElement(_Box.default, {\n      p: 2,\n      justifyContent: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, _react.default.createElement(_Text.default, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, optionLabel)));\n  });\n});\n\nexports.Typeahead = Typeahead;\n\nvar ComboBoxImplementation = _react.default.forwardRef(function (props, ref) {\n  var _extractInObject = (0, _tools.extractInObject)(props, _types.layoutPropsList),\n      _extractInObject2 = (0, _slicedToArray2.default)(_extractInObject, 1),\n      layoutProps = _extractInObject2[0];\n\n  var state = (0, _combobox.useComboBoxState)(props);\n\n  var triggerRef = _react.default.useRef(null);\n\n  var inputRef = _react.default.useRef(null);\n\n  var listBoxRef = _react.default.useRef(null);\n\n  var popoverRef = _react.default.useRef(null);\n\n  var _useComboBox = (0, _combobox2.useComboBox)((0, _extends2.default)({}, props, {\n    inputRef: inputRef,\n    buttonRef: triggerRef,\n    listBoxRef: listBoxRef,\n    popoverRef: popoverRef,\n    menuTrigger: 'input'\n  }), state),\n      triggerProps = _useComboBox.buttonProps,\n      inputProps = _useComboBox.inputProps,\n      listBoxProps = _useComboBox.listBoxProps,\n      labelProps = _useComboBox.labelProps;\n\n  var toggleIconSetter = function toggleIconSetter() {\n    if (typeof props.toggleIcon === 'function') return props.toggleIcon({\n      isOpen: state.isOpen\n    });\n    return props.toggleIcon;\n  };\n\n  var _useButton = (0, _button.useButton)(triggerProps),\n      buttonProps = _useButton.buttonProps;\n\n  return _react.default.createElement(_Box.default, (0, _extends2.default)({\n    flexDirection: \"row\"\n  }, layoutProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_Box.default, {\n    flex: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, props.label && _react.default.createElement(_Text.default, (0, _extends2.default)({}, labelProps, {\n    pb: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), props.label), _react.default.createElement(_Input.Input, (0, _extends2.default)({}, inputProps, {\n    ref: inputRef,\n    InputRightElement: _react.default.createElement(_Pressable.Pressable, (0, _extends2.default)({}, buttonProps, {\n      ref: triggerRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }), toggleIconSetter()),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  })), state.isOpen && _react.default.createElement(ListBoxPopup, (0, _extends2.default)({}, listBoxProps, {\n    listBoxRef: listBoxRef,\n    popoverRef: popoverRef,\n    state: state,\n    label: props.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }))));\n});\n\nfunction ListBoxPopup(props) {\n  var _this2 = this;\n\n  var popoverRef = props.popoverRef,\n      listBoxRef = props.listBoxRef,\n      state = props.state,\n      dropdownHeight = props.dropdownHeight,\n      label = props.label;\n\n  var _useListBox = (0, _listbox.useListBox)({\n    label: label,\n    autoFocus: state.focusStrategy,\n    disallowEmptySelection: true\n  }, state, listBoxRef),\n      listBoxProps = _useListBox.listBoxProps;\n\n  return _react.default.createElement(_Box.default, {\n    ref: popoverRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Box.default, {\n    position: \"absolute\",\n    width: \"100%\",\n    maxHeight: dropdownHeight != null ? dropdownHeight : 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.ScrollView, (0, _extends2.default)({}, listBoxProps, {\n    keyboardShouldPersistTaps: \"handled\",\n    ref: function ref(node) {\n      if (_reactNative.Platform.OS === 'web') {\n        listBoxRef.current = (0, _reactNative.findNodeHandle)(node);\n      } else {\n        listBoxRef.current = node;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }), (0, _toConsumableArray2.default)(state.collection).map(function (item) {\n    return _react.default.createElement(Option, {\n      key: item.key,\n      item: item,\n      state: state,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    });\n  }))));\n}\n\nfunction Option(_ref2) {\n  var item = _ref2.item,\n      state = _ref2.state;\n  var searchItemStyle = (0, _hooks.useThemeProps)('TypeAheadSearchItem', {});\n\n  var ref = _react.default.useRef(null);\n\n  var isDisabled = state.disabledKeys.has(item.key);\n  var isSelected = state.selectionManager.isSelected(item.key);\n  var isFocused = state.selectionManager.focusedKey === item.key;\n\n  var _useOption = (0, _listbox.useOption)({\n    key: item.key,\n    isDisabled: isDisabled,\n    isSelected: isSelected,\n    shouldFocusOnHover: true,\n    shouldUseVirtualFocus: true\n  }, state, ref),\n      optionProps = _useOption.optionProps;\n\n  var backgroundColor = searchItemStyle.backgroundColor;\n  var opacity = 1;\n\n  if (isSelected) {\n    backgroundColor = searchItemStyle._focus.backgroundColor;\n  } else if (isFocused) {\n    backgroundColor = searchItemStyle._focus.backgroundColor;\n  } else if (isDisabled) {\n    opacity = 0.6;\n    backgroundColor = searchItemStyle._disabled.backgroundColor;\n  }\n\n  return _react.default.createElement(_Pressable.Pressable, (0, _extends2.default)({}, optionProps, {\n    opacity: opacity,\n    cursor: isDisabled ? _reactNative.Platform.OS === 'web' ? 'not-allowed' : null : null,\n    backgroundColor: backgroundColor,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }\n  }), item.rendered);\n}","map":{"version":3,"sources":["Typeahead.tsx"],"names":["Typeahead","React","onSelectedItemChange","options","renderItem","getOptionLabel","getOptionKey","onChange","numberOfItems","rest","item","optionLabel","optionKey","ComboBoxImplementation","layoutProps","layoutPropsList","state","triggerRef","inputRef","listBoxRef","popoverRef","triggerProps","inputProps","listBoxProps","labelProps","buttonRef","menuTrigger","toggleIconSetter","props","isOpen","buttonProps","dropdownHeight","label","autoFocus","disallowEmptySelection","Platform","searchItemStyle","ref","isDisabled","isSelected","isFocused","optionProps","key","shouldFocusOnHover","shouldUseVirtualFocus","backgroundColor","opacity"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useButton } from '@react-native-aria/button';\nimport { ComboBoxState, useComboBoxState } from '@react-stately/combobox';\nimport { useComboBox } from '@react-native-aria/combobox';\nimport { useListBox, useOption } from '@react-native-aria/listbox';\nimport { ScrollView, findNodeHandle, Platform } from 'react-native';\nimport { Item } from '@react-stately/collections';\nimport Box from '../../primitives/Box';\nimport { Pressable } from '../../primitives/Pressable';\nimport Text from '../../primitives/Text';\nimport { extractInObject } from '../../../theme/tools';\nimport { ITypeaheadProps, IComboBoxProps, layoutPropsList } from './types';\nimport { Input } from '../../primitives/Input';\nimport { useThemeProps } from '../../../hooks';\n\nexport const Typeahead = React.forwardRef(\n  (\n    {\n      onSelectedItemChange,\n      options,\n      renderItem,\n      getOptionLabel,\n      getOptionKey,\n      onChange,\n      numberOfItems,\n      ...rest\n    }: ITypeaheadProps,\n    ref?: any\n  ) => {\n    return (\n      <ComboBoxImplementation\n        {...rest}\n        onSelectionChange={onSelectedItemChange}\n        items={\n          numberOfItems !== undefined\n            ? options.slice(0, numberOfItems)\n            : options\n        }\n        onInputChange={onChange}\n        ref={ref}\n      >\n        {(item: any) => {\n          if (typeof item !== 'string' && getOptionLabel === undefined) {\n            throw new Error('Please use getOptionLabel prop');\n          }\n\n          if (item.id === undefined && getOptionKey === undefined) {\n            throw new Error('Please use getOptionKey prop');\n          }\n\n          const optionLabel = getOptionLabel ? getOptionLabel(item) : item;\n          const optionKey = getOptionKey\n            ? getOptionKey(item)\n            : item.id !== undefined\n            ? item.id\n            : optionLabel;\n\n          return (\n            <Item textValue={optionLabel} key={optionKey}>\n              {renderItem ? (\n                renderItem(item)\n              ) : (\n                <Box p={2} justifyContent=\"center\">\n                  <Text>{optionLabel}</Text>\n                </Box>\n              )}\n            </Item>\n          );\n        }}\n      </ComboBoxImplementation>\n    );\n  }\n);\n\nconst ComboBoxImplementation = React.forwardRef(\n  (props: IComboBoxProps, ref?: any) => {\n    const [layoutProps] = extractInObject(props, layoutPropsList);\n    let state = useComboBoxState(props);\n\n    let triggerRef = React.useRef(null);\n    let inputRef = React.useRef(null);\n    let listBoxRef = React.useRef(null);\n    let popoverRef = React.useRef(null);\n\n    let {\n      buttonProps: triggerProps,\n      inputProps,\n      listBoxProps,\n      labelProps,\n    } = useComboBox(\n      {\n        ...props,\n        inputRef,\n        buttonRef: triggerRef,\n        listBoxRef,\n        popoverRef,\n        menuTrigger: 'input',\n      },\n      state\n    );\n\n    const toggleIconSetter = () => {\n      if (typeof props.toggleIcon === 'function')\n        return props.toggleIcon({\n          isOpen: state.isOpen,\n        });\n      return props.toggleIcon;\n    };\n\n    let { buttonProps } = useButton(triggerProps);\n\n    return (\n      <Box flexDirection=\"row\" {...layoutProps} ref={ref}>\n        <Box flex={1}>\n          {props.label && (\n            <Text {...labelProps} pb={1}>\n              {props.label}\n            </Text>\n          )}\n          <Input\n            {...inputProps}\n            ref={inputRef}\n            InputRightElement={\n              // @ts-ignore - RN has hitSlop type inconsistent for View and Pressable!\n              <Pressable {...buttonProps} ref={triggerRef}>\n                {toggleIconSetter()}\n              </Pressable>\n            }\n          />\n\n          {state.isOpen && (\n            <ListBoxPopup\n              {...listBoxProps}\n              listBoxRef={listBoxRef}\n              popoverRef={popoverRef}\n              state={state}\n              label={props.label}\n            />\n          )}\n        </Box>\n      </Box>\n    );\n  }\n);\n\ntype IListBoxProps = {\n  popoverRef: any;\n  listBoxRef: any;\n  state: ComboBoxState<any>;\n  dropdownHeight: number;\n  label: string;\n};\n\nfunction ListBoxPopup(props: IListBoxProps) {\n  let { popoverRef, listBoxRef, state, dropdownHeight, label } = props;\n\n  let { listBoxProps } = useListBox(\n    {\n      label,\n      autoFocus: state.focusStrategy,\n      disallowEmptySelection: true,\n    },\n    state,\n    listBoxRef\n  );\n\n  return (\n    <Box ref={popoverRef}>\n      <Box position=\"absolute\" width=\"100%\" maxHeight={dropdownHeight ?? 200}>\n        <ScrollView\n          {...listBoxProps}\n          keyboardShouldPersistTaps=\"handled\"\n          ref={(node) => {\n            if (Platform.OS === 'web') {\n              listBoxRef.current = findNodeHandle(node);\n            } else {\n              listBoxRef.current = node;\n            }\n          }}\n        >\n          {[...state.collection].map((item) => (\n            <Option key={item.key} item={item} state={state} />\n          ))}\n        </ScrollView>\n      </Box>\n    </Box>\n  );\n}\n\nfunction Option({ item, state }: { item: any; state: ComboBoxState<any> }) {\n  const searchItemStyle = useThemeProps('TypeAheadSearchItem', {});\n\n  let ref = React.useRef(null);\n  let isDisabled = state.disabledKeys.has(item.key);\n  let isSelected = state.selectionManager.isSelected(item.key);\n  let isFocused = state.selectionManager.focusedKey === item.key;\n\n  let { optionProps } = useOption(\n    {\n      key: item.key,\n      isDisabled,\n      isSelected,\n      shouldFocusOnHover: true,\n      shouldUseVirtualFocus: true,\n    },\n    state,\n    ref\n  );\n\n  let backgroundColor = searchItemStyle.backgroundColor;\n  let opacity = 1;\n\n  if (isSelected) {\n    backgroundColor = searchItemStyle._focus.backgroundColor;\n  } else if (isFocused) {\n    backgroundColor = searchItemStyle._focus.backgroundColor;\n  } else if (isDisabled) {\n    opacity = 0.6;\n    backgroundColor = searchItemStyle._disabled.backgroundColor;\n  }\n\n  return (\n    <Pressable\n      {...optionProps}\n      opacity={opacity}\n      cursor={\n        isDisabled ? (Platform.OS === 'web' ? 'not-allowed' : null) : null\n      }\n      backgroundColor={backgroundColor}\n      ref={ref}\n    >\n      {item.rendered}\n    </Pressable>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}