{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Item = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Actionsheet = require(\"../../composites/Actionsheet\");\n\nvar _Select = require(\"./Select\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Select/SelectItem.tsx\";\n\nvar Item = function Item(_ref, ref) {\n  var isDisabled = _ref.isDisabled,\n      label = _ref.label,\n      value = _ref.value,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"isDisabled\", \"label\", \"value\"]);\n\n  var _React$useContext = _react.default.useContext(_Select.SelectContext),\n      onValueChange = _React$useContext.onValueChange,\n      selectedValue = _React$useContext.selectedValue,\n      _selectedItem = _React$useContext._selectedItem,\n      _item = _React$useContext._item;\n\n  if (_reactNative.Platform.OS !== 'web') {\n    var isSelected = selectedValue === value;\n    return _react.default.createElement(_Actionsheet.Actionsheet.Item, (0, _extends2.default)({\n      ref: ref,\n      onPress: function onPress() {\n        if (!isDisabled) {\n          onValueChange(value);\n        }\n      },\n      accessibilityState: {\n        selected: isSelected\n      }\n    }, _item, isSelected && _selectedItem, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }), label);\n  } else {\n    return _react.default.createElement(\"option\", {\n      ref: ref,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, label);\n  }\n};\n\nexports.Item = Item;\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Item));\n\nexports.default = _default;","map":{"version":3,"sources":["SelectItem.tsx"],"names":["Item","isDisabled","label","value","props","onValueChange","selectedValue","_selectedItem","_item","React","SelectContext","Platform","isSelected","selected"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAGA,IAAA,YAAA,GAAA,OAAA,gCAAA;;AACA,IAAA,OAAA,GAAA,OAAA,YAAA;;;;;AAEO,IAAMA,IAAI,GAAJA,SAAAA,IAAAA,CAAO,IAAPA,EAAO,GAAPA,EAGR;AAFDC,MAAAA,UAEC,GAAA,IAAA,CAFDA,UAAAA;AAAAA,MAAYC,KAEX,GAAA,IAAA,CAFWA,KAAZD;AAAAA,MAAmBE,KAElB,GAAA,IAAA,CAFkBA,KAAnBF;AAAAA,MAA6BG,KAE5B,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,YAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAFDH;;AAEC,MAAA,iBAAA,GAMCQ,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAiBC,OAAAA,CANlB,aAMCD,CAND;AAAA,MAEDJ,aAFC,GAAA,iBAAA,CAAA,aAAA;AAAA,MAGDC,aAHC,GAAA,iBAAA,CAAA,aAAA;AAAA,MAIDC,aAJC,GAAA,iBAAA,CAAA,aAAA;AAAA,MAKDC,KALC,GAAA,iBAAA,CAAA,KAAA;;AAOH,MAAIG,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAJ,KAAA,EAA2B;AACzB,QAAMC,UAAU,GAAGN,aAAa,KAAhC,KAAA;AAEA,WACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,WAAC,CAAD,IAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AACE,MAAA,GAAG,EADL,GAAA;AAEE,MAAA,OAAO,EAAE,SAAA,OAAA,GAAM;AACb,YAAI,CAAJ,UAAA,EAAiB;AACfD,UAAAA,aAAa,CAAbA,KAAa,CAAbA;AAEH;AANH,OAAA;AAOE,MAAA,kBAAkB,EAAE;AAAEQ,QAAAA,QAAQ,EAPhC;AAOsB;AAPtB,KAAA,EAAA,KAAA,EASOD,UAAU,IATjB,aAAA,EAAA,KAAA,EAAA;AAAA,MAAA,MAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,CAAA,EADF,KACE,CADF;AAHF,GAAA,MAmBO;AACL,WACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,MAAA,GAAG,EAAX,GAAA;AAAkB,MAAA,KAAK,EAAvB,KAAA;AAAA,MAAA,MAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,EADF,KACE,CADF;AAMH;AApCM,CAAA;;;;eAsCQ,CAAA,GAAA,MAAA,CAAA,IAAA,EAAK,CAAA,GAAA,MAAA,CAAA,UAAA,EAAL,IAAK,CAAL,C","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport type { ISelectItemProps } from './types';\nimport { Platform } from 'react-native';\nimport { Actionsheet } from '../../composites/Actionsheet';\nimport { SelectContext } from './Select';\n\nexport const Item = (\n  { isDisabled, label, value, ...props }: ISelectItemProps,\n  ref?: any\n) => {\n  const {\n    onValueChange,\n    selectedValue,\n    _selectedItem,\n    _item,\n  } = React.useContext(SelectContext);\n  if (Platform.OS !== 'web') {\n    const isSelected = selectedValue === value;\n\n    return (\n      <Actionsheet.Item\n        ref={ref}\n        onPress={() => {\n          if (!isDisabled) {\n            onValueChange(value);\n          }\n        }}\n        accessibilityState={{ selected: isSelected }}\n        {..._item}\n        {...(isSelected && _selectedItem)}\n        {...props}\n      >\n        {label}\n      </Actionsheet.Item>\n    );\n  } else {\n    return (\n      <option ref={ref} value={value}>\n        {label}\n      </option>\n    );\n  }\n};\n\nexport default memo(forwardRef(Item));\n"]},"metadata":{},"sourceType":"script"}