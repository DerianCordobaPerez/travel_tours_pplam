{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mode = mode;\nexports.randomColor = randomColor;\nexports.isLight = exports.isDark = exports.tone = exports.getColor = exports.transparentize = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.isempty\"));\n\nvar _tinycolor = _interopRequireDefault(require(\"tinycolor2\"));\n\nfunction mode(light, dark) {\n  return function (props) {\n    return props.colorMode === 'dark' ? dark : light;\n  };\n}\n\nvar transparentize = function transparentize(color, opacity) {\n  return function (theme) {\n    var raw = getColor(theme, color);\n    return (0, _tinycolor.default)(raw).setAlpha(opacity).toRgbString();\n  };\n};\n\nexports.transparentize = transparentize;\n\nvar getColor = function getColor(theme, color, fallback) {\n  var hex = (0, _lodash.default)(theme, \"colors.\" + color, color);\n  var isValid = (0, _tinycolor.default)(hex).isValid();\n  return isValid ? hex : fallback;\n};\n\nexports.getColor = getColor;\n\nvar tone = function tone(color) {\n  return function (theme) {\n    var hex = getColor(theme, color);\n    var isDark = (0, _tinycolor.default)(hex).isDark();\n    return isDark ? 'dark' : 'light';\n  };\n};\n\nexports.tone = tone;\n\nvar isDark = function isDark(color) {\n  return function (theme) {\n    return tone(color)(theme) === 'dark';\n  };\n};\n\nexports.isDark = isDark;\n\nvar isLight = function isLight(color) {\n  return function (theme) {\n    return tone(color)(theme) === 'light';\n  };\n};\n\nexports.isLight = isLight;\n\nfunction randomColor(opts) {\n  var fallback = _tinycolor.default.random().toHexString();\n\n  if (!opts || (0, _lodash2.default)(opts)) {\n    return fallback;\n  }\n\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n\n  return fallback;\n}\n\nfunction randomFromList(list) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction randomColorFromList(str, list) {\n  var index = 0;\n  if (str.length === 0) return list[0];\n\n  for (var i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n\n  index = (index % list.length + list.length) % list.length;\n  return list[index];\n}\n\nfunction randomColorFromString(str) {\n  var hash = 0;\n  if (str.length === 0) return hash.toString();\n\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n\n  var color = '#';\n\n  for (var j = 0; j < 3; j++) {\n    var value = hash >> j * 8 & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}","map":{"version":3,"sources":["colors.ts"],"names":["props","transparentize","raw","getColor","hex","isValid","tone","isDark","isLight","fallback","Color","opts","randomColorFromList","randomColorFromString","randomFromList","list","Math","index","str","i","hash","color","j","value"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport isEmpty from 'lodash.isempty';\nimport Color from 'tinycolor2';\nimport type { Dict } from './utils';\n\nexport function mode(light: any, dark: any) {\n  return (props: any) => (props.colorMode === 'dark' ? dark : light);\n}\n\nexport const transparentize = (color: string, opacity: number) => (\n  theme: Dict\n) => {\n  const raw = getColor(theme, color);\n  return Color(raw).setAlpha(opacity).toRgbString();\n};\n\nexport const getColor = (theme: Dict, color: string, fallback?: string) => {\n  const hex = get(theme, `colors.${color}`, color);\n  const isValid = Color(hex).isValid();\n  return isValid ? hex : fallback;\n};\n\nexport const tone = (color: string) => (theme: Dict) => {\n  const hex = getColor(theme, color);\n  const isDark = Color(hex).isDark();\n  return isDark ? 'dark' : 'light';\n};\n\nexport const isDark = (color: string) => (theme: Dict) =>\n  tone(color)(theme) === 'dark';\n\nexport const isLight = (color: string) => (theme: Dict) =>\n  tone(color)(theme) === 'light';\n\ninterface RandomColorOptions {\n  /**\n   * If passed, string will be used to generate\n   * random color\n   */\n  string?: string;\n  /**\n   * List of colors to pick from at random\n   */\n  colors?: string[];\n}\nexport function randomColor(opts?: RandomColorOptions) {\n  const fallback = Color.random().toHexString();\n\n  if (!opts || isEmpty(opts)) {\n    return fallback;\n  }\n\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n\n  return fallback;\n}\n\nfunction randomFromList(list: string[]) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction randomColorFromList(str: string, list: string[]) {\n  let index = 0;\n  if (str.length === 0) return list[0];\n  for (let i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n  index = ((index % list.length) + list.length) % list.length;\n  return list[index];\n}\n\nfunction randomColorFromString(str: string) {\n  let hash = 0;\n  if (str.length === 0) return hash.toString();\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n  let color = '#';\n  for (let j = 0; j < 3; j++) {\n    const value = (hash >> (j * 8)) & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n  return color;\n}\n"]},"metadata":{},"sourceType":"script"}