{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _primitives = require(\"../../primitives\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Avatar/Avatar.tsx\";\n\nvar Avatar = function Avatar(_ref, ref) {\n  var wrapperRef = _ref.wrapperRef,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"wrapperRef\"]);\n\n  var _React$useState = _react.default.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      error = _React$useState2[0],\n      setError = _React$useState2[1];\n\n  var size = props.size,\n      style = props.style,\n      source = props.source,\n      children = props.children,\n      remainingProps = (0, _objectWithoutProperties2.default)(props, [\"size\", \"style\", \"source\", \"children\"]);\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('Avatar', (0, _extends2.default)({}, remainingProps, {\n    name: 'avatar',\n    size: size\n  })),\n      _text = _usePropsResolution._text,\n      newProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"_text\"]);\n\n  var Badge = _react.default.createElement(_react.default.Fragment, null);\n\n  var remainingChildren = [];\n\n  _react.default.Children.map(children, function (child, key) {\n    if (typeof (child == null ? void 0 : child.type) === 'object' && (child == null ? void 0 : child.type.displayName) === 'AvatarBadge') {\n      Badge = child;\n    } else {\n      remainingChildren.push(typeof child === 'string' ? _react.default.createElement(_primitives.Text, (0, _extends2.default)({\n        key: 'avatar-children-' + key\n      }, _text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }), child) : child);\n    }\n  });\n\n  var imageFitStyle = {\n    height: '100%',\n    width: '100%'\n  };\n  return _react.default.createElement(_primitives.Box, (0, _extends2.default)({}, newProps, {\n    style: style,\n    ref: wrapperRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }), source && !error ? _react.default.createElement(_primitives.Image, {\n    borderRadius: newProps.borderRadius,\n    source: source,\n    alt: '--',\n    _alt: _text,\n    style: [style, imageFitStyle],\n    onError: function onError() {\n      setError(true);\n    },\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }) : remainingChildren.length === 0 ? _react.default.createElement(_primitives.Text, (0, _extends2.default)({}, _text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), \"--\") : remainingChildren, Badge);\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Avatar));\n\nexports.default = _default;","map":{"version":3,"sources":["Avatar.tsx"],"names":["Avatar","wrapperRef","props","error","setError","React","size","style","source","children","remainingProps","_text","newProps","name","Badge","remainingChildren","child","imageFitStyle","height","width"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Box, Image, Text } from '../../primitives';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IAvatarProps } from './types';\n\nconst Avatar = ({ wrapperRef, ...props }: IAvatarProps, ref: any) => {\n  const [error, setError] = React.useState(false);\n  const { size, style, source, children, ...remainingProps } = props;\n\n  const { _text, ...newProps } = usePropsResolution('Avatar', {\n    ...remainingProps,\n    name: 'avatar',\n    size,\n  });\n\n  let Badge = <></>;\n  let remainingChildren: JSX.Element[] = [];\n  //  Pop Badge from children\n  React.Children.map(children, (child, key) => {\n    if (\n      typeof child?.type === 'object' &&\n      child?.type.displayName === 'AvatarBadge'\n    ) {\n      Badge = child;\n    } else {\n      remainingChildren.push(\n        typeof child === 'string' ? (\n          <Text key={'avatar-children-' + key} {..._text}>\n            {child}\n          </Text>\n        ) : (\n          child\n        )\n      );\n    }\n  });\n\n  const imageFitStyle = { height: '100%', width: '100%' };\n\n  return (\n    <Box {...newProps} style={style} ref={wrapperRef}>\n      {source && !error ? (\n        <Image\n          borderRadius={newProps.borderRadius}\n          source={source}\n          alt={'--'}\n          _alt={_text}\n          style={[style, imageFitStyle]}\n          onError={() => {\n            setError(true);\n          }}\n          ref={ref}\n        />\n      ) : remainingChildren.length === 0 ? (\n        <Text {..._text}>--</Text> // default alternate\n      ) : (\n        remainingChildren\n      )}\n      {Badge}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Avatar));\n"]},"metadata":{},"sourceType":"script"}