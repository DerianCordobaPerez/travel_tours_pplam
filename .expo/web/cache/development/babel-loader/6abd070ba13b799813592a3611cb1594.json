{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _Flex = _interopRequireDefault(require(\"../../primitives/Flex\"));\n\nvar _BreadcrumbSeparator = require(\"./BreadcrumbSeparator\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Breadcrumb/Breadcrumb.tsx\";\n\nvar Breadcrumb = function Breadcrumb(_ref, ref) {\n  var style = _ref.style,\n      children = _ref.children,\n      separator = _ref.separator,\n      spacing = _ref.spacing,\n      _text = _ref._text,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"style\", \"children\", \"separator\", \"spacing\", \"_text\"]);\n  var textProps = (0, _extends2.default)({}, _text);\n  var newProps = (0, _hooks.useThemeProps)('Breadcrumb', props);\n  return _react.default.createElement(_Flex.default, (0, _extends2.default)({}, newProps, {\n    ref: ref,\n    style: style,\n    accessibilityRole: _reactNative.Platform.OS === 'web' ? 'navigation' : undefined,\n    accessibilityLabel: \"Breadcrumb\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }), children && !children.length ? children : (0, _BreadcrumbSeparator.getBreadcrumbSeparator)(children, separator, textProps, spacing));\n};\n\nvar _default = _react.default.memo(_react.default.forwardRef(Breadcrumb));\n\nexports.default = _default;","map":{"version":3,"sources":["Breadcrumb.tsx"],"names":["Breadcrumb","style","children","separator","spacing","_text","props","textProps","newProps","Platform","React"],"mappings":";;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,yBAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,OAAA,yBAAA;;;;;AAEA,IAAMA,UAAU,GAAVA,SAAAA,UAAAA,CAAa,IAAbA,EAAa,GAAbA,EAGD;AAFDC,MAAAA,KAEC,GAAA,IAAA,CAFDA,KAAAA;AAAAA,MAAOC,QAEN,GAAA,IAAA,CAFMA,QAAPD;AAAAA,MAAiBE,SAEhB,GAAA,IAAA,CAFgBA,SAAjBF;AAAAA,MAA4BG,OAE3B,GAAA,IAAA,CAF2BA,OAA5BH;AAAAA,MAAqCI,KAEpC,GAAA,IAAA,CAFoCA,KAArCJ;AAAAA,MAA+CK,KAE9C,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,WAAA,EAAA,SAAA,EAAA,OAAA,CAAA,CAFDL;AAGF,MAAMM,SAAS,GAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAf,KAAe,CAAf;AACA,MAAIC,QAAQ,GAAG,CAAA,GAAA,MAAA,CAAA,aAAA,EAAA,YAAA,EAAf,KAAe,CAAf;AACA,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,QAAA,EAAA;AAEE,IAAA,GAAG,EAFL,GAAA;AAGE,IAAA,KAAK,EAHP,KAAA;AAKE,IAAA,iBAAiB,EAAEC,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GAAAA,YAAAA,GALrB,SAAA;AAME,IAAA,kBAAkB,EANpB,YAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EAQGP,QAAQ,IAAI,CAACA,QAAQ,CAArBA,MAAAA,GAAAA,QAAAA,GAEG,CAAA,GAAA,oBAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAXR,OAWQ,CAVN,CADF;AANF,CAAA;;eAqBeQ,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAWA,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAXA,UAAWA,CAAXA,C","sourcesContent":["import React from 'react';\nimport { Platform } from 'react-native';\nimport { useThemeProps } from '../../../hooks';\nimport Flex from '../../primitives/Flex';\nimport { getBreadcrumbSeparator } from './BreadcrumbSeparator';\nimport type { IBreadcrumbProps } from './types';\nconst Breadcrumb = (\n  { style, children, separator, spacing, _text, ...props }: IBreadcrumbProps,\n  ref: any\n) => {\n  const textProps = { ..._text };\n  let newProps = useThemeProps('Breadcrumb', props);\n  return (\n    <Flex\n      {...newProps}\n      ref={ref}\n      style={style}\n      // @ts-ignore - Web only prop\n      accessibilityRole={Platform.OS === 'web' ? 'navigation' : undefined}\n      accessibilityLabel=\"Breadcrumb\"\n    >\n      {children && !children.length\n        ? children\n        : getBreadcrumbSeparator(children, separator, textProps, spacing)}\n    </Flex>\n  );\n};\nexport default React.memo(React.forwardRef(Breadcrumb));\nexport type { IBreadcrumbProps };\n"]},"metadata":{},"sourceType":"script"}