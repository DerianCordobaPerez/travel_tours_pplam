{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _FormControl = require(\"../FormControl\");\n\nvar _Context = require(\"./Context\");\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/NumberInput/NumberInput.tsx\";\n\nvar NumberInput = function NumberInput(_ref, ref) {\n  var children = _ref.children,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\"]);\n\n  var _useThemeProps = (0, _hooks.useThemeProps)('NumberInput', props),\n      defaultValue = _useThemeProps.defaultValue,\n      keepWithinRange = _useThemeProps.keepWithinRange,\n      value = _useThemeProps.value,\n      min = _useThemeProps.min,\n      max = _useThemeProps.max,\n      onChange = _useThemeProps.onChange,\n      newProps = (0, _objectWithoutProperties2.default)(_useThemeProps, [\"defaultValue\", \"keepWithinRange\", \"value\", \"min\", \"max\", \"onChange\"]);\n\n  var formControlContext = (0, _FormControl.useFormControlContext)();\n\n  var _React$useState = _react.default.useState(parseInt(value || defaultValue, 10)),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      numberInputValue = _React$useState2[0],\n      setNumberInputValue = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState(null),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      numberInputStepper = _React$useState4[0],\n      setNumberInputStepper = _React$useState4[1];\n\n  var handleChange = function handleChange(newValue) {\n    var temp = newValue;\n    setNumberInputValue(temp);\n\n    if (keepWithinRange) {\n      if (newValue < min) setNumberInputValue(min);else if (newValue > max) setNumberInputValue(max);\n    }\n\n    onChange && onChange(temp);\n  };\n\n  var handleChangeWithoutCheck = function handleChangeWithoutCheck(newValue) {\n    var temp = newValue;\n    setNumberInputValue(temp);\n  };\n\n  _react.default.useEffect(function () {\n    if (value !== undefined && value != numberInputValue) setNumberInputValue(value);\n  }, [value, numberInputValue, setNumberInputValue]);\n\n  return _react.default.createElement(_Box.default, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Context.NumberInputContext.Provider, {\n    value: (0, _extends2.default)({}, formControlContext, newProps, {\n      min: min,\n      max: max,\n      handleChange: handleChange,\n      handleChangeWithoutCheck: handleChangeWithoutCheck,\n      numberInputValue: numberInputValue,\n      numberInputStepper: numberInputStepper,\n      setNumberInputStepper: setNumberInputStepper,\n      isControlled: value !== undefined\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nvar _default = _react.default.memo(_react.default.forwardRef(NumberInput));\n\nexports.default = _default;","map":{"version":3,"sources":["NumberInput.tsx"],"names":["NumberInput","children","props","defaultValue","keepWithinRange","value","min","max","onChange","newProps","formControlContext","numberInputValue","setNumberInputValue","React","parseInt","numberInputStepper","setNumberInputStepper","handleChange","temp","newValue","handleChangeWithoutCheck","isControlled"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,YAAA,GAAA,OAAA,kBAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,aAAA;;AACA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA;;;;;AAEA,IAAMA,WAAW,GAAXA,SAAAA,WAAAA,CAAc,IAAdA,EAAc,GAAdA,EAAwE;AAAvDC,MAAAA,QAAuD,GAAA,IAAA,CAAvDA,QAAAA;AAAAA,MAAaC,KAA0C,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,UAAA,CAAA,CAAvDD;;AAAuD,MAAA,cAAA,GASxE,CAAA,GAAA,MAAA,CAAA,aAAA,EAAA,aAAA,EATwE,KASxE,CATwE;AAAA,MAE1EE,YAF0E,GAAA,cAAA,CAAA,YAAA;AAAA,MAG1EC,eAH0E,GAAA,cAAA,CAAA,eAAA;AAAA,MAI1EC,KAJ0E,GAAA,cAAA,CAAA,KAAA;AAAA,MAK1EC,GAL0E,GAAA,cAAA,CAAA,GAAA;AAAA,MAM1EC,GAN0E,GAAA,cAAA,CAAA,GAAA;AAAA,MAO1EC,QAP0E,GAAA,cAAA,CAAA,QAAA;AAAA,MAQvEC,QARuE,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,cAAA,EAAA,CAAA,cAAA,EAAA,iBAAA,EAAA,OAAA,EAAA,KAAA,EAAA,KAAA,EAAA,UAAA,CAAA,CAAA;;AAU5E,MAAMC,kBAAkB,GAAG,CAAA,GAAA,YAAA,CAA3B,qBAA2B,GAA3B;;AAV4E,MAAA,eAAA,GAY5BG,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAC9CC,QAAQ,CAACT,KAAK,IAAN,YAAA,EAbkE,EAalE,CADsCQ,CAZ4B;AAAA,MAAA,gBAAA,GAAA,CAAA,GAAA,eAAA,CAAA,OAAA,EAAA,eAAA,EAAA,CAAA,CAAA;AAAA,MAYrEF,gBAZqE,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAYnDC,mBAZmD,GAAA,gBAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,gBAAA,GAexBC,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAfwB,IAexBA,CAfwB;AAAA,MAAA,gBAAA,GAAA,CAAA,GAAA,eAAA,CAAA,OAAA,EAAA,gBAAA,EAAA,CAAA,CAAA;AAAA,MAerEE,kBAfqE,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAejDC,qBAfiD,GAAA,gBAAA,CAAA,CAAA,CAAA;;AAgB5E,MAAMC,YAAY,GAAZA,SAAAA,YAAAA,CAAe,QAAfA,EAAqC;AACzC,QAAMC,IAAI,GAAV,QAAA;AACAN,IAAAA,mBAAmB,CAAnBA,IAAmB,CAAnBA;;AACA,QAAA,eAAA,EAAqB;AACnB,UAAIO,QAAQ,GAAZ,GAAA,EAAoBP,mBAAmB,CAAvC,GAAuC,CAAnBA,CAApB,KACK,IAAIO,QAAQ,GAAZ,GAAA,EAAoBP,mBAAmB,CAAnBA,GAAmB,CAAnBA;AAG3BJ;;AAAAA,IAAAA,QAAQ,IAAIA,QAAQ,CAApBA,IAAoB,CAApBA;AARF,GAAA;;AAUA,MAAMY,wBAAwB,GAAxBA,SAAAA,wBAAAA,CAA2B,QAA3BA,EAAiD;AACrD,QAAMF,IAAI,GAAV,QAAA;AACAN,IAAAA,mBAAmB,CAAnBA,IAAmB,CAAnBA;AAFF,GAAA;;AAKAC,EAAAA,MAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAgB,YAAM;AACpB,QAAIR,KAAK,KAALA,SAAAA,IAAuBA,KAAK,IAAhC,gBAAA,EACEO,mBAAmB,CAAnBA,KAAmB,CAAnBA;AAFJC,GAAAA,EAGG,CAAA,KAAA,EAAA,gBAAA,EAHHA,mBAGG,CAHHA;;AAIA,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,EAAA;AAAK,IAAA,GAAG,EAAR,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,QAAA,CAAD,kBAAC,CAAD,QAAA,EAAA;AACE,IAAA,KAAK,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,kBAAA,EAAA,QAAA,EAAA;AAGHP,MAAAA,GAAG,EAHA,GAAA;AAIHC,MAAAA,GAAG,EAJA,GAAA;AAKHU,MAAAA,YAAY,EALT,YAAA;AAMHG,MAAAA,wBAAwB,EANrB,wBAAA;AAOHT,MAAAA,gBAAgB,EAPb,gBAAA;AAQHI,MAAAA,kBAAkB,EARf,kBAAA;AASHC,MAAAA,qBAAqB,EATlB,qBAAA;AAUHK,MAAAA,YAAY,EAAEhB,KAAK,KAXvB;AACO,KAAA,CADP;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAFJ,QAEI,CADF,CADF;AAnCF,CAAA;;eAyDeQ,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAWA,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAXA,WAAWA,CAAXA,C","sourcesContent":["import React from 'react';\nimport { useThemeProps } from '../../../hooks';\nimport { useFormControlContext } from '../FormControl';\nimport type { INumberInputProps } from './types';\nimport { NumberInputContext } from './Context';\nimport Box from '../../primitives/Box';\n\nconst NumberInput = ({ children, ...props }: INumberInputProps, ref?: any) => {\n  const {\n    defaultValue,\n    keepWithinRange,\n    value,\n    min,\n    max,\n    onChange,\n    ...newProps\n  } = useThemeProps('NumberInput', props);\n  const formControlContext = useFormControlContext();\n\n  const [numberInputValue, setNumberInputValue] = React.useState(\n    parseInt(value || defaultValue, 10)\n  );\n  const [numberInputStepper, setNumberInputStepper] = React.useState(null);\n  const handleChange = (newValue: number) => {\n    const temp = newValue;\n    setNumberInputValue(temp);\n    if (keepWithinRange) {\n      if (newValue < min) setNumberInputValue(min);\n      else if (newValue > max) setNumberInputValue(max);\n    }\n    //NOTE: only calling onChange on stepper click or blur event of input.\n    onChange && onChange(temp);\n  };\n  const handleChangeWithoutCheck = (newValue: number) => {\n    const temp = newValue;\n    setNumberInputValue(temp);\n  };\n\n  React.useEffect(() => {\n    if (value !== undefined && value != numberInputValue)\n      setNumberInputValue(value);\n  }, [value, numberInputValue, setNumberInputValue]);\n  return (\n    <Box ref={ref}>\n      <NumberInputContext.Provider\n        value={{\n          ...formControlContext,\n          ...newProps,\n          min,\n          max,\n          handleChange,\n          handleChangeWithoutCheck,\n          numberInputValue,\n          numberInputStepper,\n          setNumberInputStepper,\n          isControlled: value !== undefined,\n        }}\n      >\n        {children}\n      </NumberInputContext.Provider>\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(NumberInput));\n"]},"metadata":{},"sourceType":"script"}