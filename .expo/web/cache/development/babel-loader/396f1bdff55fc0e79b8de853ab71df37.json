{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _tools = require(\"../tools\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar baseStyle = function baseStyle(props) {\n  var onTrackColor = props.onTrackColor,\n      offTrackColor = props.offTrackColor,\n      onThumbColor = props.onThumbColor,\n      offThumbColor = props.offThumbColor;\n  var colorScheme = (0, _tools.getColorScheme)(props);\n  return {\n    offTrackColor: offTrackColor != null ? offTrackColor : (0, _tools.mode)(_reactNative.Platform.OS !== 'ios' ? 'gray.400' : 'gray.200', _reactNative.Platform.OS !== 'ios' ? 'gray.700' : 'gray.600')(props),\n    onTrackColor: onTrackColor != null ? onTrackColor : (0, _tools.mode)(_reactNative.Platform.OS !== 'ios' ? colorScheme + \".300\" : colorScheme + \".500\", _reactNative.Platform.OS !== 'ios' ? colorScheme + \".700\" : colorScheme + \".500\")(props),\n    onThumbColor: onThumbColor != null ? onThumbColor : (0, _tools.mode)(_reactNative.Platform.OS !== 'ios' ? colorScheme + \".600\" : 'white', _reactNative.Platform.OS !== 'ios' ? colorScheme + \".500\" : 'white')(props),\n    offThumbColor: offThumbColor != null ? offThumbColor : (0, _tools.mode)(_reactNative.Platform.OS !== 'ios' ? 'gray.100' : 'white', _reactNative.Platform.OS !== 'ios' ? 'gray.200' : 'white')(props)\n  };\n};\n\nvar sizes = {\n  sm: {\n    style: {\n      transform: [{\n        scale: 0.75\n      }]\n    }\n  },\n  md: {},\n  lg: {\n    style: {\n      transform: [{\n        scale: 1.25\n      }]\n    },\n    margin: 1\n  }\n};\nvar defaultProps = {\n  size: 'md',\n  colorScheme: 'primary'\n};\nvar _default = {\n  baseStyle: baseStyle,\n  sizes: sizes,\n  defaultProps: defaultProps\n};\nexports.default = _default;","map":{"version":3,"sources":["switch.ts"],"names":["baseStyle","onTrackColor","offTrackColor","onThumbColor","offThumbColor","props","colorScheme","Platform","sizes","sm","style","transform","scale","md","lg","margin","defaultProps","size"],"mappings":";;;;;AAAA,IAAA,MAAA,GAAA,OAAA,YAAA;;;;AAGA,IAAMA,SAAS,GAATA,SAAAA,SAAAA,CAAY,KAAZA,EAA4C;AAAA,MAC1CC,YAD0C,GACmBI,KADnB,CAAA,YAAA;AAAA,MAC5BH,aAD4B,GACmBG,KADnB,CAAA,aAAA;AAAA,MACbF,YADa,GACmBE,KADnB,CAAA,YAAA;AAAA,MACCD,aADD,GACmBC,KADnB,CAAA,aAAA;AAEhD,MAAIC,WAAW,GAAG,CAAA,GAAA,MAAA,CAAA,cAAA,EAAlB,KAAkB,CAAlB;AAEA,SAAO;AACLJ,IAAAA,aAAa,EACXA,aADW,IAAA,IACXA,GADW,aACXA,GACA,CAAA,GAAA,MAAA,CAAA,IAAA,EACEK,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GAAAA,UAAAA,GADF,UAAA,EAEEA,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GAAAA,UAAAA,GAFF,UAAA,EAHG,KAGH,CAHG;AAOLN,IAAAA,YAAY,EACVA,YADU,IAAA,IACVA,GADU,YACVA,GACA,CAAA,GAAA,MAAA,CAAA,IAAA,EACEM,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GAA2BD,WAA3BC,GAAAA,MAAAA,GAAkDD,WAAlDC,GADF,MAAA,EAEEA,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GAA2BD,WAA3BC,GAAAA,MAAAA,GAAkDD,WAAlDC,GAFF,MAAA,EATG,KASH,CATG;AAaLJ,IAAAA,YAAY,EACVA,YADU,IAAA,IACVA,GADU,YACVA,GACA,CAAA,GAAA,MAAA,CAAA,IAAA,EACEI,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GAA2BD,WAA3BC,GAAAA,MAAAA,GADF,OAAA,EAEEA,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GAA2BD,WAA3BC,GAAAA,MAAAA,GAFF,OAAA,EAfG,KAeH,CAfG;AAmBLH,IAAAA,aAAa,EACXA,aADW,IAAA,IACXA,GADW,aACXA,GACA,CAAA,GAAA,MAAA,CAAA,IAAA,EACEG,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GAAAA,UAAAA,GADF,OAAA,EAEEA,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GAAAA,UAAAA,GAFF,OAAA,EArBJ,KAqBI;AArBG,GAAP;AAJF,CAAA;;AAgCA,IAAMC,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE;AACFC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAHX;AAGI,OAAD;AADN;AADL,GADQ;AAMZC,EAAAA,EAAE,EANU,EAAA;AAOZC,EAAAA,EAAE,EAAE;AACFJ,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAFnB;AAEY,OAAD;AADN,KADL;AAIFG,IAAAA,MAAM,EAXV;AAOM;AAPQ,CAAd;AAeA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EADe,IAAA;AAEnBX,EAAAA,WAAW,EAFb;AAAqB,CAArB;eAKe;AACbN,EAAAA,SAAS,EADI,SAAA;AAEbQ,EAAAA,KAAK,EAFQ,KAAA;AAGbQ,EAAAA,YAAY,EAHC;AAAA,C","sourcesContent":["import { mode, getColorScheme } from '../tools';\nimport { Platform } from 'react-native';\n\nconst baseStyle = (props: Record<string, any>) => {\n  let { onTrackColor, offTrackColor, onThumbColor, offThumbColor } = props;\n  let colorScheme = getColorScheme(props);\n\n  return {\n    offTrackColor:\n      offTrackColor ??\n      mode(\n        Platform.OS !== 'ios' ? 'gray.400' : 'gray.200',\n        Platform.OS !== 'ios' ? 'gray.700' : 'gray.600'\n      )(props),\n    onTrackColor:\n      onTrackColor ??\n      mode(\n        Platform.OS !== 'ios' ? `${colorScheme}.300` : `${colorScheme}.500`,\n        Platform.OS !== 'ios' ? `${colorScheme}.700` : `${colorScheme}.500`\n      )(props),\n    onThumbColor:\n      onThumbColor ??\n      mode(\n        Platform.OS !== 'ios' ? `${colorScheme}.600` : 'white',\n        Platform.OS !== 'ios' ? `${colorScheme}.500` : 'white'\n      )(props),\n    offThumbColor:\n      offThumbColor ??\n      mode(\n        Platform.OS !== 'ios' ? 'gray.100' : 'white',\n        Platform.OS !== 'ios' ? 'gray.200' : 'white'\n      )(props),\n  };\n};\n\nconst sizes = {\n  sm: {\n    style: {\n      transform: [{ scale: 0.75 }],\n    },\n  },\n  md: {},\n  lg: {\n    style: {\n      transform: [{ scale: 1.25 }],\n    },\n    margin: 1,\n  },\n};\n\nconst defaultProps = {\n  size: 'md',\n  colorScheme: 'primary',\n};\n\nexport default {\n  baseStyle,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"script"}