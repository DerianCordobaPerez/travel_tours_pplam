{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SectionList = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _styled = require(\"../../../utils/styled\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/basic/SectionList/SectionList.tsx\";\n\nvar StyledSectionList = (0, _styled.makeStyledBox)(_reactNative.SectionList);\nvar SectionList = (0, _react.forwardRef)(function (props, ref) {\n  var _usePropsResolution = (0, _hooks.usePropsResolution)('SectionList', props, {\n    ignoreProps: ['sections', 'renderItem', 'keyExtractor', 'renderSectionHeader']\n  }),\n      resolvedProps = (0, _extends2.default)({}, _usePropsResolution);\n\n  return _react.default.createElement(StyledSectionList, (0, _extends2.default)({}, resolvedProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }));\n});\nexports.SectionList = SectionList;","map":{"version":3,"sources":["SectionList.tsx"],"names":["StyledSectionList","RNSectionList","SectionList","resolvedProps","ignoreProps"],"mappings":";;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,OAAA,GAAA,OAAA,yBAAA;;;;;AAGA,IAAMA,iBAAsB,GAAG,CAAA,GAAA,OAAA,CAAA,aAAA,EAAcC,YAAAA,CAA7C,WAA+B,CAA/B;AAEO,IAAMC,WAAW,GAAG,CAAA,GAAA,MAAA,CAAA,UAAA,EAAW,UAAA,KAAA,EAAA,GAAA,EAAwC;AAAA,MAAA,mBAAA,GAC/C,CAAA,GAAA,MAAA,CAAA,kBAAA,EAAA,aAAA,EAAA,KAAA,EAAyC;AACpEE,IAAAA,WAAW,EAAE,CAAA,UAAA,EAAA,YAAA,EAAA,cAAA,EAF6D,qBAE7D;AADuD,GAAzC,CAD+C;AAAA,MACjED,aADiE,GAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,mBAAA,CAAA;;AAU5E,SAAO,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,aAAA,EAAA;AAAsC,IAAA,GAAG,EAAzC,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAP;AAAO;AAAA,GAAA,CAAA,CAAP;AAVK,CAAoB,CAApB","sourcesContent":["import React, { forwardRef } from 'react';\nimport { SectionList as RNSectionList } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledBox } from '../../../utils/styled';\nimport type { ISectionListProps } from './types';\n\nconst StyledSectionList: any = makeStyledBox(RNSectionList);\n\nexport const SectionList = forwardRef((props: ISectionListProps, ref: any) => {\n  const { ...resolvedProps } = usePropsResolution('SectionList', props, {\n    ignoreProps: [\n      'sections',\n      'renderItem',\n      'keyExtractor',\n      'renderSectionHeader',\n    ],\n  });\n\n  return <StyledSectionList {...resolvedProps} ref={ref} />;\n});\n"]},"metadata":{},"sourceType":"script"}