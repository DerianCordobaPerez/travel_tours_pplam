{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _slider = require(\"@react-stately/slider\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _Box = _interopRequireDefault(require(\"../Box\"));\n\nvar _Context = require(\"./Context\");\n\nvar _slider2 = require(\"@react-native-aria/slider\");\n\nvar _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Slider/Slider.tsx\";\n\nfunction Slider(props, ref) {\n  var _props$accessibilityL;\n\n  var newProps = (0, _extends2.default)({}, props, {\n    'aria-label': (_props$accessibilityL = props.accessibilityLabel) != null ? _props$accessibilityL : 'Slider'\n  });\n\n  if (typeof props.value === 'number') {\n    newProps.value = [props.value];\n  }\n\n  if (typeof props.defaultValue === 'number') {\n    newProps.defaultValue = [props.defaultValue];\n  }\n\n  props = newProps;\n\n  var _useLayout = (0, _hooks.useLayout)(),\n      onLayout = _useLayout.onLayout,\n      trackLayout = _useLayout.layout;\n\n  var state = (0, _slider.useSliderState)((0, _extends2.default)({}, props, {\n    numberFormatter: {\n      format: function format(e) {\n        return e;\n      }\n    },\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    onChange: function onChange(val) {\n      props.onChange && props.onChange(val[0]);\n    },\n    onChangeEnd: function onChangeEnd(val) {\n      props.onChangeEnd && props.onChangeEnd(val[0]);\n    }\n  }));\n  var themeProps = (0, _useThemeProps.usePropsResolution)('Slider', props);\n\n  var _useSlider = (0, _slider2.useSlider)(props, state, trackLayout),\n      trackProps = _useSlider.trackProps;\n\n  var wrapperStyle = {\n    height: props.orientation === 'vertical' ? '100%' : undefined,\n    width: props.orientation !== 'vertical' ? '100%' : undefined\n  };\n  return _react.default.createElement(_Context.SliderContext.Provider, {\n    value: {\n      trackLayout: trackLayout,\n      state: state,\n      orientation: props.orientation,\n      isReversed: props.isReversed,\n      colorScheme: props.colorScheme,\n      trackProps: trackProps,\n      onTrackLayout: onLayout,\n      thumbSize: themeProps.thumbSize,\n      sliderSize: themeProps.sliderSize\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Box.default, (0, _extends2.default)({}, wrapperStyle, {\n    justifyContent: \"center\",\n    ref: ref,\n    alignItems: \"center\"\n  }, themeProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), _react.default.Children.map(props.children, function (child, index) {\n    if (child.displayName === 'SliderThumb') {\n      return _react.default.cloneElement(child, {\n        index: index\n      });\n    }\n\n    return child;\n  })));\n}\n\nvar _default = (0, _react.forwardRef)(Slider);\n\nexports.default = _default;","map":{"version":3,"sources":["Slider.tsx"],"names":["newProps","props","onLayout","trackLayout","state","numberFormatter","format","minValue","maxValue","onChange","val","onChangeEnd","themeProps","trackProps","wrapperStyle","height","width","orientation","isReversed","colorScheme","onTrackLayout","thumbSize","sliderSize","React","child","index"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { useSliderState } from '@react-stately/slider';\nimport { useLayout } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { ISliderProps } from './types';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useSlider } from '@react-native-aria/slider';\n\nfunction Slider(props: ISliderProps, ref?: any) {\n  let newProps = {\n    ...props,\n    'aria-label': props.accessibilityLabel ?? 'Slider',\n  };\n\n  if (typeof props.value === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.value = [props.value];\n  }\n\n  if (typeof props.defaultValue === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.defaultValue = [props.defaultValue];\n  }\n\n  props = newProps;\n\n  const { onLayout, layout: trackLayout } = useLayout();\n\n  const state = useSliderState({\n    ...props,\n    //@ts-ignore\n    numberFormatter: { format: (e) => e },\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    onChange: (val: any) => {\n      props.onChange && props.onChange(val[0]);\n    },\n    onChangeEnd: (val: any) => {\n      props.onChangeEnd && props.onChangeEnd(val[0]);\n    },\n  });\n\n  const themeProps = usePropsResolution('Slider', props);\n\n  let { trackProps } = useSlider((props as unknown) as any, state, trackLayout);\n\n  const wrapperStyle = {\n    height: props.orientation === 'vertical' ? '100%' : undefined,\n    width: props.orientation !== 'vertical' ? '100%' : undefined,\n  };\n\n  return (\n    <SliderContext.Provider\n      value={{\n        trackLayout,\n        state,\n        orientation: props.orientation,\n        isReversed: props.isReversed,\n        colorScheme: props.colorScheme,\n        trackProps,\n        onTrackLayout: onLayout,\n        thumbSize: themeProps.thumbSize,\n        sliderSize: themeProps.sliderSize,\n      }}\n    >\n      <Box\n        {...wrapperStyle}\n        justifyContent=\"center\"\n        ref={ref}\n        alignItems=\"center\"\n        {...themeProps}\n      >\n        {React.Children.map(props.children, (child, index) => {\n          if (child.displayName === 'SliderThumb') {\n            return React.cloneElement(child as React.ReactElement, {\n              index,\n            });\n          }\n\n          return child;\n        })}\n      </Box>\n    </SliderContext.Provider>\n  );\n}\n\nexport default forwardRef(Slider);\n"]},"metadata":{},"sourceType":"script"}