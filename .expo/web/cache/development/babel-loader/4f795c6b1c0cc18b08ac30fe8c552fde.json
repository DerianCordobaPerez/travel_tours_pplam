{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _default = function _default(children, reverse) {\n  var childrenArray = _react.default.Children.toArray(children);\n\n  if (reverse) {\n    childrenArray = childrenArray.reverse();\n  }\n\n  var trailingChildrenWithSpacing = childrenArray.map(function (child) {\n    return _react.default.cloneElement(child, _reactNative.Platform.OS === 'web' ? {\n      style: {\n        position: 'absolute'\n      }\n    } : {\n      position: 'absolute'\n    }, child.props.children);\n  });\n  return [trailingChildrenWithSpacing];\n};\n\nexports.default = _default;","map":{"version":3,"sources":["getAbsoluteChildren.ts"],"names":["childrenArray","React","trailingChildrenWithSpacing","Platform","style","position","child"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;eAEe,SAAA,QAAA,CAAA,QAAA,EAAA,OAAA,EAA8D;AAC3E,MAAIA,aAAa,GAAGC,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,OAAAA,CAApB,QAAoBA,CAApB;;AACA,MAAA,OAAA,EAAa;AACXD,IAAAA,aAAa,GAAGA,aAAa,CAA7BA,OAAgBA,EAAhBA;AAKF;;AAAA,MAAME,2BAA2B,GAAGF,aAAa,CAAbA,GAAAA,CAAkB,UAAA,KAAA,EAAgB;AACpE,WAAOC,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,KAAAA,EAELE,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GACI;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EADvBF;AACa;AAAT,KADJA,GAEI;AAAEE,MAAAA,QAAQ,EAJTJ;AAID,KAJCA,EAKLK,KAAK,CAALA,KAAAA,CALF,QAAOL,CAAP;AADF,GAAoCD,CAApC;AAYA,SAAO,CAAP,2BAAO,CAAP","sourcesContent":["import React from 'react';\nimport { Platform } from 'react-native';\nexport default (children: JSX.Element[] | JSX.Element, reverse?: boolean) => {\n  let childrenArray = React.Children.toArray(children);\n  if (reverse) {\n    childrenArray = childrenArray.reverse();\n  }\n  /*\n  | Add the position to the children\n  */\n  const trailingChildrenWithSpacing = childrenArray.map((child: any) => {\n    return React.cloneElement(\n      child,\n      Platform.OS === 'web'\n        ? { style: { position: 'absolute' } }\n        : { position: 'absolute' },\n      child.props.children\n    );\n  });\n  /*\n  | New children array with applied margin to trailing children\n  */\n  return [trailingChildrenWithSpacing];\n};\n"]},"metadata":{},"sourceType":"script"}