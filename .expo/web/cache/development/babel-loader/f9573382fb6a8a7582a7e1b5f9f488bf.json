{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.View = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _styled = require(\"../../../utils/styled\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/basic/View/View.tsx\";\n\nvar StyledView = (0, _styled.makeStyledBox)(_reactNative.View);\nvar View = (0, _react.forwardRef)(function (props, ref) {\n  var _usePropsResolution = (0, _hooks.usePropsResolution)('View', props),\n      resolvedProps = (0, _extends2.default)({}, _usePropsResolution);\n\n  return _react.default.createElement(StyledView, (0, _extends2.default)({}, resolvedProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  }));\n});\nexports.View = View;","map":{"version":3,"sources":["View.tsx"],"names":["StyledView","RNView","View","resolvedProps"],"mappings":";;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,OAAA,GAAA,OAAA,yBAAA;;;;;AAGA,IAAMA,UAAe,GAAG,CAAA,GAAA,OAAA,CAAA,aAAA,EAAcC,YAAAA,CAAtC,IAAwB,CAAxB;AAEO,IAAMC,IAAI,GAAG,CAAA,GAAA,MAAA,CAAA,UAAA,EAAW,UAAA,KAAA,EAAA,GAAA,EAAiC;AAAA,MAAA,mBAAA,GACjC,CAAA,GAAA,MAAA,CAAA,kBAAA,EAAA,MAAA,EADiC,KACjC,CADiC;AAAA,MACnDC,aADmD,GAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,mBAAA,CAAA;;AAG9D,SAAO,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,UAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,aAAA,EAAA;AAA+B,IAAA,GAAG,EAAlC,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAP;AAAO;AAAA,GAAA,CAAA,CAAP;AAHK,CAAa,CAAb","sourcesContent":["import React, { forwardRef } from 'react';\nimport { View as RNView } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledBox } from '../../../utils/styled';\nimport type { IViewProps } from './types';\n\nconst StyledView: any = makeStyledBox(RNView);\n\nexport const View = forwardRef((props: IViewProps, ref: any) => {\n  const { ...resolvedProps } = usePropsResolution('View', props);\n\n  return <StyledView {...resolvedProps} ref={ref} />;\n});\n"]},"metadata":{},"sourceType":"script"}