{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CommonActions } from '@react-navigation/routers';\nexport var NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\nexport default function createNavigationContainerRef() {\n  var methods = [].concat(_toConsumableArray(Object.keys(CommonActions)), ['addListener', 'removeListener', 'resetRoot', 'dispatch', 'canGoBack', 'getRootState', 'getState', 'getParent', 'getCurrentRoute', 'getCurrentOptions']);\n\n  var ref = _objectSpread(_objectSpread({}, methods.reduce(function (acc, name) {\n    acc[name] = function () {\n      if (ref.current == null) {\n        console.error(NOT_INITIALIZED_ERROR);\n      } else {\n        var _ref$current;\n\n        return (_ref$current = ref.current)[name].apply(_ref$current, arguments);\n      }\n    };\n\n    return acc;\n  }, {})), {}, {\n    isReady: function isReady() {\n      if (ref.current == null) {\n        return false;\n      }\n\n      return ref.current.isReady();\n    },\n    current: null\n  });\n\n  return ref;\n}","map":{"version":3,"sources":["createNavigationContainerRef.tsx"],"names":["NOT_INITIALIZED_ERROR","methods","Object","ref","acc","console","isReady","current"],"mappings":";;;;;;;AAAA,SAAA,aAAA,QAAA,2BAAA;AAIA,OAAO,IAAMA,qBAAqB,GAA3B,+QAAA;AAGP,eAAe,SAAA,4BAAA,GAEmC;AAChD,MAAMC,OAAO,gCACRC,MAAM,CAANA,IAAAA,CADW,aACXA,CADQ,IAAG,aAAH,EAAG,gBAAH,EAAG,WAAH,EAAG,UAAH,EAAG,WAAH,EAAG,cAAH,EAAG,UAAH,EAAG,WAAH,EAAG,iBAAH,EAAb,mBAAa,EAAb;;AAcA,MAAMC,GAAiD,mCAClD,OAAO,CAAP,MAAA,CAAoB,UAAA,GAAA,EAAA,IAAA,EAAe;AACpCC,IAAAA,GAAG,CAAHA,IAAG,CAAHA,GAAY,YAAoB;AAC9B,UAAID,GAAG,CAAHA,OAAAA,IAAJ,IAAA,EAAyB;AACvBE,QAAAA,OAAO,CAAPA,KAAAA,CAAAA,qBAAAA;AADF,OAAA,MAEO;AAAA;;AAEL,eAAOF,gBAAAA,GAAG,CAAHA,OAAAA,EAAP,IAAOA,gCAAP;AACD;AANHC,KAAAA;;AAQA,WAAA,GAAA;AATC,GAAA,EADqD,EACrD,CADkD;AAYrDE,IAAAA,OAAO,EAAE,mBAAM;AACb,UAAIH,GAAG,CAAHA,OAAAA,IAAJ,IAAA,EAAyB;AACvB,eAAA,KAAA;AACD;;AAED,aAAOA,GAAG,CAAHA,OAAAA,CAAP,OAAOA,EAAP;AAjBsD,KAAH;AAmBrDI,IAAAA,OAAO,EAAE;AAnB4C,IAAvD;;AAsBA,SAAA,GAAA;AACD","sourcesContent":["import { CommonActions } from '@react-navigation/routers';\n\nimport type { NavigationContainerRefWithCurrent } from './types';\n\nexport const NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nexport default function createNavigationContainerRef<\n  ParamList extends {} = ReactNavigation.RootParamList\n>(): NavigationContainerRefWithCurrent<ParamList> {\n  const methods = [\n    ...Object.keys(CommonActions),\n    'addListener',\n    'removeListener',\n    'resetRoot',\n    'dispatch',\n    'canGoBack',\n    'getRootState',\n    'getState',\n    'getParent',\n    'getCurrentRoute',\n    'getCurrentOptions',\n  ] as const;\n\n  const ref: NavigationContainerRefWithCurrent<ParamList> = {\n    ...methods.reduce<any>((acc, name) => {\n      acc[name] = (...args: any[]) => {\n        if (ref.current == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          // @ts-expect-error: this is ok\n          return ref.current[name](...args);\n        }\n      };\n      return acc;\n    }, {}),\n    isReady: () => {\n      if (ref.current == null) {\n        return false;\n      }\n\n      return ref.current.isReady();\n    },\n    current: null,\n  };\n\n  return ref;\n}\n"]},"metadata":{},"sourceType":"module"}