{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _Context = require(\"./Context\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Tabs/TabBar.tsx\";\n\nvar TabBarImpl = function TabBarImpl(_ref, ref) {\n  var tablistRef = _ref.tablistRef,\n      tabListProps = _ref.tabListProps,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"tablistRef\", \"tabListProps\"]);\n\n  var _React$useContext = _react.default.useContext(_Context.TabsContext),\n      tabBarStyle = _React$useContext.tabBarStyle,\n      align = _React$useContext.align,\n      isFitted = _React$useContext.isFitted,\n      state = _React$useContext.state;\n\n  return _react.default.createElement(_Box.default, (0, _extends2.default)({\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: isFitted ? 'space-between' : align\n  }, tabListProps, tabBarStyle, props, {\n    ref: (0, _utils.mergeRefs)([ref, tablistRef]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }), (0, _toConsumableArray2.default)(state.collection).map(function (item) {\n    return _react.default.cloneElement(item.rendered, {\n      item: item,\n      key: item.key\n    });\n  }));\n};\n\nvar TabBar = _react.default.memo(_react.default.forwardRef(TabBarImpl));\n\nTabBar.displayName = 'TabBar';\nvar _default = TabBar;\nexports.default = _default;","map":{"version":3,"sources":["TabBar.tsx"],"names":["TabBarImpl","tablistRef","tabListProps","props","tabBarStyle","align","isFitted","state","React","TabsContext","item","key","TabBar"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,aAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,kBAAA;;;;;AAEA,IAAMA,UAAU,GAAVA,SAAAA,UAAAA,CAAa,IAAbA,EAAa,GAAbA,EAGD;AAFDC,MAAAA,UAEC,GAAA,IAAA,CAFDA,UAAAA;AAAAA,MAAYC,YAEX,GAAA,IAAA,CAFWA,YAAZD;AAAAA,MAA6BE,KAE5B,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,YAAA,EAAA,cAAA,CAAA,CAFDF;;AAEC,MAAA,iBAAA,GAMoBO,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAiBC,QAAAA,CANrC,WAMoBD,CANpB;AAAA,MAEDJ,WAFC,GAAA,iBAAA,CAAA,WAAA;AAAA,MAGDC,KAHC,GAAA,iBAAA,CAAA,KAAA;AAAA,MAIDC,QAJC,GAAA,iBAAA,CAAA,QAAA;AAAA,MAKDC,KALC,GAAA,iBAAA,CAAA,KAAA;;AAQH,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AACE,IAAA,aAAa,EADf,KAAA;AAEE,IAAA,KAAK,EAFP,MAAA;AAGE,IAAA,cAAc,EAAED,QAAQ,GAAA,eAAA,GAH1B;AAAA,GAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA;AAOE,IAAA,GAAG,EAAE,CAAA,GAAA,MAAA,CAAA,SAAA,EAAU,CAAA,GAAA,EAPjB,UAOiB,CAAV,CAPP;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EASG,CAAA,GAAA,mBAAA,CAAA,OAAA,EAAIC,KAAK,CAAT,UAAA,EAAA,GAAA,CAA0B,UAAA,IAAA,EAAA;AAAA,WACzBC,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAmBE,IAAI,CAAvBF,QAAAA,EAAkC;AAAEE,MAAAA,IAAI,EAAN,IAAA;AAAQC,MAAAA,GAAG,EAAED,IAAI,CAD1B;AACS,KAAlCF,CADyB;AAV/B,GAUK,CATH,CADF;AAXF,CAAA;;AA2BA,IAAMI,MAAM,GAAGJ,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAWA,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAA1B,UAA0BA,CAAXA,CAAf;;AAEAI,MAAM,CAANA,WAAAA,GAAAA,QAAAA;eAEeA,M","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { TabsContext } from './Context';\nimport type { ITabsContextProps, ITabBarProps } from './types';\nimport { mergeRefs } from '../../../utils';\n\nconst TabBarImpl = (\n  { tablistRef, tabListProps, ...props }: ITabBarProps,\n  ref?: any\n) => {\n  const {\n    tabBarStyle,\n    align,\n    isFitted,\n    state,\n  }: ITabsContextProps = React.useContext(TabsContext);\n\n  return (\n    <Box\n      flexDirection=\"row\"\n      width=\"100%\"\n      justifyContent={isFitted ? 'space-between' : align}\n      {...tabListProps}\n      {...tabBarStyle}\n      {...props}\n      ref={mergeRefs([ref, tablistRef])}\n    >\n      {[...state.collection].map((item) =>\n        React.cloneElement(item.rendered, { item, key: item.key })\n      )}\n    </Box>\n  );\n};\nconst TabBar = React.memo(React.forwardRef(TabBarImpl));\n\nTabBar.displayName = 'TabBar';\n\nexport default TabBar;\n"]},"metadata":{},"sourceType":"script"}