{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _Popper = require(\"../Popper\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _useMenu = require(\"./useMenu\");\n\nvar _Backdrop = _interopRequireDefault(require(\"../Backdrop\"));\n\nvar _Transitions = require(\"../Transitions\");\n\nvar _focus = require(\"@react-native-aria/focus\");\n\nvar _MenuContext = require(\"./MenuContext\");\n\nvar _Overlay = require(\"../../primitives/Overlay\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Menu/Menu.tsx\";\n\nvar Menu = function Menu(_ref, ref) {\n  var trigger = _ref.trigger,\n      _ref$closeOnSelect = _ref.closeOnSelect,\n      closeOnSelect = _ref$closeOnSelect === void 0 ? true : _ref$closeOnSelect,\n      children = _ref.children,\n      onOpen = _ref.onOpen,\n      onClose = _ref.onClose,\n      isOpenProp = _ref.isOpen,\n      defaultIsOpen = _ref.defaultIsOpen,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom left' : _ref$placement,\n      restProps = (0, _objectWithoutProperties2.default)(_ref, [\"trigger\", \"closeOnSelect\", \"children\", \"onOpen\", \"onClose\", \"isOpen\", \"defaultIsOpen\", \"placement\"]);\n\n  var triggerRef = _react.default.useRef(null);\n\n  var _useControllableState = (0, _hooks.useControllableState)({\n    value: isOpenProp,\n    defaultValue: defaultIsOpen,\n    onChange: function onChange(value) {\n      value ? onOpen && onOpen() : onClose && onClose();\n    }\n  }),\n      _useControllableState2 = (0, _slicedToArray2.default)(_useControllableState, 2),\n      isOpen = _useControllableState2[0],\n      setIsOpen = _useControllableState2[1];\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('Menu', restProps),\n      transition = _usePropsResolution.transition,\n      newProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"transition\"]);\n\n  var handleOpen = _react.default.useCallback(function () {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  var handleClose = _react.default.useCallback(function () {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  var triggerProps = (0, _useMenu.useMenuTrigger)({\n    handleOpen: handleOpen,\n    isOpen: isOpen\n  });\n\n  var updatedTrigger = function updatedTrigger() {\n    return trigger((0, _extends2.default)({}, triggerProps, {\n      ref: triggerRef,\n      onPress: handleOpen\n    }), {\n      open: isOpen\n    });\n  };\n\n  _react.default.useEffect(function () {\n    if (isOpen) {\n      _reactNative.AccessibilityInfo.announceForAccessibility('Popup window');\n    }\n  }, [isOpen]);\n\n  return _react.default.createElement(_react.default.Fragment, null, updatedTrigger(), _react.default.createElement(_Overlay.Overlay, {\n    isOpen: isOpen,\n    onRequestClose: handleClose,\n    useRNModalOnAndroid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_Transitions.PresenceTransition, (0, _extends2.default)({\n    visible: isOpen\n  }, transition, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_Popper.Popper, (0, _extends2.default)({\n    triggerRef: triggerRef,\n    onClose: handleClose,\n    placement: placement\n  }, restProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_Backdrop.default, {\n    bg: \"transparent\",\n    onPress: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_Popper.Popper.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_MenuContext.MenuContext.Provider, {\n    value: {\n      closeOnSelect: closeOnSelect,\n      onClose: handleClose\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_focus.FocusScope, {\n    contain: true,\n    restoreFocus: true,\n    autoFocus: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(MenuContent, (0, _extends2.default)({\n    menuRef: ref\n  }, newProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }), children))))))));\n};\n\nvar MenuContent = function MenuContent(_ref2) {\n  var menuRef = _ref2.menuRef,\n      restProps = (0, _objectWithoutProperties2.default)(_ref2, [\"menuRef\"]);\n  var menuProps = (0, _useMenu.useMenu)();\n  var typeaheadProps = (0, _useMenu.useMenuTypeahead)(menuProps);\n  return _react.default.createElement(_Box.default, (0, _extends2.default)({}, restProps, menuProps, typeaheadProps, {\n    ref: menuRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_reactNative.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, restProps.children));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Menu));\n\nexports.default = _default;","map":{"version":3,"sources":["Menu.tsx"],"names":["Menu","trigger","closeOnSelect","children","onOpen","onClose","isOpen","isOpenProp","defaultIsOpen","placement","restProps","triggerRef","React","setIsOpen","value","defaultValue","onChange","transition","newProps","handleOpen","handleClose","triggerProps","updatedTrigger","ref","onPress","open","AccessibilityInfo","MenuContent","menuRef","menuProps","typeaheadProps"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport type { IMenuProps } from './types';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Popper } from '../Popper';\nimport { AccessibilityInfo, ScrollView } from 'react-native';\nimport { useControllableState } from '../../../hooks';\nimport { useMenuTrigger, useMenu, useMenuTypeahead } from './useMenu';\nimport Backdrop from '../Backdrop';\nimport { PresenceTransition } from '../Transitions';\nimport { FocusScope } from '@react-native-aria/focus';\nimport { MenuContext } from './MenuContext';\nimport { Overlay } from '../../primitives/Overlay';\n\nconst Menu = (\n  {\n    trigger,\n    closeOnSelect = true,\n    children,\n    onOpen,\n    onClose,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    placement = 'bottom left',\n    ...restProps\n  }: IMenuProps,\n  ref?: any\n) => {\n  const triggerRef = React.useRef(null);\n  const [isOpen, setIsOpen] = useControllableState({\n    value: isOpenProp,\n    defaultValue: defaultIsOpen,\n    onChange: (value) => {\n      value ? onOpen && onOpen() : onClose && onClose();\n    },\n  });\n\n  const { transition, ...newProps } = usePropsResolution('Menu', restProps);\n  const handleOpen = React.useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  const handleClose = React.useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const triggerProps = useMenuTrigger({\n    handleOpen,\n    isOpen,\n  });\n\n  let updatedTrigger = () => {\n    return trigger(\n      {\n        ...triggerProps,\n        ref: triggerRef,\n        onPress: handleOpen,\n      },\n      { open: isOpen }\n    );\n  };\n\n  React.useEffect(() => {\n    if (isOpen) {\n      AccessibilityInfo.announceForAccessibility('Popup window');\n    }\n  }, [isOpen]);\n\n  return (\n    <>\n      {updatedTrigger()}\n      <Overlay isOpen={isOpen} onRequestClose={handleClose} useRNModalOnAndroid>\n        <PresenceTransition visible={isOpen} {...transition}>\n          <Popper\n            triggerRef={triggerRef}\n            onClose={handleClose}\n            placement={placement}\n            {...restProps}\n          >\n            <Backdrop bg=\"transparent\" onPress={handleClose} />\n            <Popper.Content>\n              <MenuContext.Provider\n                value={{ closeOnSelect, onClose: handleClose }}\n              >\n                <FocusScope contain restoreFocus autoFocus>\n                  <MenuContent menuRef={ref} {...newProps}>\n                    {children}\n                  </MenuContent>\n                </FocusScope>\n              </MenuContext.Provider>\n            </Popper.Content>\n          </Popper>\n        </PresenceTransition>\n      </Overlay>\n    </>\n  );\n};\n\nconst MenuContent = ({\n  menuRef,\n  ...restProps\n}: Omit<IMenuProps, 'trigger'> & { menuRef: any }) => {\n  const menuProps = useMenu();\n  const typeaheadProps = useMenuTypeahead(menuProps);\n\n  return (\n    <Box {...restProps} {...menuProps} {...typeaheadProps} ref={menuRef}>\n      <ScrollView>{restProps.children}</ScrollView>\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Menu));\n"]},"metadata":{},"sourceType":"script"}