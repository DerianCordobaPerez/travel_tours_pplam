{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createContext = createContext;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/utils/createContext.tsx\";\n\nfunction createContext(rootComponentName) {\n  var Context = _react.default.createContext(null);\n\n  function Provider(props) {\n    var children = props.children,\n        providerProps = (0, _objectWithoutProperties2.default)(props, [\"children\"]);\n\n    var value = _react.default.useMemo(function () {\n      return providerProps;\n    }, Object.values(providerProps));\n\n    return _react.default.createElement(Context.Provider, {\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    }, children);\n  }\n\n  function useContext(consumerName) {\n    var context = _react.default.useContext(Context);\n\n    if (context === null) {\n      throw new Error(\"`\" + consumerName + \"` must be used within `\" + rootComponentName + \"`\");\n    }\n\n    return context;\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext];\n}","map":{"version":3,"sources":["createContext.tsx"],"names":["Context","React","children","providerProps","props","value","Object","context","Provider","rootComponentName"],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,SAAA,aAAA,CAAA,iBAAA,EAEE;AACA,MAAMA,OAAO,GAAGC,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CAAhB,IAAgBA,CAAhB;;AAEA,WAAA,QAAA,CAAA,KAAA,EAA2E;AAAA,QACjEC,QADiE,GAClCE,KADkC,CAAA,QAAA;AAAA,QACpDD,aADoD,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,CAAA,UAAA,CAAA,CAAA;;AAGzE,QAAME,KAAK,GAAGJ,MAAAA,CAAAA,OAAAA,CAAAA,OAAAA,CACZ,YAAA;AAAA,aAAA,aAAA;AADYA,KAAAA,EAGZK,MAAM,CAANA,MAAAA,CAHF,aAGEA,CAHYL,CAAd;;AAKA,WAAO,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAD,CAAA,QAAA,EAAA;AAAkB,MAAA,KAAK,EAAvB,KAAA;AAAA,MAAA,MAAA,EAAA,IAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,EAAP,QAAO,CAAP;AAGF;;AAAA,WAAA,UAAA,CAAA,YAAA,EAA0C;AACxC,QAAMM,OAAO,GAAGN,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAhB,OAAgBA,CAAhB;;AACA,QAAIM,OAAO,KAAX,IAAA,EAAsB;AACpB,YAAM,IAAA,KAAA,CAAA,MAAA,YAAA,GAAA,yBAAA,GAAA,iBAAA,GAAN,GAAM,CAAN;AAIF;;AAAA,WAAA,OAAA;AAGFC;;AAAAA,EAAAA,QAAQ,CAARA,WAAAA,GAAuBC,iBAAiB,GAAxCD,UAAAA;AACA,SAAO,CAAA,QAAA,EAAP,UAAO,CAAP;AACD","sourcesContent":["import React from 'react';\n\nfunction createContext<ContextValueType extends object>(\n  rootComponentName: string\n) {\n  const Context = React.createContext<ContextValueType>(null as any);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...providerProps } = props;\n    // Only re-memoize when prop values change\n    const value = React.useMemo(\n      () => providerProps,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Object.values(providerProps)\n    ) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context === null) {\n      throw new Error(\n        `\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``\n      );\n    }\n    return context;\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\nexport { createContext };\n"]},"metadata":{},"sourceType":"script"}