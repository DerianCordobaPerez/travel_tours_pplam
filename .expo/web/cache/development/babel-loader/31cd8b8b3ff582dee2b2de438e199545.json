{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InputGroup = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _utils = require(\"../../../utils\");\n\nvar _Flex = _interopRequireDefault(require(\"../Flex\"));\n\nvar _theme = require(\"../../../theme\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Input/InputGroup.tsx\";\n\nvar supplyPropsToChildren = function supplyPropsToChildren(children, props) {\n  return _react.default.Children.map(children, function (child) {\n    return _react.default.cloneElement(child, props, child.props.children);\n  });\n};\n\nvar InputGroup = (0, _react.memo)((0, _react.forwardRef)(function (_ref, ref) {\n  var children = _ref.children,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\"]);\n\n  var _themeTools$extractIn = _theme.themeTools.extractInObject(props, ['w', 'width', 'm', 'mr', 'ml', 'mt', 'mb', 'mx', 'my']),\n      _themeTools$extractIn2 = (0, _slicedToArray2.default)(_themeTools$extractIn, 2),\n      layoutProps = _themeTools$extractIn2[0],\n      remProps = _themeTools$extractIn2[1];\n\n  return _react.default.createElement(_Flex.default, (0, _extends2.default)({\n    direction: \"row\"\n  }, layoutProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), supplyPropsToChildren((0, _utils.getAttachedChildren)(children), remProps));\n}));\nexports.InputGroup = InputGroup;","map":{"version":3,"sources":["InputGroup.tsx"],"names":["supplyPropsToChildren","React","child","InputGroup","children","props","layoutProps","remProps","themeTools"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,WAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;;;;AAEA,IAAMA,qBAAqB,GAArBA,SAAAA,qBAAAA,CAAwB,QAAxBA,EAAwB,KAAxBA,EAAuD;AAC3D,SAAOC,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EAA6B,UAAA,KAAA,EAAwB;AAC1D,WAAOA,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,KAAAA,EAAAA,KAAAA,EAAiCC,KAAK,CAALA,KAAAA,CAAxC,QAAOD,CAAP;AADF,GAAOA,CAAP;AADF,CAAA;;AAMO,IAAME,UAAU,GAAG,CAAA,GAAA,MAAA,CAAA,IAAA,EACxB,CAAA,GAAA,MAAA,CAAA,UAAA,EAAW,UAAA,IAAA,EAAA,GAAA,EAAwD;AAArDC,MAAAA,QAAqD,GAAA,IAAA,CAArDA,QAAAA;AAAAA,MAAaC,KAAwC,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,UAAA,CAAA,CAArDD;;AAAqD,MAAA,qBAAA,GACnCI,MAAAA,CAAAA,UAAAA,CAAAA,eAAAA,CAAAA,KAAAA,EAAkC,CAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EADC,IACD,CAAlCA,CADmC;AAAA,MAAA,sBAAA,GAAA,CAAA,GAAA,eAAA,CAAA,OAAA,EAAA,qBAAA,EAAA,CAAA,CAAA;AAAA,MAC5DF,WAD4D,GAAA,sBAAA,CAAA,CAAA,CAAA;AAAA,MAC/CC,QAD+C,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAajE,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AAAM,IAAA,SAAS,EAAf;AAAA,GAAA,EAAA,WAAA,EAAA;AAAuC,IAAA,GAAG,EAA1C,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EACGP,qBAAqB,CAAC,CAAA,GAAA,MAAA,CAAA,mBAAA,EAAD,QAAC,CAAD,EAF1B,QAE0B,CADxB,CADF;AAdG,CACL,CADwB,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport type { IInputGroupProps } from './types';\nimport { getAttachedChildren } from '../../../utils';\nimport Flex from '../Flex';\nimport { themeTools } from '../../../theme';\n\nconst supplyPropsToChildren = (children: any, props: any) => {\n  return React.Children.map(children, (child: JSX.Element) => {\n    return React.cloneElement(child, props, child.props.children);\n  });\n};\n\nexport const InputGroup = memo(\n  forwardRef(({ children, ...props }: IInputGroupProps, ref: any) => {\n    let [layoutProps, remProps] = themeTools.extractInObject(props, [\n      'w',\n      'width',\n      'm',\n      'mr',\n      'ml',\n      'mt',\n      'mb',\n      'mx',\n      'my',\n    ]);\n\n    return (\n      <Flex direction=\"row\" {...layoutProps} ref={ref}>\n        {supplyPropsToChildren(getAttachedChildren(children), remProps)}\n      </Flex>\n    );\n  })\n);\n"]},"metadata":{},"sourceType":"script"}