{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ButtonGroup = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _tools = require(\"./../tools\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar disabledTextColor = function disabledTextColor(props) {\n  return (0, _tools.mode)(\"muted.500\", \"muted.300\")(props);\n};\n\nvar baseStyle = function baseStyle(props) {\n  var primary = props.theme.colors.primary;\n  var focusRing = _reactNative.Platform.OS === 'web' ? {\n    boxShadow: primary[400] + \" 0px 0px 0px 3px\"\n  } : {};\n  return {\n    borderRadius: 'lg',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    _web: {\n      cursor: props.isDisabled ? 'not-allowed' : props.isLoading ? 'default' : 'pointer'\n    },\n    _text: {\n      fontWeight: 600\n    },\n    _focusVisible: {\n      style: props.variant !== 'unstyled' ? (0, _extends2.default)({}, focusRing) : {}\n    },\n    _stack: {\n      space: 2,\n      alignItems: 'center'\n    },\n    _disabled: {\n      opacity: 0.5\n    }\n  };\n};\n\nfunction variantGhost(props) {\n  var c = props.colorScheme;\n\n  if (c === 'muted') {\n    return {\n      _text: {\n        color: disabledTextColor(props)\n      }\n    };\n  }\n\n  return {\n    _text: {\n      color: props.isDisabled ? disabledTextColor(props) : (0, _tools.mode)(c + \".500\", c + \".200\")(props)\n    },\n    bg: 'transparent',\n    _web: {\n      outlineWidth: 0\n    },\n    _hover: {\n      bg: (0, _tools.transparentize)((0, _tools.mode)(c + \".200\", c + \".500\")(props), 0.5)(props.theme)\n    },\n    _focusVisible: {\n      bg: (0, _tools.transparentize)((0, _tools.mode)(c + \".200\", c + \".500\")(props), 0.5)(props.theme)\n    },\n    _pressed: {\n      bg: (0, _tools.transparentize)((0, _tools.mode)(c + \".200\", c + \".500\")(props), 0.6)(props.theme)\n    }\n  };\n}\n\nfunction variantOutline(props) {\n  var c = props.colorScheme;\n  var borderColor = (0, _tools.mode)(\"muted.200\", \"muted.500\")(props);\n  return (0, _extends2.default)({\n    border: '1px solid',\n    borderColor: c === 'muted' ? borderColor : props.isDisabled ? disabledTextColor(props) : (0, _tools.mode)(c + \".300\", c + \".600\")(props)\n  }, variantGhost(props));\n}\n\nvar accessibleColorMap = {\n  yellow: {\n    bg: 'yellow.400'\n  },\n  cyan: {\n    bg: 'cyan.400'\n  }\n};\n\nfunction variantSolid(props) {\n  var c = props.colorScheme;\n\n  var _ref = accessibleColorMap[c] || {},\n      _ref$bg = _ref.bg,\n      bg = _ref$bg === void 0 ? c + \".500\" : _ref$bg;\n\n  bg = (0, _tools.mode)(bg, c + \".400\")(props);\n\n  if (props.isDisabled) {\n    bg = (0, _tools.mode)(\"muted.300\", \"muted.500\")(props);\n  }\n\n  var styleObject = {\n    _web: {\n      outlineWidth: 0\n    },\n    bg: bg,\n    _hover: {\n      bg: (0, _tools.mode)(c + \".600\", c + \".500\")(props)\n    },\n    _pressed: {\n      bg: (0, _tools.mode)(c + \".700\", c + \".600\")(props)\n    }\n  };\n  return styleObject;\n}\n\nfunction variantLink(props) {\n  var c = props.colorScheme;\n  return (0, _extends2.default)({}, variantGhost(props), {\n    _text: {\n      color: c === 'muted' ? (0, _tools.mode)(\"muted.800\", c + \".200\")(props) : props.isDisabled ? disabledTextColor(props) : (0, _tools.mode)(c + \".500\", c + \".200\")(props)\n    },\n    _hover: {\n      _text: {\n        textDecorationLine: 'underline'\n      }\n    },\n    _ios: {\n      _text: {\n        textDecorationLine: 'underline'\n      }\n    },\n    _android: {\n      _text: {\n        textDecorationLine: 'underline'\n      }\n    }\n  });\n}\n\nfunction variantUnstyled() {\n  return {};\n}\n\nvar variants = {\n  ghost: variantGhost,\n  outline: variantOutline,\n  solid: variantSolid,\n  link: variantLink,\n  unstyled: variantUnstyled\n};\nvar sizes = {\n  lg: {\n    px: 6,\n    py: 3,\n    _text: {\n      fontSize: 'lg'\n    }\n  },\n  md: {\n    px: 4,\n    py: 3,\n    _text: {\n      fontSize: 'md'\n    }\n  },\n  sm: {\n    px: 4,\n    py: 2,\n    _text: {\n      fontSize: 'sm'\n    }\n  },\n  xs: {\n    px: 2,\n    py: 1,\n    _text: {\n      fontSize: 'xs'\n    }\n  }\n};\nvar defaultProps = {\n  variant: 'solid',\n  size: 'md',\n  colorScheme: 'primary'\n};\nvar ButtonGroup = {\n  baseStyle: {\n    direction: 'row'\n  },\n  defaultProps: {\n    space: 2\n  }\n};\nexports.ButtonGroup = ButtonGroup;\nvar _default = {\n  baseStyle: baseStyle,\n  variants: variants,\n  sizes: sizes,\n  defaultProps: defaultProps\n};\nexports.default = _default;","map":{"version":3,"sources":["button.ts"],"names":["disabledTextColor","baseStyle","primary","props","focusRing","Platform","boxShadow","borderRadius","flexDirection","justifyContent","alignItems","_web","cursor","_text","fontWeight","_focusVisible","style","_stack","space","_disabled","opacity","c","color","bg","outlineWidth","_hover","_pressed","borderColor","border","variantGhost","accessibleColorMap","yellow","cyan","styleObject","textDecorationLine","_ios","_android","variants","ghost","outline","solid","link","unstyled","sizes","lg","px","py","fontSize","md","sm","xs","defaultProps","variant","size","colorScheme","ButtonGroup","direction"],"mappings":"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","sourcesContent":["import { Dict, mode, transparentize } from './../tools';\nimport { Platform } from 'react-native';\nconst disabledTextColor = (props: any) => mode(`muted.500`, `muted.300`)(props);\n\nconst baseStyle = (props: any) => {\n  const { primary } = props.theme.colors;\n  const focusRing =\n    Platform.OS === 'web'\n      ? { boxShadow: `${primary[400]} 0px 0px 0px 3px` }\n      : {};\n\n  return {\n    borderRadius: 'lg',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    _web: {\n      cursor: props.isDisabled\n        ? 'not-allowed'\n        : props.isLoading\n        ? 'default'\n        : 'pointer',\n    },\n    _text: {\n      fontWeight: 600,\n    },\n    _focusVisible: {\n      style: props.variant !== 'unstyled' ? { ...focusRing } : {},\n    },\n    _stack: {\n      space: 2,\n      alignItems: 'center',\n    },\n    _disabled: {\n      opacity: 0.5,\n    },\n  };\n};\n\nfunction variantGhost(props: Dict) {\n  const { colorScheme: c } = props;\n  if (c === 'muted') {\n    return {\n      _text: {\n        color: disabledTextColor(props),\n      },\n    };\n  }\n\n  return {\n    _text: {\n      color: props.isDisabled\n        ? disabledTextColor(props)\n        : mode(`${c}.500`, `${c}.200`)(props),\n    },\n    bg: 'transparent',\n    _web: {\n      outlineWidth: 0,\n    },\n    _hover: {\n      bg: transparentize(mode(`${c}.200`, `${c}.500`)(props), 0.5)(props.theme),\n    },\n    _focusVisible: {\n      bg: transparentize(mode(`${c}.200`, `${c}.500`)(props), 0.5)(props.theme),\n    },\n    _pressed: {\n      bg: transparentize(mode(`${c}.200`, `${c}.500`)(props), 0.6)(props.theme),\n    },\n  };\n}\n\nfunction variantOutline(props: Dict) {\n  const { colorScheme: c } = props;\n  const borderColor = mode(`muted.200`, `muted.500`)(props);\n  return {\n    border: '1px solid',\n    borderColor:\n      c === 'muted'\n        ? borderColor\n        : props.isDisabled\n        ? disabledTextColor(props)\n        : mode(`${c}.300`, `${c}.600`)(props),\n    ...variantGhost(props),\n  };\n}\n\ntype AccessibleColor = {\n  bg?: string;\n  color?: string;\n};\n\n/** Accessible color overrides for less accessible colors. */\nconst accessibleColorMap: { [key: string]: AccessibleColor } = {\n  yellow: {\n    bg: 'yellow.400',\n  },\n  cyan: {\n    bg: 'cyan.400',\n  },\n};\n\nfunction variantSolid(props: Dict) {\n  const { colorScheme: c } = props;\n  let { bg = `${c}.500` } = accessibleColorMap[c] || {};\n  bg = mode(bg, `${c}.400`)(props);\n  if (props.isDisabled) {\n    bg = mode(`muted.300`, `muted.500`)(props);\n  }\n\n  const styleObject = {\n    _web: {\n      outlineWidth: 0,\n    },\n    bg,\n    _hover: {\n      bg: mode(`${c}.600`, `${c}.500`)(props),\n    },\n    _pressed: {\n      bg: mode(`${c}.700`, `${c}.600`)(props),\n    },\n  };\n\n  return styleObject;\n}\n\nfunction variantLink(props: Dict) {\n  const { colorScheme: c } = props;\n\n  return {\n    ...variantGhost(props),\n    _text: {\n      // textDecorationLine: 'underline',\n      color:\n        c === 'muted'\n          ? mode(`muted.800`, `${c}.200`)(props)\n          : props.isDisabled\n          ? disabledTextColor(props)\n          : mode(`${c}.500`, `${c}.200`)(props),\n    },\n    _hover: {\n      _text: {\n        textDecorationLine: 'underline',\n      },\n    },\n    _ios: {\n      _text: {\n        textDecorationLine: 'underline',\n      },\n    },\n    _android: {\n      _text: {\n        textDecorationLine: 'underline',\n      },\n    },\n  };\n}\n\nfunction variantUnstyled() {\n  return {};\n}\n\nconst variants = {\n  ghost: variantGhost,\n  outline: variantOutline,\n  solid: variantSolid,\n  link: variantLink,\n  unstyled: variantUnstyled,\n};\n\nconst sizes = {\n  lg: {\n    px: 6,\n    py: 3,\n    _text: {\n      fontSize: 'lg',\n    },\n  },\n  md: {\n    px: 4,\n    py: 3,\n    _text: {\n      fontSize: 'md',\n    },\n  },\n  sm: {\n    px: 4,\n    py: 2,\n    _text: {\n      fontSize: 'sm',\n    },\n  },\n  xs: {\n    px: 2,\n    py: 1,\n    _text: {\n      fontSize: 'xs',\n    },\n  },\n};\n\nconst defaultProps = {\n  variant: 'solid',\n  size: 'md',\n  colorScheme: 'primary',\n};\n\nexport const ButtonGroup = {\n  baseStyle: { direction: 'row' },\n  defaultProps: { space: 2 },\n};\n\nexport default {\n  baseStyle,\n  variants,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"script"}