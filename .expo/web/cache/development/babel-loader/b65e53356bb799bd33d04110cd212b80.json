{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.isnil\"));\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/AspectRatio/index.tsx\";\n\nvar AspectView = _react.default.forwardRef(function (props, ref) {\n  var _React$useState = _react.default.useState(),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      layout = _React$useState2[0],\n      setLayout = _React$useState2[1];\n\n  var inputStyle = [_reactNative.StyleSheet.flatten(props.style) || {}];\n\n  if (layout) {\n    var _layout$width = layout.width,\n        width = _layout$width === void 0 ? 0 : _layout$width,\n        _layout$height = layout.height,\n        height = _layout$height === void 0 ? 0 : _layout$height;\n\n    if (width === 0) {\n      inputStyle.push({\n        width: height * props.aspectRatio,\n        height: height\n      });\n    } else {\n      inputStyle.push({\n        width: width,\n        height: width / props.aspectRatio\n      });\n    }\n  }\n\n  return _react.default.createElement(_Box.default, (0, _extends2.default)({}, props, {\n    ref: ref,\n    style: inputStyle,\n    onLayout: function onLayout(_ref) {\n      var inLayout = _ref.nativeEvent.layout;\n      return setLayout(inLayout);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }));\n});\n\nvar AspectRatio = function AspectRatio(_ref2, ref) {\n  var style = _ref2.style,\n      ratio = _ref2.ratio,\n      children = _ref2.children,\n      props = (0, _objectWithoutProperties2.default)(_ref2, [\"style\", \"ratio\", \"children\"]);\n  var computedStyle = style;\n\n  var newChildWithProps = _react.default.cloneElement(children, (0, _extends2.default)({}, children.props, {\n    style: _reactNative.StyleSheet.absoluteFillObject\n  }), children.props.children);\n\n  var aspectRatio = !(0, _lodash.default)(ratio) ? ratio : 4 / 3;\n\n  if (_reactNative.Platform.OS === 'web') {\n    return _react.default.createElement(AspectView, (0, _extends2.default)({}, props, {\n      aspectRatio: aspectRatio,\n      style: style,\n      ref: ref,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }), newChildWithProps);\n  } else {\n    computedStyle = _reactNative.StyleSheet.flatten([style, {\n      aspectRatio: aspectRatio\n    }]);\n    return _react.default.createElement(_Box.default, (0, _extends2.default)({}, props, {\n      style: computedStyle,\n      ref: ref,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }), newChildWithProps);\n  }\n};\n\nvar _default = _react.default.memo(_react.default.forwardRef(AspectRatio));\n\nexports.default = _default;","map":{"version":3,"sources":["index.tsx"],"names":["AspectView","React","layout","setLayout","inputStyle","StyleSheet","props","width","height","inLayout","AspectRatio","style","ratio","children","computedStyle","newChildWithProps","aspectRatio","Platform"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, ViewStyle, Platform } from 'react-native';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport isNil from 'lodash.isnil';\n\nexport type IAspectRatioProps = IBoxProps & {\n  style?: ViewStyle;\n  ratio?: number;\n  children: JSX.Element;\n};\n\nconst AspectView = React.forwardRef((props: any, ref?: any) => {\n  const [layout, setLayout] = React.useState();\n  const inputStyle = [StyleSheet.flatten(props.style) || {}];\n  if (layout) {\n    // @ts-ignore\n    let { width = 0, height = 0 } = layout;\n    if (width === 0) {\n      inputStyle.push({ width: height * props.aspectRatio, height });\n    } else {\n      inputStyle.push({ width, height: width / props.aspectRatio });\n    }\n  }\n  return (\n    <Box\n      {...props}\n      ref={ref}\n      style={inputStyle}\n      onLayout={({ nativeEvent: { layout: inLayout } }: any) =>\n        setLayout(inLayout)\n      }\n    />\n  );\n});\n\nconst AspectRatio = (\n  { style, ratio, children, ...props }: IAspectRatioProps,\n  ref?: any\n) => {\n  let computedStyle: ViewStyle | undefined = style;\n  let newChildWithProps = React.cloneElement(\n    children,\n    {\n      ...children.props,\n      style: StyleSheet.absoluteFillObject,\n    },\n    children.props.children\n  );\n  let aspectRatio = !isNil(ratio) ? ratio : 4 / 3;\n\n  // DOC:  It uses a aspectRatio property of React Native and manually calculate on Web\n  if (Platform.OS === 'web') {\n    return (\n      <AspectView {...props} aspectRatio={aspectRatio} style={style} ref={ref}>\n        {newChildWithProps}\n      </AspectView>\n    );\n  } else {\n    computedStyle = StyleSheet.flatten([style, { aspectRatio }]);\n    return (\n      <Box {...props} style={computedStyle} ref={ref}>\n        {newChildWithProps}\n      </Box>\n    );\n  }\n};\n\nexport default React.memo(React.forwardRef(AspectRatio));\n"]},"metadata":{},"sourceType":"script"}