{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _Context = require(\"./Context\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Accordion/AccordionItem.tsx\";\n\nvar AccordionItem = function AccordionItem(_ref, ref) {\n  var children = _ref.children,\n      _ref$index = _ref.index,\n      pIndex = _ref$index === void 0 ? 0 : _ref$index,\n      isDisabled = _ref.isDisabled,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\", \"index\", \"isDisabled\"]);\n\n  var _React$useContext = _react.default.useContext(_Context.AccordionContext),\n      cIndex = _React$useContext.index,\n      changeHandler = _React$useContext.changeHandler;\n\n  var _useThemeProps = (0, _hooks.useThemeProps)('AccordionItem', props),\n      newProps = (0, _extends2.default)({}, _useThemeProps);\n\n  var isOpen = cIndex == null ? void 0 : cIndex.includes(pIndex);\n\n  var onClose = function onClose(cb) {\n    changeHandler && changeHandler(false, pIndex);\n    cb && cb();\n  };\n\n  var onOpen = function onOpen(cb) {\n    changeHandler && changeHandler(true, pIndex);\n    cb && cb();\n  };\n\n  var childSetter = function childSetter() {\n    if (typeof children === 'function') return children({\n      isExpanded: isOpen,\n      isDisabled: isDisabled\n    });\n    return children;\n  };\n\n  return _react.default.createElement(_Context.AccordionItemContext.Provider, {\n    value: {\n      index: pIndex,\n      isOpen: isOpen,\n      isDisabled: isDisabled,\n      onClose: onClose,\n      onOpen: onOpen\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Box.default, (0, _extends2.default)({}, newProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), childSetter()));\n};\n\nvar _default = _react.default.memo(_react.default.forwardRef(AccordionItem));\n\nexports.default = _default;","map":{"version":3,"sources":["AccordionItem.tsx"],"names":["AccordionItem","children","index","pIndex","isDisabled","props","cIndex","changeHandler","React","AccordionContext","newProps","isOpen","onClose","cb","onOpen","childSetter","isExpanded"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { AccordionContext, AccordionItemContext } from './Context';\nimport type { IAccordionItemProps, IAccordionContextProps } from './types';\nimport { useThemeProps } from '../../../hooks';\n\nconst AccordionItem = (\n  { children, index: pIndex = 0, isDisabled, ...props }: IAccordionItemProps,\n  ref?: any\n) => {\n  const {\n    index: cIndex,\n    changeHandler,\n  }: IAccordionContextProps = React.useContext(AccordionContext);\n  const { ...newProps } = useThemeProps('AccordionItem', props);\n\n  const isOpen = cIndex?.includes(pIndex);\n  const onClose = (cb?: () => void) => {\n    changeHandler && changeHandler(false, pIndex);\n    cb && cb();\n  };\n  const onOpen = (cb?: () => void) => {\n    changeHandler && changeHandler(true, pIndex);\n    cb && cb();\n  };\n  const childSetter = () => {\n    if (typeof children === 'function')\n      return children({ isExpanded: isOpen, isDisabled });\n    return children;\n  };\n  return (\n    <AccordionItemContext.Provider\n      value={{\n        index: pIndex,\n        isOpen,\n        isDisabled,\n        onClose,\n        onOpen,\n      }}\n    >\n      <Box {...newProps} ref={ref}>\n        {childSetter()}\n      </Box>\n    </AccordionItemContext.Provider>\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionItem));\n"]},"metadata":{},"sourceType":"script"}