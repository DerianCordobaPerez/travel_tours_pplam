{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Context = require(\"./Context\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _Button = _interopRequireDefault(require(\"../../primitives/Button/Button\"));\n\nvar _Icons = require(\"../../primitives/Icon/Icons\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Modal/ModalCloseButton.tsx\";\n\nvar ModalCloseButton = function ModalCloseButton(props, ref) {\n  var newProps = (0, _hooks.usePropsResolution)('ModalCloseButton', props);\n  var _icon = newProps._icon,\n      rest = (0, _objectWithoutProperties2.default)(newProps, [\"_icon\"]);\n\n  var _React$useContext = _react.default.useContext(_Context.ModalContext),\n      handleClose = _React$useContext.handleClose;\n\n  return _react.default.createElement(_Button.default, (0, _extends2.default)({\n    variant: \"ghost\"\n  }, rest, {\n    onPress: handleClose,\n    accessibilityLabel: \"Close dialog\",\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_Icons.CloseIcon, (0, _extends2.default)({}, _icon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(ModalCloseButton));\n\nexports.default = _default;","map":{"version":3,"sources":["ModalCloseButton.tsx"],"names":["ModalCloseButton","newProps","_icon","rest","handleClose","React","ModalContext"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,aAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,kCAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,+BAAA;;;;;AAGA,IAAMA,gBAAgB,GAAhBA,SAAAA,gBAAAA,CAAmB,KAAnBA,EAAmB,GAAnBA,EAAuD;AAC3D,MAAMC,QAAQ,GAAG,CAAA,GAAA,MAAA,CAAA,kBAAA,EAAA,kBAAA,EAAjB,KAAiB,CAAjB;AAD2D,MAEnDC,KAFmD,GAEhCD,QAFgC,CAAA,KAAA;AAAA,MAEzCE,IAFyC,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,QAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;AAAA,MAAA,iBAAA,GAGnCE,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAiBC,QAAAA,CAHkB,YAGnCD,CAHmC;AAAA,MAGnDD,WAHmD,GAAA,iBAAA,CAAA,WAAA;;AAI3D,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AACE,IAAA,OAAO,EADT;AAAA,GAAA,EAAA,IAAA,EAAA;AAGE,IAAA,OAAO,EAHT,WAAA;AAIE,IAAA,kBAAkB,EAJpB,cAAA;AAKE,IAAA,GAAG,EALL,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EAOE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAD,SAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EARJ;AAQI;AAAA,GAAA,CAAA,CAPF,CADF;AAJF,CAAA;;eAiBe,CAAA,GAAA,MAAA,CAAA,IAAA,EAAK,CAAA,GAAA,MAAA,CAAA,UAAA,EAAL,gBAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ModalContext } from './Context';\nimport { usePropsResolution } from '../../../hooks';\nimport Button from '../../primitives/Button/Button';\nimport { CloseIcon } from '../../primitives/Icon/Icons';\nimport type { IButtonProps } from '../../primitives/Button';\n\nconst ModalCloseButton = (props: IButtonProps, ref?: any) => {\n  const newProps = usePropsResolution('ModalCloseButton', props);\n  const { _icon, ...rest } = newProps;\n  const { handleClose } = React.useContext(ModalContext);\n  return (\n    <Button\n      variant=\"ghost\"\n      {...rest}\n      onPress={handleClose}\n      accessibilityLabel=\"Close dialog\"\n      ref={ref}\n    >\n      <CloseIcon {..._icon} />\n    </Button>\n  );\n};\n\nexport default memo(forwardRef(ModalCloseButton));\n"]},"metadata":{},"sourceType":"script"}