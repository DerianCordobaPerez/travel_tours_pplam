{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.capitalizeString = capitalizeString;\nexports.getDefaultValue = getDefaultValue;\nexports.dropdownDefaultStateValues = void 0;\nvar dropdownDefaultStateValues = {\n  highlightedIndex: -1,\n  isOpen: false,\n  selectedItem: null,\n  inputValue: ''\n};\nexports.dropdownDefaultStateValues = dropdownDefaultStateValues;\n\nfunction capitalizeString(string) {\n  return \"\" + string.slice(0, 1).toUpperCase() + string.slice(1);\n}\n\nfunction getDefaultValue(props, propKey) {\n  var defaultStateValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : dropdownDefaultStateValues;\n  var defaultPropKey = \"default\" + capitalizeString(propKey);\n\n  if (defaultPropKey in props) {\n    return props[defaultPropKey];\n  }\n\n  return defaultStateValues[propKey];\n}","map":{"version":3,"sources":["utils.ts"],"names":["dropdownDefaultStateValues","highlightedIndex","isOpen","selectedItem","inputValue","string","defaultStateValues","defaultPropKey","capitalizeString","props"],"mappings":";;;;;;AAAO,IAAMA,0BAA0B,GAAG;AACxCC,EAAAA,gBAAgB,EAAE,CADsB,CAAA;AAExCC,EAAAA,MAAM,EAFkC,KAAA;AAGxCC,EAAAA,YAAY,EAH4B,IAAA;AAIxCC,EAAAA,UAAU,EAJL;AAAmC,CAAnC;;;AAOA,SAAA,gBAAA,CAAA,MAAA,EAA0C;AAC/C,SAAA,KAAUC,MAAM,CAANA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAV,WAAUA,EAAV,GAA6CA,MAAM,CAANA,KAAAA,CAA7C,CAA6CA,CAA7C;AAGK;;AAAA,SAAA,eAAA,CAAA,KAAA,EAAA,OAAA,EAIL;AADAC,MAAAA,kBACA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GADqBN,0BAArBM;AAEA,MAAMC,cAAc,GAAA,YAAaC,gBAAgB,CAAjD,OAAiD,CAAjD;;AAEA,MAAID,cAAc,IAAlB,KAAA,EAA6B;AAC3B,WAAOE,KAAK,CAAZ,cAAY,CAAZ;AAGF;;AAAA,SAAOH,kBAAkB,CAAzB,OAAyB,CAAzB;AACD","sourcesContent":["export const dropdownDefaultStateValues = {\n  highlightedIndex: -1,\n  isOpen: false,\n  selectedItem: null,\n  inputValue: '',\n};\n\nexport function capitalizeString(string: string) {\n  return `${string.slice(0, 1).toUpperCase()}${string.slice(1)}`;\n}\n\nexport function getDefaultValue(\n  props: any,\n  propKey: any,\n  defaultStateValues = dropdownDefaultStateValues\n) {\n  const defaultPropKey = `default${capitalizeString(propKey)}`;\n\n  if (defaultPropKey in props) {\n    return props[defaultPropKey];\n  }\n  //@ts-ignore\n  return defaultStateValues[propKey];\n}\n"]},"metadata":{},"sourceType":"script"}