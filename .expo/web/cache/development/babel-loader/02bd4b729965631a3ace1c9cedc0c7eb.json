{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Stack = require(\"../Stack\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/List/Ordered.tsx\";\n\nvar OrderedList = function OrderedList(_ref, ref) {\n  var style = _ref.style,\n      children = _ref.children,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"style\", \"children\"]);\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('List', props),\n      _text = _usePropsResolution._text,\n      start = _usePropsResolution.start,\n      _hover = _usePropsResolution._hover,\n      newProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"_text\", \"start\", \"_hover\"]);\n\n  children = _react.default.Children.map(children, function (child, ind) {\n    return _react.default.cloneElement(child, (0, _extends2.default)({\n      ol: true,\n      index: ind,\n      _text: _text,\n      _hover: _hover,\n      start: start\n    }, child.props), child.props.children);\n  });\n  return _react.default.createElement(_Stack.VStack, (0, _extends2.default)({\n    style: style\n  }, newProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nvar _default = _react.default.memo(_react.default.forwardRef(OrderedList));\n\nexports.default = _default;","map":{"version":3,"sources":["Ordered.tsx"],"names":["OrderedList","style","children","props","_text","start","_hover","newProps","React","ol","index","child"],"mappings":";;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,YAAA;;AAEA,IAAA,cAAA,GAAA,OAAA,gCAAA;;;;;AAEA,IAAMA,WAAW,GAAXA,SAAAA,WAAAA,CAAc,IAAdA,EAAc,GAAdA,EAAwE;AAAvDC,MAAAA,KAAuD,GAAA,IAAA,CAAvDA,KAAAA;AAAAA,MAAOC,QAAgD,GAAA,IAAA,CAAhDA,QAAPD;AAAAA,MAAoBE,KAAmC,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,OAAA,EAAA,UAAA,CAAA,CAAvDF;;AAAuD,MAAA,mBAAA,GAC9B,CAAA,GAAA,cAAA,CAAA,kBAAA,EAAA,MAAA,EAD8B,KAC9B,CAD8B;AAAA,MACpEG,KADoE,GAAA,mBAAA,CAAA,KAAA;AAAA,MAC7DC,KAD6D,GAAA,mBAAA,CAAA,KAAA;AAAA,MACtDC,MADsD,GAAA,mBAAA,CAAA,MAAA;AAAA,MAC3CC,QAD2C,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,QAAA,CAAA,CAAA;;AAM5EL,EAAAA,QAAQ,GAAGM,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EAA6B,UAAA,KAAA,EAAA,GAAA,EAA6B;AACnE,WAAOA,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,KAAAA,EAAAA,CAAAA,GAAAA,SAAAA,CAAAA,OAAAA,EAAAA;AAGHC,MAAAA,EAAE,EAHCD,IAAAA;AAIHE,MAAAA,KAAK,EAJFF,GAAAA;AAKHJ,MAAAA,KAAK,EALFI,KAAAA;AAMHF,MAAAA,MAAM,EANHE,MAAAA;AAOHH,MAAAA,KAAK,EAPFG;AAAAA,KAAAA,EAQAG,KAAK,CARLH,KAAAA,CAAAA,EAULG,KAAK,CAALA,KAAAA,CAVF,QAAOH,CAAP;AADFN,GAAWM,CAAXN;AAcA,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAD,MAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AAAQ,IAAA,KAAK,EAAb;AAAA,GAAA,EAAA,QAAA,EAAA;AAAoC,IAAA,GAAG,EAAvC,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EADF,QACE,CADF;AApBF,CAAA;;eA2BeM,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAWA,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAXA,WAAWA,CAAXA,C","sourcesContent":["import React from 'react';\nimport { VStack } from '../Stack';\nimport type { IListProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\n\nconst OrderedList = ({ style, children, ...props }: IListProps, ref?: any) => {\n  const { _text, start, _hover, ...newProps } = usePropsResolution(\n    'List',\n    props\n  );\n  // add props to children\n  children = React.Children.map(children, (child: any, ind: number) => {\n    return React.cloneElement(\n      child,\n      {\n        ol: true,\n        index: ind,\n        _text,\n        _hover,\n        start,\n        ...child.props,\n      },\n      child.props.children\n    );\n  });\n  return (\n    <VStack style={style} {...newProps} ref={ref}>\n      {children}\n    </VStack>\n  );\n};\n\nexport default React.memo(React.forwardRef(OrderedList));\n"]},"metadata":{},"sourceType":"script"}