{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useToken = useToken;\n\nvar _useTheme = require(\"./useTheme\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nfunction useToken(property, token, fallback) {\n  var theme = (0, _useTheme.useTheme)();\n\n  if (Array.isArray(token)) {\n    var fallbackArr = [];\n\n    if (fallback) {\n      fallbackArr = Array.isArray(fallback) ? fallback : [fallback];\n    }\n\n    return token.map(function (innerToken, index) {\n      var _fallbackArr$index;\n\n      var path = property + \".\" + innerToken;\n      return (0, _lodash.default)(theme, path, (_fallbackArr$index = fallbackArr[index]) != null ? _fallbackArr$index : innerToken);\n    });\n  }\n\n  var path = property + \".\" + token;\n  return (0, _lodash.default)(theme, path, fallback != null ? fallback : token);\n}","map":{"version":3,"sources":["useToken.ts"],"names":["theme","Array","fallbackArr","token","path","property","fallback"],"mappings":";;;;;;;AAAA,IAAA,SAAA,GAAA,OAAA,cAAA;;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AAEO,SAAA,QAAA,CAAA,QAAA,EAAA,KAAA,EAAA,QAAA,EAIL;AACA,MAAMA,KAAK,GAAG,CAAA,GAAA,SAAA,CAAd,QAAc,GAAd;;AACA,MAAIC,KAAK,CAALA,OAAAA,CAAJ,KAAIA,CAAJ,EAA0B;AACxB,QAAIC,WAAgB,GAApB,EAAA;;AACA,QAAA,QAAA,EAAc;AACZA,MAAAA,WAAW,GAAGD,KAAK,CAALA,OAAAA,CAAAA,QAAAA,IAAAA,QAAAA,GAAqC,CAAnDC,QAAmD,CAAnDA;AAEF;;AAAA,WAAOC,KAAK,CAALA,GAAAA,CAAU,UAAA,UAAA,EAAA,KAAA,EAAuB;AAAA,UAAA,kBAAA;;AACtC,UAAMC,IAAI,GAAMC,QAAN,GAAA,GAAMA,GAAhB,UAAA;AACA,aAAO,CAAA,GAAA,OAAA,CAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,kBAAA,GAAiBH,WAAW,CAA5B,KAA4B,CAA5B,KAAA,IAAA,GAAA,kBAAA,GAAP,UAAO,CAAP;AAFF,KAAOC,CAAP;AAMF;;AAAA,MAAMC,IAAI,GAAMC,QAAN,GAAA,GAAMA,GAAhB,KAAA;AACA,SAAO,CAAA,GAAA,OAAA,CAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAiBC,QAAjB,IAAA,IAAiBA,GAAjB,QAAiBA,GAAxB,KAAO,CAAP;AACD","sourcesContent":["import { useTheme } from './useTheme';\nimport get from 'lodash.get';\n\nexport function useToken<T extends string | number>(\n  property: string,\n  token: T | T[],\n  fallback?: T | T[]\n) {\n  const theme = useTheme();\n  if (Array.isArray(token)) {\n    let fallbackArr: T[] = [];\n    if (fallback) {\n      fallbackArr = Array.isArray(fallback) ? fallback : [fallback];\n    }\n    return token.map((innerToken, index) => {\n      const path = `${property}.${innerToken}`;\n      return get(theme, path, fallbackArr[index] ?? innerToken);\n    });\n  }\n\n  const path = `${property}.${token}`;\n  return get(theme, path, fallback ?? token);\n}\n"]},"metadata":{},"sourceType":"script"}