{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _utils = require(\"./../../../utils\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _Center = require(\"../../composites/Center\");\n\nvar _FormControl = require(\"../../composites/FormControl\");\n\nvar _Box = _interopRequireDefault(require(\"../Box\"));\n\nvar _toggle = require(\"@react-stately/toggle\");\n\nvar _visuallyHidden = require(\"@react-aria/visually-hidden\");\n\nvar _CheckboxGroup = require(\"./CheckboxGroup\");\n\nvar _interactions = require(\"@react-native-aria/interactions\");\n\nvar _checkbox2 = require(\"@react-native-aria/checkbox\");\n\nvar _focus = require(\"@react-native-aria/focus\");\n\nvar _Icons = require(\"../Icon/Icons\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Checkbox/Checkbox.web.tsx\";\n\nvar Checkbox = function Checkbox(_ref2, ref) {\n  var children = _ref2.children,\n      icon = _ref2.icon,\n      wrapperRef = _ref2.wrapperRef,\n      props = (0, _objectWithoutProperties2.default)(_ref2, [\"children\", \"icon\", \"wrapperRef\"]);\n  var formControlContext = (0, _FormControl.useFormControlContext)();\n\n  var checkboxGroupContext = _react.default.useContext(_CheckboxGroup.CheckboxGroupContext);\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('Checkbox', (0, _extends2.default)({}, checkboxGroupContext, formControlContext, props)),\n      _usePropsResolution$_ = _usePropsResolution._interactionBox,\n      _iterationBoxHover = _usePropsResolution$_._hover,\n      _iterationBoxFocus = _usePropsResolution$_._focus,\n      _iterationBoxDisabled = _usePropsResolution$_._disabled,\n      _interactionBox = (0, _objectWithoutProperties2.default)(_usePropsResolution$_, [\"_hover\", \"_focus\", \"_disabled\"]),\n      _usePropsResolution$_2 = _usePropsResolution._checkbox,\n      _checkboxChecked = _usePropsResolution$_2._checked,\n      _checkboxDisabled = _usePropsResolution$_2._disabled,\n      _checkboxInvalid = _usePropsResolution$_2._invalid,\n      _checkbox = (0, _objectWithoutProperties2.default)(_usePropsResolution$_2, [\"_checked\", \"_disabled\", \"_invalid\"]),\n      _icon = _usePropsResolution._icon,\n      isInvalid = _usePropsResolution.isInvalid,\n      themedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"_interactionBox\", \"_checkbox\", \"_icon\", \"isInvalid\"]);\n\n  var _ref = _react.default.useRef();\n\n  var mergedRef = (0, _utils.mergeRefs)([ref, _ref]);\n  var state = (0, _toggle.useToggleState)((0, _extends2.default)({}, props, {\n    defaultSelected: props.defaultIsChecked,\n    isSelected: props.isChecked\n  }));\n  var groupState = (0, _react.useContext)(_CheckboxGroup.CheckboxGroupContext);\n\n  var _useHover = (0, _interactions.useHover)({}, _ref),\n      isHovered = _useHover.isHovered;\n\n  var _ref3 = groupState ? (0, _checkbox2.useCheckboxGroupItem)((0, _extends2.default)({}, themedProps, {\n    'aria-label': themedProps.accessibilityLabel,\n    'value': themedProps.value\n  }), groupState.state, mergedRef) : (0, _checkbox2.useCheckbox)((0, _extends2.default)({}, themedProps, {\n    'aria-label': themedProps.accessibilityLabel\n  }), state, mergedRef),\n      inputProps = _ref3.inputProps;\n\n  var checked = inputProps.checked,\n      disabled = inputProps.disabled;\n  var sizedIcon = icon ? function () {\n    return _react.default.cloneElement(icon, (0, _extends2.default)({}, _icon), icon.props.children);\n  } : null;\n\n  var _useFocusRing = (0, _focus.useFocusRing)(),\n      focusProps = _useFocusRing.focusProps,\n      isFocusVisible = _useFocusRing.isFocusVisible;\n\n  var component = _react.default.createElement(_Box.default, (0, _extends2.default)({\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  }, themedProps, {\n    opacity: disabled ? 0.4 : 1,\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_Center.Center, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_Box.default, (0, _extends2.default)({}, _interactionBox, isFocusVisible && _iterationBoxFocus, isHovered && _iterationBoxHover, disabled && _iterationBoxDisabled, disabled && _iterationBoxDisabled, {\n    style: {\n      transition: 'height 200ms, width 200ms'\n    },\n    h: isFocusVisible || isHovered ? '200%' : '100%',\n    w: isFocusVisible || isHovered ? '200%' : '100%',\n    zIndex: -1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })), _react.default.createElement(_Center.Center, (0, _extends2.default)({}, _checkbox, checked && _checkboxChecked, disabled && _checkboxDisabled, isInvalid && _checkboxInvalid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), icon && sizedIcon && checked ? sizedIcon() : _react.default.createElement(_Icons.CheckIcon, (0, _extends2.default)({\n    name: \"check\"\n  }, _icon, {\n    opacity: checked ? 1 : 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  })))), children);\n\n  return _react.default.createElement(_Box.default, {\n    accessibilityRole: \"label\",\n    ref: (0, _utils.mergeRefs)([wrapperRef, _ref]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_visuallyHidden.VisuallyHidden, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(\"input\", (0, _extends2.default)({}, inputProps, focusProps, {\n    ref: mergedRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }))), component);\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Checkbox));\n\nexports.default = _default;","map":{"version":3,"sources":["Checkbox.web.tsx"],"names":["Checkbox","children","icon","wrapperRef","props","formControlContext","checkboxGroupContext","React","CheckboxGroupContext","_iterationBoxHover","_iterationBoxFocus","_iterationBoxDisabled","_interactionBox","_checkboxChecked","_checkboxDisabled","_checkboxInvalid","_checkbox","_icon","isInvalid","themedProps","_ref","mergedRef","state","defaultSelected","isSelected","groupState","isHovered","inputProps","checked","disabled","sizedIcon","focusProps","isFocusVisible","component","transition"],"mappings":"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","sourcesContent":["import React, { useContext, memo, forwardRef } from 'react';\nimport { mergeRefs } from './../../../utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Center } from '../../composites/Center';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport Box from '../Box';\nimport type { ICheckboxProps } from './types';\nimport { useToggleState } from '@react-stately/toggle';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { CheckboxGroupContext } from './CheckboxGroup';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useCheckbox, useCheckboxGroupItem } from '@react-native-aria/checkbox';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { CheckIcon } from '../Icon/Icons';\n\nconst Checkbox = (\n  { children, icon, wrapperRef, ...props }: ICheckboxProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n  const checkboxGroupContext = React.useContext(CheckboxGroupContext);\n  const {\n    _interactionBox: {\n      _hover: _iterationBoxHover,\n      _focus: _iterationBoxFocus,\n      _disabled: _iterationBoxDisabled,\n      ..._interactionBox\n    },\n    _checkbox: {\n      _checked: _checkboxChecked,\n      _disabled: _checkboxDisabled,\n      _invalid: _checkboxInvalid,\n      ..._checkbox\n    },\n    _icon,\n    isInvalid,\n    ...themedProps\n  } = usePropsResolution('Checkbox', {\n    ...checkboxGroupContext,\n    ...formControlContext,\n    ...props,\n  });\n  const _ref = React.useRef();\n  const mergedRef = mergeRefs([ref, _ref]);\n  const state = useToggleState({\n    ...props,\n    defaultSelected: props.defaultIsChecked,\n    isSelected: props.isChecked,\n  });\n  const groupState = useContext(CheckboxGroupContext);\n  const { isHovered } = useHover({}, _ref);\n\n  // Swap hooks depending on whether this checkbox is inside a CheckboxGroup.\n  // This is a bit unorthodox. Typically, hooks cannot be called in a conditional,\n  // but since the checkbox won't move in and out of a group, it should be safe.\n  const { inputProps } = groupState\n    ? // eslint-disable-next-line react-hooks/rules-of-hooks\n      useCheckboxGroupItem(\n        {\n          ...themedProps,\n          'aria-label': themedProps.accessibilityLabel,\n          'value': themedProps.value,\n        },\n        groupState.state,\n        //@ts-ignore\n        mergedRef\n      )\n    : // eslint-disable-next-line react-hooks/rules-of-hooks\n      useCheckbox(\n        { ...themedProps, 'aria-label': themedProps.accessibilityLabel },\n        state,\n        //@ts-ignore\n        mergedRef\n      );\n\n  const { checked, disabled } = inputProps;\n\n  const sizedIcon = icon\n    ? () =>\n        React.cloneElement(\n          icon,\n          {\n            ..._icon,\n          },\n          icon.props.children\n        )\n    : null;\n  const { focusProps, isFocusVisible } = useFocusRing();\n\n  const component = (\n    <Box\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      {...themedProps}\n      opacity={disabled ? 0.4 : 1}\n      cursor={disabled ? 'not-allowed' : 'pointer'}\n    >\n      <Center>\n        {/* Interaction Box */}\n        <Box\n          {..._interactionBox}\n          {...(isFocusVisible && _iterationBoxFocus)}\n          {...(isHovered && _iterationBoxHover)}\n          {...(disabled && _iterationBoxDisabled)}\n          {...(disabled && _iterationBoxDisabled)}\n          style={{\n            // @ts-ignore - only for web\"\n            transition: 'height 200ms, width 200ms',\n          }}\n          h={isFocusVisible || isHovered ? '200%' : '100%'}\n          w={isFocusVisible || isHovered ? '200%' : '100%'}\n          zIndex={-1}\n        />\n        {/* Checkbox */}\n        <Center\n          {..._checkbox}\n          {...(checked && _checkboxChecked)}\n          {...(disabled && _checkboxDisabled)}\n          {...(isInvalid && _checkboxInvalid)}\n        >\n          {icon && sizedIcon && checked ? (\n            sizedIcon()\n          ) : (\n            <CheckIcon name=\"check\" {..._icon} opacity={checked ? 1 : 0} />\n          )}\n        </Center>\n      </Center>\n      {children}\n    </Box>\n  );\n\n  return (\n    <Box\n      // @ts-ignore - RN web supports accessibilityRole=\"label\"\n      accessibilityRole=\"label\"\n      ref={mergeRefs([wrapperRef, _ref])}\n    >\n      <VisuallyHidden>\n        <input {...inputProps} {...focusProps} ref={mergedRef} />\n      </VisuallyHidden>\n\n      {component}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Checkbox));\n"]},"metadata":{},"sourceType":"script"}