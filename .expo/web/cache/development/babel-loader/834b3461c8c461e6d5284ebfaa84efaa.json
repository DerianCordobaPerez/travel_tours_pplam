{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Context = require(\"./Context\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Box = _interopRequireDefault(require(\"../Box\"));\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Slider/SliderFilledTrack.tsx\";\n\nvar SliderFilledTrack = function SliderFilledTrack(_ref, ref) {\n  var style = _ref.style,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"style\"]);\n\n  var _React$useContext = _react.default.useContext(_Context.SliderContext),\n      isReversed = _React$useContext.isReversed,\n      colorScheme = _React$useContext.colorScheme,\n      state = _React$useContext.state,\n      trackLayout = _React$useContext.trackLayout,\n      orientation = _React$useContext.orientation,\n      sliderSize = _React$useContext.sliderSize;\n\n  var sliderTrackPosition = isReversed ? orientation === 'vertical' ? trackLayout.height - trackLayout.height * state.getThumbPercent(0) : trackLayout.width - trackLayout.width * state.getThumbPercent(0) : state.getThumbPercent(0) * 100 + '%';\n  var themeProps = (0, _useThemeProps.usePropsResolution)('SliderFilledTrack', (0, _extends2.default)({\n    size: sliderSize,\n    colorScheme: colorScheme\n  }, props));\n\n  var customStyle = _reactNative.StyleSheet.create({\n    verticalStyle: {\n      height: sliderTrackPosition,\n      width: sliderSize\n    },\n    horizontalStyle: {\n      width: sliderTrackPosition,\n      height: sliderSize\n    }\n  });\n\n  return _react.default.createElement(_Box.default, (0, _extends2.default)({\n    position: \"absolute\"\n  }, themeProps, {\n    left: orientation !== 'vertical' && !isReversed ? 0 : undefined,\n    bottom: orientation === 'vertical' && !isReversed ? 0 : undefined,\n    right: orientation !== 'vertical' && isReversed ? 0 : undefined,\n    top: orientation === 'vertical' && isReversed ? 0 : undefined\n  }, props, {\n    style: [style, orientation === 'vertical' ? customStyle.verticalStyle : customStyle.horizontalStyle],\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar _default = _react.default.forwardRef(SliderFilledTrack);\n\nexports.default = _default;","map":{"version":3,"sources":["SliderFilledTrack.tsx"],"names":["SliderFilledTrack","style","props","isReversed","colorScheme","state","trackLayout","orientation","sliderSize","React","SliderContext","sliderTrackPosition","themeProps","size","customStyle","StyleSheet","verticalStyle","height","width","horizontalStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { SliderContext } from './Context';\nimport { StyleSheet } from 'react-native';\nimport Box from '../Box';\nimport type { ISliderProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\n\nconst SliderFilledTrack = ({ style, ...props }: ISliderProps, ref?: any) => {\n  const {\n    isReversed,\n    colorScheme,\n    state,\n    trackLayout,\n    orientation,\n    sliderSize,\n  } = React.useContext(SliderContext);\n\n  const sliderTrackPosition = isReversed\n    ? orientation === 'vertical'\n      ? trackLayout.height - trackLayout.height * state.getThumbPercent(0)\n      : trackLayout.width - trackLayout.width * state.getThumbPercent(0)\n    : state.getThumbPercent(0) * 100 + '%';\n\n  const themeProps = usePropsResolution('SliderFilledTrack', {\n    size: sliderSize,\n    colorScheme,\n    ...props,\n  });\n  // NOTE: Required for WEB compatibility\n  const customStyle = StyleSheet.create({\n    verticalStyle: {\n      height: sliderTrackPosition,\n      width: sliderSize,\n    },\n    horizontalStyle: {\n      width: sliderTrackPosition,\n      height: sliderSize,\n    },\n  });\n\n  return (\n    <Box\n      position=\"absolute\"\n      {...themeProps}\n      left={orientation !== 'vertical' && !isReversed ? 0 : undefined}\n      bottom={orientation === 'vertical' && !isReversed ? 0 : undefined}\n      right={orientation !== 'vertical' && isReversed ? 0 : undefined}\n      top={orientation === 'vertical' && isReversed ? 0 : undefined}\n      {...props}\n      style={[\n        style,\n        orientation === 'vertical'\n          ? customStyle.verticalStyle\n          : customStyle.horizontalStyle,\n      ]}\n      ref={ref}\n    />\n  );\n};\n\nexport default React.forwardRef(SliderFilledTrack);\n"]},"metadata":{},"sourceType":"script"}