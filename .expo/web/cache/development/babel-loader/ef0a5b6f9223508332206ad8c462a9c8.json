{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usePlatformProps = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.merge\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar usePlatformProps = function usePlatformProps(props) {\n  var _web = props._web,\n      _ios = props._ios,\n      _android = props._android,\n      remainingProps = (0, _objectWithoutProperties2.default)(props, [\"_web\", \"_ios\", \"_android\"]);\n\n  var platformProps = function platformProps() {\n    switch (_reactNative.Platform.OS) {\n      case 'web':\n        return _web;\n\n      case 'ios':\n        return _ios;\n\n      case 'android':\n        return _android;\n\n      default:\n        return {};\n    }\n  };\n\n  return (0, _lodash.default)(remainingProps, platformProps());\n};\n\nexports.usePlatformProps = usePlatformProps;","map":{"version":3,"sources":["usePlatformProps.ts"],"names":["usePlatformProps","_web","_ios","_android","remainingProps","props","platformProps","Platform"],"mappings":";;;;;;;;;AAAA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;;;AAGO,IAAMA,gBAAgB,GAAhBA,SAAAA,gBAAAA,CAAmB,KAAnBA,EAAmC;AAAA,MACtCC,IADsC,GACMI,KADN,CAAA,IAAA;AAAA,MAChCH,IADgC,GACMG,KADN,CAAA,IAAA;AAAA,MAC1BF,QAD0B,GACME,KADN,CAAA,QAAA;AAAA,MACbD,cADa,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,UAAA,CAAA,CAAA;;AAE9C,MAAME,aAAa,GAAbA,SAAAA,aAAAA,GAAsB;AAC1B,YAAQC,YAAAA,CAAAA,QAAAA,CAAR,EAAA;AACE,WAAA,KAAA;AACE,eAAA,IAAA;;AACF,WAAA,KAAA;AACE,eAAA,IAAA;;AACF,WAAA,SAAA;AACE,eAAA,QAAA;;AACF;AACE,eARJ,EAQI;AARJ;AADF,GAAA;;AAYA,SAAO,CAAA,GAAA,OAAA,CAAA,OAAA,EAAA,cAAA,EAAsBD,aAA7B,EAAO,CAAP;AAdK,CAAA","sourcesContent":["import merge from 'lodash.merge';\nimport { Platform } from 'react-native';\n\nexport const usePlatformProps = (props: any) => {\n  const { _web, _ios, _android, ...remainingProps } = props;\n  const platformProps = () => {\n    switch (Platform.OS) {\n      case 'web':\n        return _web;\n      case 'ios':\n        return _ios;\n      case 'android':\n        return _android;\n      default:\n        return {};\n    }\n  };\n  return merge(remainingProps, platformProps());\n};\n"]},"metadata":{},"sourceType":"script"}