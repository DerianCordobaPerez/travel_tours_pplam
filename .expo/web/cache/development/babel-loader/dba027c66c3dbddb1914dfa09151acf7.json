{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _SVGIcon = _interopRequireDefault(require(\"./SVGIcon\"));\n\nvar _factory = require(\"../../../factory\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Icon/Icon.tsx\";\n\nvar Icon = function Icon(_ref, ref) {\n  var as = _ref.as,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"as\"]);\n\n  var _usePropsResolution = (0, _hooks.usePropsResolution)('Icon', props),\n      size = _usePropsResolution.size,\n      resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"size\"]);\n\n  var tokenizedFontSize = (0, _hooks.useToken)('space', size);\n\n  if (!as) {\n    return _react.default.createElement(_SVGIcon.default, (0, _extends2.default)({\n      size: size\n    }, resolvedProps, {\n      ref: ref,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  var isJSX = _react.default.isValidElement(as);\n\n  var StyledAs = (0, _factory.Factory)(isJSX ? function (resolvedProps) {\n    return _react.default.cloneElement(as, (0, _extends2.default)({}, resolvedProps, as.props));\n  } : as);\n  return _react.default.createElement(StyledAs, (0, _extends2.default)({}, resolvedProps, {\n    fontSize: tokenizedFontSize,\n    lineHeight: tokenizedFontSize,\n    size: size,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Icon));\n\nexports.default = _default;","map":{"version":3,"sources":["Icon.tsx"],"names":["Icon","as","props","size","resolvedProps","tokenizedFontSize","isJSX","React","StyledAs"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AAEA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,aAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,oBAAA;;;;;AAEA,IAAMA,IAAI,GAAJA,SAAAA,IAAAA,CAAO,IAAPA,EAAO,GAAPA,EAAoD;AAA1CC,MAAAA,EAA0C,GAAA,IAAA,CAA1CA,EAAAA;AAAAA,MAAOC,KAAmC,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,IAAA,CAAA,CAA1CD;;AAA0C,MAAA,mBAAA,GACrB,CAAA,GAAA,MAAA,CAAA,kBAAA,EAAA,MAAA,EADqB,KACrB,CADqB;AAAA,MAChDE,IADgD,GAAA,mBAAA,CAAA,IAAA;AAAA,MACvCC,aADuC,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,MAAA,CAAA,CAAA;;AAExD,MAAMC,iBAAiB,GAAG,CAAA,GAAA,MAAA,CAAA,QAAA,EAAA,OAAA,EAA1B,IAA0B,CAA1B;;AAEA,MAAI,CAAJ,EAAA,EAAS;AACP,WAAO,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,QAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AAAS,MAAA,IAAI,EAAb;AAAA,KAAA,EAAA,aAAA,EAAA;AAAwC,MAAA,GAAG,EAA3C,GAAA;AAAA,MAAA,MAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAP;AAAO;AAAA,KAAA,CAAA,CAAP;AAEF;;AAAA,MAAMC,KAAK,GAAGC,MAAAA,CAAAA,OAAAA,CAAAA,cAAAA,CAAd,EAAcA,CAAd;;AACA,MAAMC,QAAQ,GAAG,CAAA,GAAA,QAAA,CAAA,OAAA,EACfF,KAAK,GACD,UAAA,aAAA,EAAA;AAAA,WACEC,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,EAAAA,EAAAA,CAAAA,GAAAA,SAAAA,CAAAA,OAAAA,EAAAA,EAAAA,EAAAA,aAAAA,EAEKN,EAAE,CAHT,KACEM,CAAAA,CADF;AADC,GAAA,GADP,EAAiB,CAAjB;AAUA,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,QAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,aAAA,EAAA;AAEE,IAAA,QAAQ,EAFV,iBAAA;AAGE,IAAA,UAAU,EAHZ,iBAAA;AAIE,IAAA,IAAI,EAJN,IAAA;AAKE,IAAA,GAAG,EALL,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EADF;AACE;AAAA,GAAA,CAAA,CADF;AAlBF,CAAA;;eA6Be,CAAA,GAAA,MAAA,CAAA,IAAA,EAAK,CAAA,GAAA,MAAA,CAAA,UAAA,EAAL,IAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { useToken, usePropsResolution } from '../../../hooks';\nimport type { IIconProps } from './types';\nimport SVGIcon from './SVGIcon';\nimport { Factory } from '../../../factory';\n\nconst Icon = ({ as, ...props }: IIconProps, ref?: any) => {\n  const { size, ...resolvedProps } = usePropsResolution('Icon', props);\n  const tokenizedFontSize = useToken('space', size);\n\n  if (!as) {\n    return <SVGIcon size={size} {...resolvedProps} ref={ref} />;\n  }\n  const isJSX = React.isValidElement(as);\n  const StyledAs = Factory(\n    isJSX\n      ? (resolvedProps) =>\n          React.cloneElement(as, {\n            ...resolvedProps,\n            ...as.props,\n          })\n      : as\n  );\n\n  return (\n    <StyledAs\n      {...resolvedProps}\n      fontSize={tokenizedFontSize}\n      lineHeight={tokenizedFontSize}\n      size={size}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(Icon));\n"]},"metadata":{},"sourceType":"script"}