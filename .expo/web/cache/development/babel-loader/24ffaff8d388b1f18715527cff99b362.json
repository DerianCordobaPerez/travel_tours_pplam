{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tooltip = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _overlays = require(\"@react-native-aria/overlays\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _Popper = require(\"../Popper\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _Transitions = require(\"../Transitions\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _utils2 = require(\"@react-aria/utils\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Tooltip/Tooltip.tsx\";\n\nvar Tooltip = function Tooltip(_ref) {\n  var _ref2, _ref3, _rest$backgroundColor;\n\n  var label = _ref.label,\n      children = _ref.children,\n      onClose = _ref.onClose,\n      onOpen = _ref.onOpen,\n      defaultIsOpen = _ref.defaultIsOpen,\n      placement = _ref.placement,\n      _ref$openDelay = _ref.openDelay,\n      openDelay = _ref$openDelay === void 0 ? 0 : _ref$openDelay,\n      _ref$closeDelay = _ref.closeDelay,\n      closeDelay = _ref$closeDelay === void 0 ? 0 : _ref$closeDelay,\n      _ref$closeOnClick = _ref.closeOnClick,\n      closeOnClick = _ref$closeOnClick === void 0 ? true : _ref$closeOnClick,\n      offset = _ref.offset,\n      isDisabled = _ref.isDisabled,\n      hasArrow = _ref.hasArrow,\n      _ref$arrowSize = _ref.arrowSize,\n      arrowSize = _ref$arrowSize === void 0 ? 12 : _ref$arrowSize,\n      isOpenProp = _ref.isOpen,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"label\", \"children\", \"onClose\", \"onOpen\", \"defaultIsOpen\", \"placement\", \"openDelay\", \"closeDelay\", \"closeOnClick\", \"offset\", \"isDisabled\", \"hasArrow\", \"arrowSize\", \"isOpen\"]);\n\n  if (hasArrow && offset === undefined) {\n    offset = 0;\n  } else {\n    offset = 6;\n  }\n\n  var themeProps = (0, _hooks.usePropsResolution)('Tooltip', rest);\n\n  var _useControllableState = (0, _hooks.useControllableState)({\n    value: isOpenProp,\n    defaultValue: defaultIsOpen,\n    onChange: function onChange(value) {\n      value ? onOpen && onOpen() : onClose && onClose();\n    }\n  }),\n      _useControllableState2 = (0, _slicedToArray2.default)(_useControllableState, 2),\n      isOpen = _useControllableState2[0],\n      setIsOpen = _useControllableState2[1];\n\n  var arrowBg = (_ref2 = (_ref3 = (_rest$backgroundColor = rest.backgroundColor) != null ? _rest$backgroundColor : rest.bgColor) != null ? _ref3 : rest.bg) != null ? _ref2 : themeProps.bg;\n\n  var targetRef = _react.default.useRef(null);\n\n  var enterTimeout = _react.default.useRef();\n\n  var exitTimeout = _react.default.useRef();\n\n  var tooltipID = (0, _utils2.useId)();\n\n  var openWithDelay = _react.default.useCallback(function () {\n    if (!isDisabled) {\n      enterTimeout.current = setTimeout(function () {\n        return setIsOpen(true);\n      }, openDelay);\n    }\n  }, [isDisabled, setIsOpen, openDelay]);\n\n  var closeWithDelay = _react.default.useCallback(function () {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current);\n    }\n\n    exitTimeout.current = setTimeout(function () {\n      return setIsOpen(false);\n    }, closeDelay);\n  }, [closeDelay, setIsOpen]);\n\n  _react.default.useEffect(function () {\n    return function () {\n      clearTimeout(enterTimeout.current);\n      clearTimeout(exitTimeout.current);\n    };\n  }, []);\n\n  var newChildren = children;\n\n  if (typeof children === 'string') {\n    newChildren = _react.default.createElement(_Box.default, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, children);\n  }\n\n  newChildren = _react.default.cloneElement(newChildren, {\n    'onPress': (0, _utils.composeEventHandlers)(newChildren.props.onPress, function () {\n      if (closeOnClick) {\n        closeWithDelay();\n      }\n    }),\n    'onFocus': (0, _utils.composeEventHandlers)(newChildren.props.onFocus, openWithDelay),\n    'onBlur': (0, _utils.composeEventHandlers)(newChildren.props.onBlur, closeWithDelay),\n    'onMouseEnter': (0, _utils.composeEventHandlers)(newChildren.props.onMouseEnter, openWithDelay),\n    'onMouseLeave': (0, _utils.composeEventHandlers)(newChildren.props.onMouseLeave, closeWithDelay),\n    'ref': (0, _utils.mergeRefs)([newChildren.ref, targetRef]),\n    'aria-describedby': isOpen ? tooltipID : undefined\n  });\n  (0, _hooks.useKeyboardDismissable)({\n    enabled: isOpen,\n    callback: function callback() {\n      return setIsOpen(false);\n    }\n  });\n  return _react.default.createElement(_react.default.Fragment, null, newChildren, isOpen && _react.default.createElement(_overlays.OverlayContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_Transitions.PresenceTransition, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1,\n      transition: {\n        duration: 150\n      }\n    },\n    exit: {\n      opacity: 0,\n      transition: {\n        duration: 100\n      }\n    },\n    visible: isOpen,\n    style: _reactNative.StyleSheet.absoluteFill,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_Popper.Popper, {\n    triggerRef: targetRef,\n    onClose: function onClose() {\n      return setIsOpen(false);\n    },\n    placement: placement,\n    offset: offset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_Popper.Popper.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, hasArrow && _react.default.createElement(_Popper.Popper.Arrow, {\n    borderColor: \"transparent\",\n    backgroundColor: arrowBg,\n    height: arrowSize,\n    width: arrowSize,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }), _react.default.createElement(_Box.default, (0, _extends2.default)({}, themeProps, {\n    accessibilityRole: _reactNative.Platform.OS === 'web' ? 'tooltip' : undefined,\n    nativeID: tooltipID,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }), label))))));\n};\n\nexports.Tooltip = Tooltip;","map":{"version":3,"sources":["Tooltip.tsx"],"names":["Tooltip","label","children","onClose","onOpen","defaultIsOpen","placement","openDelay","closeDelay","closeOnClick","offset","isDisabled","hasArrow","arrowSize","isOpen","isOpenProp","rest","themeProps","setIsOpen","value","defaultValue","onChange","arrowBg","targetRef","React","enterTimeout","exitTimeout","tooltipID","openWithDelay","setTimeout","closeWithDelay","clearTimeout","newChildren","enabled","callback","opacity","transition","duration","StyleSheet","Platform"],"mappings":"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","sourcesContent":["import { OverlayContainer } from '@react-native-aria/overlays';\nimport React from 'react';\nimport { useControllableState, useKeyboardDismissable } from '../../../hooks';\nimport { Popper } from '../Popper';\nimport { composeEventHandlers, mergeRefs } from '../../../utils';\nimport { PresenceTransition } from '../Transitions';\nimport { Platform, StyleSheet } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { useId } from '@react-aria/utils';\n\ninterface ITooltipProps extends IBoxProps {\n  /**\n   * Text to be placed in the tooltip\n   */\n  label: string;\n  /**\n   * Whether the tooltip is opened. Useful for conrolling the open state\n   */\n  isOpen?: boolean;\n  /**\n   * Whether the tooltip is disabled\n   */\n  isDisabled?: boolean;\n  /**\n   * If true, the popover will be opened by default\n   */\n  defaultIsOpen?: boolean;\n  /**\n   * This function will be invoked when tooltip is closed. It'll also be called when user attempts to close the tooltip via Escape key\n   */\n  onClose?: () => void;\n  /**\n   * This function will be invoked when tooltip is opened\n   */\n  onOpen?: () => void;\n  /**\n   * Duration in ms to wait till displaying the tooltip\n   * @default 0\n   */\n  openDelay?: number;\n  /**\n   * Duration in ms to wait till hiding the tooltip\n   * @default 0\n   */\n  closeDelay?: number;\n  /**\n   * Tooltip placement\n   * @default bottom\n   */\n  placement?:\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top left'\n    | 'top right'\n    | 'bottom left'\n    | 'bottom right'\n    | 'right top'\n    | 'right bottom'\n    | 'left top'\n    | 'left bottom';\n  /**\n   * Children passed will be used as Trigger element for the tooltip\n   */\n  children: any;\n  /**\n   * Whether tooltip should be closed on Trigger click\n   * @default true\n   */\n  closeOnClick?: boolean;\n  /**\n   * Size of the arrow\n   * @default 12\n   */\n  arrowSize?: number;\n  /**\n   * Whether tooltip should display arrow\n   * @default false\n   */\n  hasArrow?: boolean;\n  /**\n   * Distance between the trigger and the tooltip\n   */\n  offset?: number;\n}\n\nexport const Tooltip = ({\n  label,\n  children,\n  onClose,\n  onOpen,\n  defaultIsOpen,\n  placement,\n  openDelay = 0,\n  closeDelay = 0,\n  closeOnClick = true,\n  offset,\n  isDisabled,\n  hasArrow,\n  arrowSize = 12,\n  isOpen: isOpenProp,\n  ...rest\n}: ITooltipProps) => {\n  if (hasArrow && offset === undefined) {\n    offset = 0;\n  } else {\n    offset = 6;\n  }\n\n  const themeProps = usePropsResolution('Tooltip', rest);\n  const [isOpen, setIsOpen] = useControllableState({\n    value: isOpenProp,\n    defaultValue: defaultIsOpen,\n    onChange: (value) => {\n      value ? onOpen && onOpen() : onClose && onClose();\n    },\n  });\n\n  const arrowBg =\n    rest.backgroundColor ?? rest.bgColor ?? rest.bg ?? themeProps.bg;\n\n  const targetRef = React.useRef(null);\n\n  const enterTimeout = React.useRef<number>();\n  const exitTimeout = React.useRef<number>();\n  const tooltipID = useId();\n\n  const openWithDelay = React.useCallback(() => {\n    if (!isDisabled) {\n      enterTimeout.current = setTimeout(() => setIsOpen(true), openDelay);\n    }\n  }, [isDisabled, setIsOpen, openDelay]);\n\n  const closeWithDelay = React.useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current);\n    }\n    exitTimeout.current = setTimeout(() => setIsOpen(false), closeDelay);\n  }, [closeDelay, setIsOpen]);\n\n  React.useEffect(\n    () => () => {\n      clearTimeout(enterTimeout.current);\n      clearTimeout(exitTimeout.current);\n    },\n    []\n  );\n\n  let newChildren = children;\n\n  if (typeof children === 'string') {\n    newChildren = <Box>{children}</Box>;\n  }\n\n  newChildren = React.cloneElement(newChildren, {\n    'onPress': composeEventHandlers<any>(newChildren.props.onPress, () => {\n      if (closeOnClick) {\n        closeWithDelay();\n      }\n    }),\n    'onFocus': composeEventHandlers<any>(\n      newChildren.props.onFocus,\n      openWithDelay\n    ),\n    'onBlur': composeEventHandlers<any>(\n      newChildren.props.onBlur,\n      closeWithDelay\n    ),\n    'onMouseEnter': composeEventHandlers<any>(\n      newChildren.props.onMouseEnter,\n      openWithDelay\n    ),\n    'onMouseLeave': composeEventHandlers<any>(\n      newChildren.props.onMouseLeave,\n      closeWithDelay\n    ),\n    'ref': mergeRefs([newChildren.ref, targetRef]),\n\n    'aria-describedby': isOpen ? tooltipID : undefined,\n  });\n\n  useKeyboardDismissable({\n    enabled: isOpen,\n    callback: () => setIsOpen(false),\n  });\n\n  return (\n    <>\n      {newChildren}\n      {isOpen && (\n        <OverlayContainer>\n          <PresenceTransition\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1, transition: { duration: 150 } }}\n            exit={{ opacity: 0, transition: { duration: 100 } }}\n            visible={isOpen}\n            style={StyleSheet.absoluteFill}\n          >\n            <Popper\n              triggerRef={targetRef}\n              onClose={() => setIsOpen(false)}\n              placement={placement}\n              offset={offset}\n            >\n              <Popper.Content>\n                {hasArrow && (\n                  <Popper.Arrow\n                    borderColor=\"transparent\"\n                    backgroundColor={arrowBg}\n                    height={arrowSize}\n                    width={arrowSize}\n                  />\n                )}\n                <Box\n                  {...themeProps}\n                  //@ts-ignore\n                  accessibilityRole={\n                    Platform.OS === 'web' ? 'tooltip' : undefined\n                  }\n                  nativeID={tooltipID}\n                >\n                  {label}\n                </Box>\n              </Popper.Content>\n            </Popper>\n          </PresenceTransition>\n        </OverlayContainer>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"script"}