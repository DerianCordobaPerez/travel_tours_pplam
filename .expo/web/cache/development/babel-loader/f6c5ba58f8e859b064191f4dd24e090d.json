{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Flex = _interopRequireDefault(require(\"../../primitives/Flex\"));\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Breadcrumb/BreadcrumbItem.tsx\";\n\nvar BreadcrumbItem = function BreadcrumbItem(props, ref) {\n  var children = props.children,\n      isCurrentPage = props.isCurrentPage,\n      _text = props._text,\n      remainingProps = (0, _objectWithoutProperties2.default)(props, [\"children\", \"isCurrentPage\", \"_text\"]);\n  return _react.default.createElement(_Flex.default, (0, _extends2.default)({}, remainingProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }), _react.default.Children.map(children, function (child, index) {\n    return _react.default.cloneElement(child, (0, _extends2.default)({\n      'key': \"breadcrumb-item-\" + index,\n      '_text': (0, _extends2.default)({}, _text, {\n        fontWeight: isCurrentPage ? 'bold' : undefined\n      })\n    }, {\n      isUnderlined: false\n    }, remainingProps, {\n      'aria-current': _reactNative.Platform.OS === 'web' && isCurrentPage ? 'page' : undefined\n    }));\n  }));\n};\n\nvar _default = _react.default.memo((0, _react.forwardRef)(BreadcrumbItem));\n\nexports.default = _default;","map":{"version":3,"sources":["BreadcrumbItem.tsx"],"names":["BreadcrumbItem","children","isCurrentPage","_text","remainingProps","props","React","fontWeight","isUnderlined","Platform"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,yBAAA,CAAA;;;;;AAGA,IAAMA,cAAc,GAAdA,SAAAA,cAAAA,CAAiB,KAAjBA,EAAiB,GAAjBA,EAA6D;AAAA,MACzDC,QADyD,GACHI,KADG,CAAA,QAAA;AAAA,MAC/CH,aAD+C,GACHG,KADG,CAAA,aAAA;AAAA,MAChCF,KADgC,GACHE,KADG,CAAA,KAAA;AAAA,MACtBD,cADsB,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,CAAA;AAEjE,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,cAAA,EAAA;AAA0B,IAAA,GAAG,EAA7B,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,CAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EACGE,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EAA6B,UAAA,KAAA,EAAA,KAAA,EAAA;AAAA,WAC5BA,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,KAAAA,EAAAA,CAAAA,GAAAA,SAAAA,CAAAA,OAAAA,EAAAA;AACE,aAAA,qBADFA,KAAAA;AAEE,eAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA;AAEEC,QAAAA,UAAU,EAAEL,aAAa,GAAA,MAAA,GAJ7BI;AAEE,OAAA;AAFFA,KAAAA,EAMK;AACDE,MAAAA,YAAY,EAPhBF;AAMK,KANLA,EAAAA,cAAAA,EAAAA;AAUE,sBACEG,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,IAAAA,aAAAA,GAAAA,MAAAA,GAZwB;AAC5BH,KAAAA,CAAAA,CAD4B;AAFlC,GAEKA,CADH,CADF;AAFF,CAAA;;eAuBeA,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAW,CAAA,GAAA,MAAA,CAAA,UAAA,EAAXA,cAAW,CAAXA,C","sourcesContent":["import React, { forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport Flex from '../../primitives/Flex';\nimport type { IBreadcrumbItemProps } from './types';\n\nconst BreadcrumbItem = (props: IBreadcrumbItemProps, ref?: any) => {\n  const { children, isCurrentPage, _text, ...remainingProps } = props;\n  return (\n    <Flex {...remainingProps} ref={ref}>\n      {React.Children.map(children, (child: any, index: number) =>\n        React.cloneElement(child, {\n          'key': `breadcrumb-item-${index}`,\n          '_text': {\n            ..._text, //taken out empty _text prop from props\n            fontWeight: isCurrentPage ? 'bold' : undefined,\n          },\n          ...{\n            isUnderlined: false,\n          },\n          ...remainingProps,\n          'aria-current':\n            Platform.OS === 'web' && isCurrentPage ? 'page' : undefined,\n        })\n      )}\n    </Flex>\n  );\n};\n\nexport default React.memo(forwardRef(BreadcrumbItem));\n"]},"metadata":{},"sourceType":"script"}