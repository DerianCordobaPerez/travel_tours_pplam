{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../Box\"));\n\nvar _utils = require(\"../../../utils\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Stack/Stack.tsx\";\n\nvar Stack = function Stack(_ref, ref) {\n  var space = _ref.space,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"space\"]);\n  var children = props.children,\n      divider = props.divider,\n      reversed = props.reversed,\n      remainingProps = (0, _objectWithoutProperties2.default)(props, [\"children\", \"divider\", \"reversed\"]);\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('Stack', (0, _extends2.default)({}, remainingProps, {\n    size: space\n  })),\n      size = _usePropsResolution.size,\n      direction = _usePropsResolution.direction,\n      newProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"size\", \"direction\"]);\n\n  return _react.default.createElement(_Box.default, (0, _extends2.default)({\n    flexDirection: direction\n  }, newProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), (0, _utils.getSpacedChildren)(children, size, direction === 'row' ? 'X' : 'Y', reversed ? 'reverse' : 'normal', divider));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Stack));\n\nexports.default = _default;","map":{"version":3,"sources":["Stack.tsx"],"names":["Stack","space","props","children","divider","reversed","remainingProps","size","direction","newProps"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,UAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,cAAA,GAAA,OAAA,gCAAA;;;;;AA0BA,IAAMA,KAAK,GAALA,SAAAA,KAAAA,CAAQ,IAARA,EAAQ,GAARA,EAAyD;AAA9CC,MAAAA,KAA8C,GAAA,IAAA,CAA9CA,KAAAA;AAAAA,MAAUC,KAAoC,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,OAAA,CAAA,CAA9CD;AAA8C,MACrDE,QADqD,GACFD,KADE,CAAA,QAAA;AAAA,MAC3CE,OAD2C,GACFF,KADE,CAAA,OAAA;AAAA,MAClCG,QADkC,GACFH,KADE,CAAA,QAAA;AAAA,MACrBI,cADqB,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,CAAA,UAAA,EAAA,SAAA,EAAA,UAAA,CAAA,CAAA;;AAAA,MAAA,mBAAA,GAEf,CAAA,GAAA,cAAA,CAAA,kBAAA,EAAA,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,cAAA,EAAA;AAE5CC,IAAAA,IAAI,EAJuD;AAEf,GAAA,CAAA,CAFe;AAAA,MAErDA,IAFqD,GAAA,mBAAA,CAAA,IAAA;AAAA,MAE/CC,SAF+C,GAAA,mBAAA,CAAA,SAAA;AAAA,MAEjCC,QAFiC,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,MAAA,EAAA,WAAA,CAAA,CAAA;;AAO7D,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AAAK,IAAA,aAAa,EAAlB;AAAA,GAAA,EAAA,QAAA,EAAA;AAA6C,IAAA,GAAG,EAAhD,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EACG,CAAA,GAAA,MAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,IAAA,EAGCD,SAAS,KAATA,KAAAA,GAAAA,GAAAA,GAHD,GAAA,EAICH,QAAQ,GAAA,SAAA,GAJT,QAAA,EAFL,OAEK,CADH,CADF;AAPF,CAAA;;eAoBe,CAAA,GAAA,MAAA,CAAA,IAAA,EAAK,CAAA,GAAA,MAAA,CAAA,UAAA,EAAL,KAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { default as Box } from '../Box';\nimport { getSpacedChildren } from '../../../utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IBoxProps } from '../Box';\nimport type { ResponsiveValue } from '../../types';\n\nexport interface IStackProps extends IBoxProps {\n  /**\n   * The divider element to use between elements.\n   */\n  divider?: JSX.Element;\n  /**\n   * The space between each stack item. Accepts Responsive values\n   */\n  space?: ResponsiveValue<\n    'gutter' | '2xs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | number\n  >;\n  /**\n   * Determines whether to reverse the direction of Stack Items.\n   */\n  reversed?: boolean;\n  /**\n   * The direction of the Stack Items.\n   * @default column\n   */\n  direction?: ResponsiveValue<'column' | 'row'>;\n}\n\nconst Stack = ({ space, ...props }: IStackProps, ref?: any) => {\n  const { children, divider, reversed, ...remainingProps } = props;\n  const { size, direction, ...newProps }: any = usePropsResolution('Stack', {\n    ...remainingProps,\n    size: space, // Passing space as size of spacer elements.\n  });\n\n  return (\n    <Box flexDirection={direction} {...newProps} ref={ref}>\n      {getSpacedChildren(\n        children,\n        size,\n        direction === 'row' ? 'X' : 'Y',\n        reversed ? 'reverse' : 'normal',\n        divider\n      )}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Stack));\n"]},"metadata":{},"sourceType":"script"}