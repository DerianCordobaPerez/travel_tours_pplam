{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _Context = require(\"./Context\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _interactions = require(\"@react-native-aria/interactions\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Accordion/AccordionSummary.tsx\";\n\nvar AccordionSummary = function AccordionSummary(_ref2, ref) {\n  var children = _ref2.children,\n      props = (0, _objectWithoutProperties2.default)(_ref2, [\"children\"]);\n\n  var _React$useContext = _react.default.useContext(_Context.AccordionItemContext),\n      index = _React$useContext.index,\n      isOpen = _React$useContext.isOpen,\n      isDisabled = _React$useContext.isDisabled,\n      onOpen = _React$useContext.onOpen,\n      onClose = _React$useContext.onClose;\n\n  var _useThemeProps = (0, _hooks.useThemeProps)('AccordionSummary', props),\n      _hover = _useThemeProps._hover,\n      _expanded = _useThemeProps._expanded,\n      _disabled = _useThemeProps._disabled,\n      themedProps = (0, _objectWithoutProperties2.default)(_useThemeProps, [\"_hover\", \"_expanded\", \"_disabled\"]);\n\n  var pressHandler = function pressHandler() {\n    isOpen ? onClose && onClose() : onOpen && onOpen();\n  };\n\n  var _ref = _react.default.useRef(null);\n\n  var _useHover = (0, _interactions.useHover)({}, _ref),\n      isHovered = _useHover.isHovered;\n\n  return _react.default.createElement(_reactNative.TouchableOpacity, {\n    activeOpacity: 0.2,\n    disabled: isDisabled,\n    onPress: pressHandler,\n    accessible: true,\n    accessibilityRole: \"checkbox\",\n    ref: (0, _utils.mergeRefs)([ref, _ref]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Box.default, (0, _extends2.default)({\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  }, themedProps, isHovered && _hover, isOpen && _expanded, isDisabled && _disabled, !index && {\n    borderTopColor: 'transparent'\n  }, _reactNative.Platform.OS === 'web' ? {\n    disabled: isDisabled,\n    cursor: isDisabled ? 'not-allowed' : 'auto'\n  } : {}, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), children));\n};\n\nvar _default = _react.default.memo(_react.default.forwardRef(AccordionSummary));\n\nexports.default = _default;","map":{"version":3,"sources":["AccordionSummary.tsx"],"names":["AccordionSummary","children","props","index","isOpen","isDisabled","onOpen","onClose","React","AccordionItemContext","_hover","_expanded","_disabled","themedProps","pressHandler","_ref","isHovered","borderTopColor","Platform","disabled","cursor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport Box from '../../primitives/Box';\nimport type {\n  IAccordionSummaryProps,\n  IAccordionItemContextProps,\n} from './types';\nimport { AccordionItemContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\nimport { mergeRefs } from '../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\n\nconst AccordionSummary = (\n  { children, ...props }: IAccordionSummaryProps,\n  ref: any\n) => {\n  const {\n    index,\n    isOpen,\n    isDisabled,\n    onOpen,\n    onClose,\n  }: IAccordionItemContextProps = React.useContext(AccordionItemContext);\n\n  const { _hover, _expanded, _disabled, ...themedProps } = useThemeProps(\n    'AccordionSummary',\n    props\n  );\n  const pressHandler = () => {\n    isOpen ? onClose && onClose() : onOpen && onOpen();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  return (\n    <TouchableOpacity\n      activeOpacity={0.2}\n      disabled={isDisabled}\n      onPress={pressHandler}\n      accessible\n      accessibilityRole=\"checkbox\"\n      ref={mergeRefs([ref, _ref])}\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        {...themedProps}\n        {...(isHovered && _hover)}\n        {...(isOpen && _expanded)}\n        {...(isDisabled && _disabled)}\n        {...(!index && { borderTopColor: 'transparent' })}\n        {...(Platform.OS === 'web'\n          ? {\n              disabled: isDisabled,\n              cursor: isDisabled ? 'not-allowed' : 'auto',\n            }\n          : {})}\n      >\n        {children}\n      </Box>\n    </TouchableOpacity>\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionSummary));\n"]},"metadata":{},"sourceType":"script"}