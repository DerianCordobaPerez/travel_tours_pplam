{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Input = require(\"../Input\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/TextArea/index.tsx\";\n\nvar TextArea = function TextArea(_ref, ref) {\n  var wrapperRef = _ref.wrapperRef,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"wrapperRef\"]);\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('TextArea', props),\n      totalLines = _usePropsResolution.totalLines,\n      newProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"totalLines\"]);\n\n  return _react.default.createElement(_Input.Input, (0, _extends2.default)({}, newProps, {\n    numberOfLines: totalLines,\n    wrapperRef: wrapperRef,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(TextArea));\n\nexports.default = _default;","map":{"version":3,"sources":["index.tsx"],"names":["TextArea","wrapperRef","props","totalLines","newProps"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,YAAA;;AACA,IAAA,cAAA,GAAA,OAAA,gCAAA;;;;;AAQA,IAAMA,QAAQ,GAARA,SAAAA,QAAAA,CAAW,IAAXA,EAAW,GAAXA,EAAmE;AAArDC,MAAAA,UAAqD,GAAA,IAAA,CAArDA,UAAAA;AAAAA,MAAeC,KAAsC,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,YAAA,CAAA,CAArDD;;AAAqD,MAAA,mBAAA,GACnC,CAAA,GAAA,cAAA,CAAA,kBAAA,EAAA,UAAA,EADmC,KACnC,CADmC;AAAA,MAC/DE,UAD+D,GAAA,mBAAA,CAAA,UAAA;AAAA,MAChDC,QADgD,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,YAAA,CAAA,CAAA;;AAEvE,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAD,KAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,QAAA,EAAA;AAEE,IAAA,aAAa,EAFf,UAAA;AAGE,IAAA,UAAU,EAHZ,UAAA;AAIE,IAAA,GAAG,EAJL,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EADF;AACE;AAAA,GAAA,CAAA,CADF;AAFF,CAAA;;eAYe,CAAA,GAAA,MAAA,CAAA,IAAA,EAAK,CAAA,GAAA,MAAA,CAAA,UAAA,EAAL,QAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Input, IInputProps } from '../Input';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nexport interface ITextAreaProps extends IInputProps {\n  /**\n   * Maps to react-native TextInput's numberOfLines.\n   */\n  totalLines?: number;\n}\n\nconst TextArea = ({ wrapperRef, ...props }: ITextAreaProps, ref: any) => {\n  const { totalLines, ...newProps } = usePropsResolution('TextArea', props);\n  return (\n    <Input\n      {...newProps}\n      numberOfLines={totalLines}\n      wrapperRef={wrapperRef}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(TextArea));\n"]},"metadata":{},"sourceType":"script"}