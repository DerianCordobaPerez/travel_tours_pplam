{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _Box = _interopRequireDefault(require(\"./../../primitives/Box\"));\n\nvar _tools = require(\"../../../theme/tools\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Divider/index.tsx\";\n\nvar Divider = function Divider(props, ref) {\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('Divider', props),\n      orientation = _usePropsResolution.orientation,\n      newProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"orientation\"]);\n\n  var _extractInObject = (0, _tools.extractInObject)(newProps, ['size']),\n      _extractInObject2 = (0, _slicedToArray2.default)(_extractInObject, 2),\n      remainingProps = _extractInObject2[1];\n\n  return _react.default.createElement(_Box.default, (0, _extends2.default)({}, remainingProps, {\n    ref: ref,\n    \"aria-orientation\": orientation,\n    accessibilityRole: _reactNative.Platform.OS === 'web' ? 'separator' : undefined,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Divider));\n\nexports.default = _default;","map":{"version":3,"sources":["index.tsx"],"names":["Divider","orientation","newProps","remainingProps","Platform"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,cAAA,GAAA,OAAA,gCAAA;;AACA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,0BAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,wBAAA;;;;;AAEA,IAAMA,OAAO,GAAPA,SAAAA,OAAAA,CAAU,KAAVA,EAAU,GAAVA,EAA+C;AAAA,MAAA,mBAAA,GACd,CAAA,GAAA,cAAA,CAAA,kBAAA,EAAA,SAAA,EADc,KACd,CADc;AAAA,MAC3CC,WAD2C,GAAA,mBAAA,CAAA,WAAA;AAAA,MAC3BC,QAD2B,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,aAAA,CAAA,CAAA;;AAAA,MAAA,gBAAA,GAExB,CAAA,GAAA,MAAA,CAAA,eAAA,EAAA,QAAA,EAA0B,CAFF,MAEE,CAA1B,CAFwB;AAAA,MAAA,iBAAA,GAAA,CAAA,GAAA,eAAA,CAAA,OAAA,EAAA,gBAAA,EAAA,CAAA,CAAA;AAAA,MAE1CC,cAF0C,GAAA,iBAAA,CAAA,CAAA,CAAA;;AAGnD,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,cAAA,EAAA;AAEE,IAAA,GAAG,EAFL,GAAA;AAGE,wBAHF,WAAA;AAKE,IAAA,iBAAiB,EAAEC,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GAAAA,WAAAA,GALrB,SAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EADF;AACE;AAAA,GAAA,CAAA,CADF;AAHF,CAAA;;eAce,CAAA,GAAA,MAAA,CAAA,IAAA,EAAK,CAAA,GAAA,MAAA,CAAA,UAAA,EAAL,OAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport Box from './../../primitives/Box';\nimport type { IDividerProps } from './types';\nimport { extractInObject } from '../../../theme/tools';\n\nconst Divider = (props: IDividerProps, ref?: any) => {\n  const { orientation, ...newProps } = usePropsResolution('Divider', props);\n  const [, remainingProps] = extractInObject(newProps, ['size']);\n  return (\n    <Box\n      {...remainingProps}\n      ref={ref}\n      aria-orientation={orientation}\n      //@ts-ignore web only role\n      accessibilityRole={Platform.OS === 'web' ? 'separator' : undefined}\n    />\n  );\n};\n\nexport default memo(forwardRef(Divider));\n"]},"metadata":{},"sourceType":"script"}