{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _Stack = require(\"../Stack\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Button/ButtonGroup.tsx\";\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(function (_ref, ref) {\n  var children = _ref.children,\n      divider = _ref.divider,\n      variant = _ref.variant,\n      size = _ref.size,\n      colorScheme = _ref.colorScheme,\n      isDisabled = _ref.isDisabled,\n      isAttached = _ref.isAttached,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\", \"divider\", \"variant\", \"size\", \"colorScheme\", \"isDisabled\", \"isAttached\"]);\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('ButtonGroup', props),\n      space = _usePropsResolution.space,\n      newProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"space\"]);\n\n  var computedChildren = _react.default.Children.map(children, function (child, index) {\n    return _react.default.cloneElement(child, (0, _extends2.default)({\n      key: \"button-group-child-\" + index,\n      variant: variant,\n      size: size,\n      colorScheme: colorScheme,\n      isDisabled: isDisabled\n    }, child.props));\n  });\n\n  return _react.default.createElement(_Stack.Stack, (0, _extends2.default)({\n    divider: divider,\n    space: isAttached ? 0 : space\n  }, newProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), computedChildren);\n}));\n\nexports.default = _default;","map":{"version":3,"sources":["ButtonGroup.tsx"],"names":["children","divider","variant","size","colorScheme","isDisabled","isAttached","props","space","newProps","computedChildren","React","key","child"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,cAAA,GAAA,OAAA,gCAAA;;AACA,IAAA,MAAA,GAAA,OAAA,YAAA;;;;;eAEe,CAAA,GAAA,MAAA,CAAA,IAAA,EACb,CAAA,GAAA,MAAA,CAAA,UAAA,EACE,UAAA,IAAA,EAAA,GAAA,EAYK;AAVDA,MAAAA,QAUC,GAAA,IAAA,CAVDA,QAAAA;AAAAA,MACAC,OASC,GAAA,IAAA,CATDA,OADAD;AAAAA,MAEAE,OAQC,GAAA,IAAA,CARDA,OAFAF;AAAAA,MAGAG,IAOC,GAAA,IAAA,CAPDA,IAHAH;AAAAA,MAIAI,WAMC,GAAA,IAAA,CANDA,WAJAJ;AAAAA,MAKAK,UAKC,GAAA,IAAA,CALDA,UALAL;AAAAA,MAMAM,UAIC,GAAA,IAAA,CAJDA,UANAN;AAAAA,MAOGO,KAGF,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,UAAA,EAAA,SAAA,EAAA,SAAA,EAAA,MAAA,EAAA,aAAA,EAAA,YAAA,EAAA,YAAA,CAAA,CAVDP;;AAUC,MAAA,mBAAA,GAC4B,CAAA,GAAA,cAAA,CAAA,kBAAA,EAAA,aAAA,EAD5B,KAC4B,CAD5B;AAAA,MACKQ,KADL,GAAA,mBAAA,CAAA,KAAA;AAAA,MACeC,QADf,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;AAEH,MAAMC,gBAAgB,GAAGC,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EAEvB,UAAA,KAAA,EAAA,KAAA,EAAuC;AACrC,WAAOA,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,KAAAA,EAAAA,CAAAA,GAAAA,SAAAA,CAAAA,OAAAA,EAAAA;AACLC,MAAAA,GAAG,EAAA,wBADED,KAAAA;AAELT,MAAAA,OAAO,EAFFS,OAAAA;AAGLR,MAAAA,IAAI,EAHCQ,IAAAA;AAILP,MAAAA,WAAW,EAJNO,WAAAA;AAKLN,MAAAA,UAAU,EALLM;AAAAA,KAAAA,EAMFE,KAAK,CANV,KAAOF,CAAAA,CAAP;AAHJ,GAAyBA,CAAzB;;AAaA,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAD,KAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AACE,IAAA,OAAO,EADT,OAAA;AAEE,IAAA,KAAK,EAAEL,UAAU,GAAA,CAAA,GAFnB;AAAA,GAAA,EAAA,QAAA,EAAA;AAIE,IAAA,GAAG,EAJL,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EADF,gBACE,CADF;AA7BS,CACb,CADa,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport type { IButtonGroupProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Stack } from '../Stack';\n\nexport default memo(\n  forwardRef(\n    (\n      {\n        children,\n        divider,\n        variant,\n        size,\n        colorScheme,\n        isDisabled,\n        isAttached,\n        ...props\n      }: IButtonGroupProps,\n      ref?: any\n    ) => {\n      const { space, ...newProps } = usePropsResolution('ButtonGroup', props);\n      const computedChildren = React.Children.map(\n        children,\n        (child: JSX.Element, index: number) => {\n          return React.cloneElement(child, {\n            key: `button-group-child-${index}`,\n            variant,\n            size,\n            colorScheme,\n            isDisabled,\n            ...child.props,\n          });\n        }\n      );\n      return (\n        <Stack\n          divider={divider}\n          space={isAttached ? 0 : space}\n          {...newProps}\n          ref={ref}\n        >\n          {computedChildren}\n        </Stack>\n      );\n    }\n  )\n);\n"]},"metadata":{},"sourceType":"script"}