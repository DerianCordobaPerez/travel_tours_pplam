{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Popper = require(\"../Popper\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _PopoverContext = require(\"./PopoverContext\");\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _Backdrop = _interopRequireDefault(require(\"../Backdrop\"));\n\nvar _focus = require(\"@react-native-aria/focus\");\n\nvar _Transitions = require(\"../Transitions\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _utils2 = require(\"@react-aria/utils\");\n\nvar _Overlay = require(\"../../primitives/Overlay\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Popover/Popover.tsx\";\n\nvar Popover = function Popover(_ref, ref) {\n  var onOpen = _ref.onOpen,\n      trigger = _ref.trigger,\n      onClose = _ref.onClose,\n      isOpenProp = _ref.isOpen,\n      children = _ref.children,\n      defaultIsOpen = _ref.defaultIsOpen,\n      initialFocusRef = _ref.initialFocusRef,\n      finalFocusRef = _ref.finalFocusRef,\n      _ref$trapFocus = _ref.trapFocus,\n      trapFocus = _ref$trapFocus === void 0 ? true : _ref$trapFocus,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"onOpen\", \"trigger\", \"onClose\", \"isOpen\", \"children\", \"defaultIsOpen\", \"initialFocusRef\", \"finalFocusRef\", \"trapFocus\"]);\n\n  var triggerRef = _react.default.useRef(null);\n\n  var mergedRef = (0, _utils.mergeRefs)([triggerRef]);\n\n  var _useControllableState = (0, _hooks.useControllableState)({\n    value: isOpenProp,\n    defaultValue: defaultIsOpen,\n    onChange: function onChange(value) {\n      value ? onOpen && onOpen() : onClose && onClose();\n    }\n  }),\n      _useControllableState2 = (0, _slicedToArray2.default)(_useControllableState, 2),\n      isOpen = _useControllableState2[0],\n      setIsOpen = _useControllableState2[1];\n\n  var _React$useState = _react.default.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      bodyMounted = _React$useState2[0],\n      setBodyMounted = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState(false),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      headerMounted = _React$useState4[0],\n      setHeaderMounted = _React$useState4[1];\n\n  var popoverContentId = (0, _utils2.useId)() + \"-content\";\n  var headerId = popoverContentId + \"-header\";\n  var bodyId = popoverContentId + \"-body\";\n\n  var handleOpen = _react.default.useCallback(function () {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  var updatedTrigger = function updatedTrigger() {\n    return trigger({\n      'ref': mergedRef,\n      'onPress': handleOpen,\n      'aria-expanded': isOpen ? true : false,\n      'aria-controls': isOpen ? popoverContentId : undefined,\n      'aria-haspopup': true\n    }, {\n      open: isOpen\n    });\n  };\n\n  var handleClose = function handleClose() {\n    setIsOpen(false);\n  };\n\n  return _react.default.createElement(_Box.default, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, updatedTrigger(), _react.default.createElement(_Overlay.Overlay, {\n    isOpen: isOpen,\n    onRequestClose: handleClose,\n    useRNModalOnAndroid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_Transitions.PresenceTransition, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1,\n      transition: {\n        duration: 150\n      }\n    },\n    exit: {\n      opacity: 0,\n      scale: 0.95,\n      transition: {\n        duration: 100\n      }\n    },\n    visible: isOpen,\n    style: _reactNative.StyleSheet.absoluteFill,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_Popper.Popper, (0, _extends2.default)({\n    onClose: handleClose,\n    triggerRef: triggerRef\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_Backdrop.default, {\n    onPress: handleClose,\n    bg: \"transparent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_PopoverContext.PopoverContext.Provider, {\n    value: {\n      onClose: handleClose,\n      initialFocusRef: initialFocusRef,\n      finalFocusRef: finalFocusRef,\n      popoverContentId: popoverContentId,\n      bodyId: bodyId,\n      headerId: headerId,\n      headerMounted: headerMounted,\n      bodyMounted: bodyMounted,\n      setBodyMounted: setBodyMounted,\n      setHeaderMounted: setHeaderMounted\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_focus.FocusScope, {\n    contain: trapFocus,\n    restoreFocus: true,\n    autoFocus: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, children))))));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Popover));\n\nexports.default = _default;","map":{"version":3,"sources":["Popover.tsx"],"names":["Popover","onOpen","trigger","onClose","isOpen","isOpenProp","children","defaultIsOpen","initialFocusRef","finalFocusRef","trapFocus","rest","triggerRef","React","mergedRef","setIsOpen","value","defaultValue","onChange","bodyMounted","setBodyMounted","headerMounted","setHeaderMounted","popoverContentId","headerId","bodyId","handleOpen","updatedTrigger","open","handleClose","opacity","transition","duration","scale","StyleSheet"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Popper } from '../Popper';\nimport type { IPopoverProps } from './types';\nimport { mergeRefs } from '../../../utils';\nimport { useControllableState } from '../../../hooks';\nimport { PopoverContext } from './PopoverContext';\nimport Box from '../../primitives/Box';\nimport Backdrop from '../Backdrop';\nimport { FocusScope } from '@react-native-aria/focus';\nimport { PresenceTransition } from '../Transitions';\nimport { StyleSheet } from 'react-native';\nimport { useId } from '@react-aria/utils';\nimport { Overlay } from '../../primitives/Overlay';\n\nconst Popover = (\n  {\n    onOpen,\n    trigger,\n    onClose,\n    isOpen: isOpenProp,\n    children,\n    defaultIsOpen,\n    initialFocusRef,\n    finalFocusRef,\n    trapFocus = true,\n    ...rest\n  }: IPopoverProps,\n  ref: any\n) => {\n  const triggerRef = React.useRef(null);\n  const mergedRef = mergeRefs([triggerRef]);\n  const [isOpen, setIsOpen] = useControllableState({\n    value: isOpenProp,\n    defaultValue: defaultIsOpen,\n    onChange: (value) => {\n      value ? onOpen && onOpen() : onClose && onClose();\n    },\n  });\n\n  const [bodyMounted, setBodyMounted] = React.useState(false);\n  const [headerMounted, setHeaderMounted] = React.useState(false);\n\n  const popoverContentId = `${useId()}-content`;\n  const headerId = `${popoverContentId}-header`;\n  const bodyId = `${popoverContentId}-body`;\n\n  const handleOpen = React.useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  let updatedTrigger = () => {\n    return trigger(\n      {\n        'ref': mergedRef,\n        'onPress': handleOpen,\n        'aria-expanded': isOpen ? true : false,\n        'aria-controls': isOpen ? popoverContentId : undefined,\n        'aria-haspopup': true,\n      },\n      { open: isOpen }\n    );\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <Box ref={ref}>\n      {updatedTrigger()}\n      <Overlay isOpen={isOpen} onRequestClose={handleClose} useRNModalOnAndroid>\n        <PresenceTransition\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1, transition: { duration: 150 } }}\n          exit={{ opacity: 0, scale: 0.95, transition: { duration: 100 } }}\n          visible={isOpen}\n          style={StyleSheet.absoluteFill}\n        >\n          <Popper onClose={handleClose} triggerRef={triggerRef} {...rest}>\n            <Backdrop onPress={handleClose} bg=\"transparent\" />\n            <PopoverContext.Provider\n              value={{\n                onClose: handleClose,\n                initialFocusRef,\n                finalFocusRef,\n                popoverContentId,\n                bodyId,\n                headerId,\n                headerMounted,\n                bodyMounted,\n                setBodyMounted,\n                setHeaderMounted,\n              }}\n            >\n              <FocusScope contain={trapFocus} restoreFocus autoFocus>\n                {children}\n              </FocusScope>\n            </PopoverContext.Provider>\n          </Popper>\n        </PresenceTransition>\n      </Overlay>\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Popover));\n"]},"metadata":{},"sourceType":"script"}