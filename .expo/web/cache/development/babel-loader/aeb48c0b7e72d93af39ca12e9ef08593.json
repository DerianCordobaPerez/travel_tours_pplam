{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../components/primitives/Box\"));\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/utils/getSpacedChildren.tsx\";\n\nvar _default = function _default(children, space, axis, reverse, divider) {\n  var childrenArray = _react.default.Children.toArray(children);\n\n  childrenArray = reverse === 'reverse' ? (0, _toConsumableArray2.default)(childrenArray).reverse() : childrenArray;\n  var orientation = axis === 'X' ? 'vertical' : 'horizontal';\n\n  if (divider) {\n    var spacingProp = (0, _extends2.default)({}, axis === 'X' ? {\n      mx: space\n    } : {\n      my: space\n    });\n    divider = _react.default.cloneElement(divider, (0, _extends2.default)({\n      orientation: orientation\n    }, spacingProp));\n    childrenArray = childrenArray.map(function (child, index) {\n      var _child$key;\n\n      return _react.default.createElement(_react.default.Fragment, {\n        key: (_child$key = child.key) != null ? _child$key : \"spaced-child-\" + index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, child, index < childrenArray.length - 1 && divider);\n    });\n  } else {\n    var _spacingProp = (0, _extends2.default)({}, axis === 'X' ? {\n      width: space\n    } : {\n      height: space\n    });\n\n    childrenArray = childrenArray.map(function (child, index) {\n      var _child$key2;\n\n      return _react.default.createElement(_react.default.Fragment, {\n        key: (_child$key2 = child.key) != null ? _child$key2 : \"spaced-child-\" + index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, child, index < childrenArray.length - 1 && _react.default.createElement(_Box.default, (0, _extends2.default)({}, _spacingProp, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 48\n        }\n      })));\n    });\n  }\n\n  return childrenArray;\n};\n\nexports.default = _default;","map":{"version":3,"sources":["getSpacedChildren.tsx"],"names":["childrenArray","React","reverse","orientation","axis","spacingProp","mx","my","divider","child","index","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { default as Box } from '../components/primitives/Box';\n\ntype SpaceType =\n  | 'gutter'\n  | '2xs'\n  | 'xs'\n  | 'sm'\n  | 'md'\n  | 'lg'\n  | 'xl'\n  | '2xl'\n  | number;\n\nexport default (\n  children: JSX.Element[] | JSX.Element,\n  space: undefined | SpaceType,\n  axis: 'X' | 'Y',\n  reverse: string,\n  divider: JSX.Element | undefined\n): any => {\n  let childrenArray = React.Children.toArray(children);\n  childrenArray =\n    reverse === 'reverse' ? [...childrenArray].reverse() : childrenArray;\n\n  const orientation = axis === 'X' ? 'vertical' : 'horizontal';\n\n  // If there's a divider, we wrap it with a Box and apply vertical and horizontal margins else we add a spacer Box with height or width\n  if (divider) {\n    const spacingProp: object = {\n      ...(axis === 'X' ? { mx: space } : { my: space }),\n    };\n\n    divider = React.cloneElement(divider, {\n      orientation,\n      ...spacingProp,\n    });\n\n    childrenArray = childrenArray.map((child: any, index: number) => {\n      return (\n        <React.Fragment key={child.key ?? `spaced-child-${index}`}>\n          {child}\n          {index < childrenArray.length - 1 && divider}\n        </React.Fragment>\n      );\n    });\n  } else {\n    const spacingProp: object = {\n      ...(axis === 'X' ? { width: space } : { height: space }),\n    };\n    childrenArray = childrenArray.map((child: any, index: number) => {\n      return (\n        <React.Fragment key={child.key ?? `spaced-child-${index}`}>\n          {child}\n          {index < childrenArray.length - 1 && <Box {...spacingProp} />}\n        </React.Fragment>\n      );\n    });\n  }\n\n  return childrenArray;\n};\n"]},"metadata":{},"sourceType":"script"}