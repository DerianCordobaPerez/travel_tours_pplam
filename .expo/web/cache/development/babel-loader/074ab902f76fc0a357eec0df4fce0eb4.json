{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useControlledState } from \"@react-stately/utils\";\nexport function useOverlayTriggerState(props) {\n  var _useControlledState = useControlledState(props.isOpen, props.defaultOpen || false, props.onOpenChange),\n      _useControlledState2 = _slicedToArray(_useControlledState, 2),\n      isOpen = _useControlledState2[0],\n      setOpen = _useControlledState2[1];\n\n  return {\n    isOpen: isOpen,\n    open: function open() {\n      setOpen(true);\n    },\n    close: function close() {\n      setOpen(false);\n    },\n    toggle: function toggle() {\n      setOpen(!isOpen);\n    }\n  };\n}","map":{"version":3,"sources":["packages/@react-stately/overlays/src/useOverlayTriggerState.ts"],"names":["useControlledState","props","isOpen","open","setOpen","close","toggle"],"mappings":";;OA8BO,SAAA,sBAAA,CAAA,KAAA,EAAkF;AACvF,4BAAwBA,kBAAkB,CAACC,KAAK,CAAN,MAAA,EAAeA,KAAK,CAALA,WAAAA,IAAf,KAAA,EAA2CA,KAAK,CAA1F,YAA0C,CAA1C;AAAA;AAAA,MAAI,MAAJ;AAAA,MAAI,OAAJ;;AAEA,SAAO;AACLC,IAAAA,MADK,EACLA,MADK;AAELC,IAAAA,IAFK,kBAEE;AACLC,MAAAA,OAAO,CAAPA,IAAO,CAAPA;AAHG,KAAA;AAKLC,IAAAA,KALK,mBAKG;AACND,MAAAA,OAAO,CAAPA,KAAO,CAAPA;AANG,KAAA;AAQLE,IAAAA,MARK,oBAQI;AACPF,MAAAA,OAAO,CAAC,CAARA,MAAO,CAAPA;AACD;AAVI,GAAP;AAYD","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {OverlayTriggerProps} from '@react-types/overlays';\nimport {useControlledState} from '@react-stately/utils';\n\nexport interface OverlayTriggerState {\n  /** Whether the overlay is currently open. */\n  readonly isOpen: boolean,\n  /** Opens the overlay. */\n  open(): void,\n  /** Closes the overlay. */\n  close(): void,\n  /** Toggles the overlay's visibility. */\n  toggle(): void\n}\n\n/**\n * Manages state for an overlay trigger. Tracks whether the overlay is open, and provides\n * methods to toggle this state.\n */\nexport function useOverlayTriggerState(props: OverlayTriggerProps): OverlayTriggerState  {\n  let [isOpen, setOpen] = useControlledState(props.isOpen, props.defaultOpen || false, props.onOpenChange);\n\n  return {\n    isOpen,\n    open() {\n      setOpen(true);\n    },\n    close() {\n      setOpen(false);\n    },\n    toggle() {\n      setOpen(!isOpen);\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}