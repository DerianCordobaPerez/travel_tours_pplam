{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Text = _interopRequireDefault(require(\"../../primitives/Text\"));\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _Pressable = require(\"../../primitives/Pressable\");\n\nvar _MenuContext = require(\"./MenuContext\");\n\nvar _useMenu = require(\"./useMenu\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Menu/MenuItem.tsx\";\n\nvar MenuItem = function MenuItem(_ref, ref) {\n  var children = _ref.children,\n      _onPress = _ref.onPress,\n      style = _ref.style,\n      textValue = _ref.textValue,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\", \"onPress\", \"style\", \"textValue\"]);\n\n  var _React$useContext = _react.default.useContext(_MenuContext.MenuContext),\n      closeOnSelect = _React$useContext.closeOnSelect,\n      onClose = _React$useContext.onClose;\n\n  var menuItemRef = _react.default.useRef(null);\n\n  var mergedRef = (0, _utils.mergeRefs)([menuItemRef, ref]);\n  var newProps = (0, _useThemeProps.usePropsResolution)('MenuItem', props);\n\n  var _React$useState = _react.default.useState(''),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      textContent = _React$useState2[0],\n      setTextContent = _React$useState2[1];\n\n  _react.default.useEffect(function () {\n    var menuItem = menuItemRef.current;\n\n    if (menuItem) {\n      var _menuItem$textContent;\n\n      setTextContent(((_menuItem$textContent = menuItem.textContent) != null ? _menuItem$textContent : '').trim());\n    }\n  }, [children]);\n\n  var allProps = (0, _extends2.default)({}, newProps, newProps.isDisabled ? newProps._disabled : {});\n  var _text = allProps._text,\n      _pressed = allProps._pressed,\n      _focus = allProps._focus,\n      touchProps = (0, _objectWithoutProperties2.default)(allProps, [\"_text\", \"_pressed\", \"_focus\"]);\n  var menuItemProps = (0, _useMenu.useMenuItem)({\n    textValue: textValue != null ? textValue : textContent,\n    ref: menuItemRef\n  });\n  return _react.default.createElement(_Pressable.Pressable, (0, _extends2.default)({\n    _pressed: _pressed,\n    _focus: _focus\n  }, menuItemProps, touchProps, {\n    ref: mergedRef,\n    style: style,\n    disabled: props.isDisabled,\n    accessibilityState: {\n      disabled: props.isDisabled\n    },\n    onPress: function onPress(e) {\n      if (!props.isDisabled) {\n        _onPress && _onPress(e);\n\n        if (closeOnSelect) {\n          onClose && onClose();\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_react.default.Fragment, null, _react.default.Children.map(children, function (child, index) {\n    if (typeof child === 'string') {\n      return _react.default.createElement(_Text.default, (0, _extends2.default)({}, _text, {\n        key: \"menu-item-\" + index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }), child);\n    } else {\n      return child;\n    }\n  })));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(MenuItem));\n\nexports.default = _default;","map":{"version":3,"sources":["MenuItem.tsx"],"names":["MenuItem","children","onPress","style","textValue","props","closeOnSelect","onClose","React","MenuContext","menuItemRef","mergedRef","newProps","textContent","setTextContent","menuItem","allProps","_text","_pressed","_focus","touchProps","menuItemProps","ref","disabled"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport Text from '../../primitives/Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Pressable } from '../../primitives/Pressable';\nimport type { IMenuItemProps } from './types';\nimport { MenuContext } from './MenuContext';\nimport { useMenuItem } from './useMenu';\nimport { mergeRefs } from '../../../utils';\n\nconst MenuItem = (\n  { children, onPress, style, textValue, ...props }: IMenuItemProps,\n  ref: any\n) => {\n  const { closeOnSelect, onClose } = React.useContext(MenuContext);\n  const menuItemRef = React.useRef<any>(null);\n  const mergedRef = mergeRefs([menuItemRef, ref]);\n  const newProps = usePropsResolution('MenuItem', props);\n  const [textContent, setTextContent] = React.useState('');\n  React.useEffect(() => {\n    const menuItem = menuItemRef.current;\n    if (menuItem) {\n      setTextContent((menuItem.textContent ?? '').trim());\n    }\n  }, [children]);\n\n  let allProps = {\n    ...newProps,\n    ...(newProps.isDisabled ? newProps._disabled : {}),\n  };\n  const { _text, _pressed, _focus, ...touchProps } = allProps;\n\n  const menuItemProps = useMenuItem({\n    textValue: textValue ?? textContent,\n    ref: menuItemRef,\n  });\n\n  return (\n    <Pressable\n      _pressed={_pressed}\n      _focus={_focus}\n      {...menuItemProps}\n      {...touchProps}\n      ref={mergedRef}\n      style={style}\n      disabled={props.isDisabled}\n      // TouchableHighlight doesn't announce disabled, even if disabled prop is set\n      accessibilityState={{\n        disabled: props.isDisabled,\n      }}\n      onPress={(e: any) => {\n        if (!props.isDisabled) {\n          onPress && onPress(e);\n          if (closeOnSelect) {\n            onClose && onClose();\n          }\n        }\n      }}\n    >\n      <>\n        {React.Children.map(children, (child, index: any) => {\n          if (typeof child === 'string') {\n            return (\n              <Text {..._text} key={`menu-item-${index}`}>\n                {child}\n              </Text>\n            );\n          } else {\n            return child;\n          }\n        })}\n      </>\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(MenuItem));\n"]},"metadata":{},"sourceType":"script"}