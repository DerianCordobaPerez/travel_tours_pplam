{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Icons = require(\"../../primitives/Icon/Icons\");\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _MenuItem = _interopRequireDefault(require(\"./MenuItem\"));\n\nvar _MenuOptionGroup = require(\"./MenuOptionGroup\");\n\nvar _useMenu = require(\"./useMenu\");\n\nvar _Stack = require(\"../../primitives/Stack\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Menu/MenuItemOption.tsx\";\n\nvar MenuItemOption = function MenuItemOption(_ref, ref) {\n  var value = _ref.value,\n      children = _ref.children,\n      onPress = _ref.onPress,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"value\", \"children\", \"onPress\"]);\n\n  var _React$useContext = _react.default.useContext(_MenuOptionGroup.MenuOptionContext),\n      values = _React$useContext.values,\n      onChange = _React$useContext.onChange,\n      type = _React$useContext.type;\n\n  var modifiedOnPress = function modifiedOnPress(e) {\n    onChange(value);\n    onPress && onPress(e);\n  };\n\n  var newProps = (0, _useThemeProps.usePropsResolution)('MenuItem', props);\n  var isChecked = values.includes(value);\n  var menuOptionProps = (0, _useMenu.useMenuOptionItem)({\n    isChecked: isChecked,\n    type: type\n  });\n  return _react.default.createElement(_MenuItem.default, (0, _extends2.default)({}, props, menuOptionProps, {\n    accessibilityRole: \"button\",\n    onPress: modifiedOnPress,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_Stack.HStack, {\n    alignItems: \"center\",\n    px: newProps.px,\n    space: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_Icons.CheckIcon, (0, _extends2.default)({}, newProps._icon, {\n    opacity: isChecked ? 1 : 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), _react.default.createElement(_Box.default, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, children)));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(MenuItemOption));\n\nexports.default = _default;","map":{"version":3,"sources":["MenuItemOption.tsx"],"names":["MenuItemOption","value","children","onPress","props","values","onChange","type","React","MenuOptionContext","modifiedOnPress","newProps","isChecked","menuOptionProps"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { CheckIcon } from '../../primitives/Icon/Icons';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport MenuItem from './MenuItem';\nimport type { IMenuItemOptionProps, IMenuOptionContextProps } from './types';\nimport { MenuOptionContext } from './MenuOptionGroup';\nimport { useMenuOptionItem } from './useMenu';\nimport { HStack } from '../../primitives/Stack';\n\nconst MenuItemOption = (\n  { value, children, onPress, ...props }: IMenuItemOptionProps,\n  ref: any\n) => {\n  const { values, onChange, type }: IMenuOptionContextProps = React.useContext(\n    MenuOptionContext\n  );\n  const modifiedOnPress = (e: any) => {\n    onChange(value);\n    onPress && onPress(e);\n  };\n\n  const newProps = usePropsResolution('MenuItem', props);\n  const isChecked = values.includes(value);\n  const menuOptionProps = useMenuOptionItem({ isChecked, type });\n\n  return (\n    <MenuItem\n      {...props}\n      {...menuOptionProps}\n      accessibilityRole=\"button\"\n      onPress={modifiedOnPress}\n      ref={ref}\n    >\n      <HStack alignItems=\"center\" px={newProps.px} space={3}>\n        <CheckIcon {...newProps._icon} opacity={isChecked ? 1 : 0} />\n        <Box>{children}</Box>\n      </HStack>\n    </MenuItem>\n  );\n};\n\nexport default memo(forwardRef(MenuItemOption));\n"]},"metadata":{},"sourceType":"script"}