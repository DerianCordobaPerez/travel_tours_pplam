{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { useSelectableCollection, useSelectableItem } from \"@react-aria/selection\";\nimport { usePress } from \"@react-aria/interactions\";\nimport { useLocale } from \"@react-aria/i18n\";\nimport { mergeProps, useId, useLabels } from \"@react-aria/utils\";\nimport { useMemo } from \"react\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\n\nvar $ace72fda23df319bd9db38f00073d9$export$TabsKeyboardDelegate = function () {\n  function $ace72fda23df319bd9db38f00073d9$export$TabsKeyboardDelegate(collection, direction, orientation, disabledKeys) {\n    _classCallCheck(this, $ace72fda23df319bd9db38f00073d9$export$TabsKeyboardDelegate);\n\n    if (disabledKeys === void 0) {\n      disabledKeys = new Set();\n    }\n\n    this.collection = void 0;\n    this.flipDirection = void 0;\n    this.disabledKeys = void 0;\n    this.orientation = void 0;\n    this.collection = collection;\n    this.flipDirection = direction === 'rtl' && orientation === 'horizontal';\n    this.orientation = orientation;\n    this.disabledKeys = disabledKeys;\n  }\n\n  _createClass($ace72fda23df319bd9db38f00073d9$export$TabsKeyboardDelegate, [{\n    key: \"getKeyLeftOf\",\n    value: function getKeyLeftOf(key) {\n      if (this.flipDirection) {\n        return this.getNextKey(key);\n      } else {\n        if (this.orientation === 'horizontal') {\n          return this.getPreviousKey(key);\n        }\n\n        return null;\n      }\n    }\n  }, {\n    key: \"getKeyRightOf\",\n    value: function getKeyRightOf(key) {\n      if (this.flipDirection) {\n        return this.getPreviousKey(key);\n      } else {\n        if (this.orientation === 'horizontal') {\n          return this.getNextKey(key);\n        }\n\n        return null;\n      }\n    }\n  }, {\n    key: \"getKeyAbove\",\n    value: function getKeyAbove(key) {\n      if (this.orientation === 'vertical') {\n        return this.getPreviousKey(key);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getKeyBelow\",\n    value: function getKeyBelow(key) {\n      if (this.orientation === 'vertical') {\n        return this.getNextKey(key);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getFirstKey\",\n    value: function getFirstKey() {\n      var key = this.collection.getFirstKey();\n\n      if (this.disabledKeys.has(key)) {\n        key = this.getNextKey(key);\n      }\n\n      return key;\n    }\n  }, {\n    key: \"getLastKey\",\n    value: function getLastKey() {\n      var key = this.collection.getLastKey();\n\n      if (this.disabledKeys.has(key)) {\n        key = this.getPreviousKey(key);\n      }\n\n      return key;\n    }\n  }, {\n    key: \"getNextKey\",\n    value: function getNextKey(key) {\n      do {\n        key = this.collection.getKeyAfter(key);\n\n        if (key == null) {\n          key = this.collection.getFirstKey();\n        }\n      } while (this.disabledKeys.has(key));\n\n      return key;\n    }\n  }, {\n    key: \"getPreviousKey\",\n    value: function getPreviousKey(key) {\n      do {\n        key = this.collection.getKeyBefore(key);\n\n        if (key == null) {\n          key = this.collection.getLastKey();\n        }\n      } while (this.disabledKeys.has(key));\n\n      return key;\n    }\n  }]);\n\n  return $ace72fda23df319bd9db38f00073d9$export$TabsKeyboardDelegate;\n}();\n\nvar $a98339edf5b490c874cb7f3b44b70$var$tabsIds = new WeakMap();\nexport function useTabs(props, state, ref) {\n  var _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$keyboardActiva = props.keyboardActivation,\n      keyboardActivation = _props$keyboardActiva === void 0 ? 'automatic' : _props$keyboardActiva;\n  var collection = state.collection,\n      manager = state.selectionManager,\n      disabledKeys = state.disabledKeys,\n      selectedKey = state.selectedKey;\n\n  var _useLocale = useLocale(),\n      direction = _useLocale.direction;\n\n  var delegate = useMemo(function () {\n    return new $ace72fda23df319bd9db38f00073d9$export$TabsKeyboardDelegate(collection, direction, orientation, disabledKeys);\n  }, [collection, disabledKeys, orientation, direction]);\n\n  var _useSelectableCollect = useSelectableCollection({\n    ref: ref,\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    selectOnFocus: keyboardActivation === 'automatic',\n    disallowEmptySelection: true\n  }),\n      collectionProps = _useSelectableCollect.collectionProps;\n\n  var tabsId = useId();\n  $a98339edf5b490c874cb7f3b44b70$var$tabsIds.set(state, tabsId);\n  var tabListLabelProps = useLabels(_babelRuntimeHelpersEsmExtends({}, props, {\n    id: tabsId\n  }));\n  return {\n    tabListProps: _babelRuntimeHelpersEsmExtends({}, mergeProps(collectionProps, tabListLabelProps), {\n      role: 'tablist',\n      'aria-orientation': orientation,\n      tabIndex: undefined\n    }),\n    tabPanelProps: {\n      id: $a98339edf5b490c874cb7f3b44b70$var$generateId(state, selectedKey, 'tabpanel'),\n      'aria-labelledby': $a98339edf5b490c874cb7f3b44b70$var$generateId(state, selectedKey, 'tab'),\n      tabIndex: 0,\n      role: 'tabpanel'\n    }\n  };\n}\nexport function useTab(props, state, ref) {\n  var item = props.item,\n      propsDisabled = props.isDisabled;\n  var key = item.key;\n  var manager = state.selectionManager,\n      selectedKey = state.selectedKey;\n  var isSelected = key === selectedKey;\n\n  var _useSelectableItem = useSelectableItem({\n    selectionManager: manager,\n    key: key,\n    ref: ref\n  }),\n      itemProps = _useSelectableItem.itemProps;\n\n  var isDisabled = propsDisabled || state.disabledKeys.has(key);\n\n  var _usePress = usePress(_babelRuntimeHelpersEsmExtends({}, itemProps, {\n    isDisabled: isDisabled\n  })),\n      pressProps = _usePress.pressProps;\n\n  var tabId = $a98339edf5b490c874cb7f3b44b70$var$generateId(state, key, 'tab');\n  var tabPanelId = $a98339edf5b490c874cb7f3b44b70$var$generateId(state, key, 'tabpanel');\n  var tabIndex = pressProps.tabIndex;\n\n  if (isSelected && !isDisabled) {\n    tabIndex = 0;\n  }\n\n  return {\n    tabProps: _babelRuntimeHelpersEsmExtends({}, pressProps, {\n      id: tabId,\n      'aria-selected': isSelected,\n      'aria-disabled': isDisabled || undefined,\n      'aria-controls': isSelected ? tabPanelId : undefined,\n      tabIndex: isDisabled ? undefined : tabIndex,\n      role: 'tab'\n    })\n  };\n}\n\nfunction $a98339edf5b490c874cb7f3b44b70$var$generateId(state, key, role) {\n  if (typeof key === 'string') {\n    key = key.replace(/\\s+/g, '');\n  }\n\n  var baseId = $a98339edf5b490c874cb7f3b44b70$var$tabsIds.get(state);\n  return baseId + \"-\" + role + \"-\" + key;\n}","map":{"version":3,"sources":["packages/@react-aria/tabs/src/TabsKeyboardDelegate.ts","packages/@react-aria/tabs/src/useTabs.ts"],"names":["collection","flipDirection","disabledKeys","orientation","constructor","direction","getKeyLeftOf","getKeyRightOf","getKeyAbove","getKeyBelow","getFirstKey","key","getLastKey","getNextKey","getPreviousKey","tabsIds","keyboardActivation","selectionManager","selectedKey","useLocale","delegate","useMemo","collectionProps","useSelectableCollection","ref","keyboardDelegate","selectOnFocus","disallowEmptySelection","tabsId","useId","tabListLabelProps","useLabels","id","tabListProps","mergeProps","role","tabIndex","undefined","tabPanelProps","generateId","isDisabled","propsDisabled","isSelected","itemProps","useSelectableItem","state","pressProps","usePress","tabId","tabPanelId","tabProps","baseId"],"mappings":";;;;;;;;;IAeO,2D;AAMLI,uEAAW,UAAXA,EAAW,SAAXA,EAAW,WAAXA,EAAW,YAAXA,EAA2H;AAAA;;AAAA,QAApCF,YAAoC,KAAA,KAAA,CAAA,EAAA;AAApCA,MAAAA,YAAoC,GAAX,IAAA,GAAA,EAAzBA;AAAoC;;AAAA,SALnHF,UAKmH,GAAA,KAAA,CAAA;AAAA,SAJnHC,aAImH,GAAA,KAAA,CAAA;AAAA,SAHnHC,YAGmH,GAAA,KAAA,CAAA;AAAA,SAFnHC,WAEmH,GAAA,KAAA,CAAA;AACzH,SAAA,UAAA,GAAA,UAAA;AACA,SAAA,aAAA,GAAqBE,SAAS,KAATA,KAAAA,IAAuBF,WAAW,KAAvD,YAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,YAAA,GAAA,YAAA;AACD;;;;WAEDG,sBAAY,GAAZA,EAAuB;AACrB,UAAI,KAAJ,aAAA,EAAwB;AACtB,eAAO,KAAA,UAAA,CAAP,GAAO,CAAP;AADF,OAAA,MAEO;AACL,YAAI,KAAA,WAAA,KAAJ,YAAA,EAAuC;AACrC,iBAAO,KAAA,cAAA,CAAP,GAAO,CAAP;AACD;;AACD,eAAA,IAAA;AACD;AACF;;;WAEDC,uBAAa,GAAbA,EAAwB;AACtB,UAAI,KAAJ,aAAA,EAAwB;AACtB,eAAO,KAAA,cAAA,CAAP,GAAO,CAAP;AADF,OAAA,MAEO;AACL,YAAI,KAAA,WAAA,KAAJ,YAAA,EAAuC;AACrC,iBAAO,KAAA,UAAA,CAAP,GAAO,CAAP;AACD;;AACD,eAAA,IAAA;AACD;AACF;;;WAEDC,qBAAW,GAAXA,EAAsB;AACpB,UAAI,KAAA,WAAA,KAAJ,UAAA,EAAqC;AACnC,eAAO,KAAA,cAAA,CAAP,GAAO,CAAP;AACD;;AACD,aAAA,IAAA;AACD;;;WAEDC,qBAAW,GAAXA,EAAsB;AACpB,UAAI,KAAA,WAAA,KAAJ,UAAA,EAAqC;AACnC,eAAO,KAAA,UAAA,CAAP,GAAO,CAAP;AACD;;AACD,aAAA,IAAA;AACD;;;WAEDC,uBAAc;AACZ,UAAIC,GAAG,GAAG,KAAA,UAAA,CAAV,WAAU,EAAV;;AACA,UAAI,KAAA,YAAA,CAAA,GAAA,CAAJ,GAAI,CAAJ,EAAgC;AAC9BA,QAAAA,GAAG,GAAG,KAAA,UAAA,CAANA,GAAM,CAANA;AACD;;AACD,aAAA,GAAA;AACD;;;WAEDC,sBAAa;AACX,UAAID,GAAG,GAAG,KAAA,UAAA,CAAV,UAAU,EAAV;;AACA,UAAI,KAAA,YAAA,CAAA,GAAA,CAAJ,GAAI,CAAJ,EAAgC;AAC9BA,QAAAA,GAAG,GAAG,KAAA,cAAA,CAANA,GAAM,CAANA;AACD;;AACD,aAAA,GAAA;AACD;;;WAEDE,oBAAU,GAAVA,EAAgB;AACd,SAAG;AACDF,QAAAA,GAAG,GAAG,KAAA,UAAA,CAAA,WAAA,CAANA,GAAM,CAANA;;AACA,YAAIA,GAAG,IAAP,IAAA,EAAiB;AACfA,UAAAA,GAAG,GAAG,KAAA,UAAA,CAANA,WAAM,EAANA;AACD;AAJH,OAAA,QAKS,KAAA,YAAA,CAAA,GAAA,CALT,GAKS,CALT;;AAMA,aAAA,GAAA;AACD;;;WAEDG,wBAAc,GAAdA,EAAoB;AAClB,SAAG;AACDH,QAAAA,GAAG,GAAG,KAAA,UAAA,CAAA,YAAA,CAANA,GAAM,CAANA;;AACA,YAAIA,GAAG,IAAP,IAAA,EAAiB;AACfA,UAAAA,GAAG,GAAG,KAAA,UAAA,CAANA,UAAM,EAANA;AACD;AAJH,OAAA,QAKS,KAAA,YAAA,CAAA,GAAA,CALT,GAKS,CALT;;AAMA,aAAA,GAAA;AACD;;;;;;ACrEH,IAAMI,0CAAO,GAAG,IAAhB,OAAgB,EAAhB;OAEO,SAAA,OAAA,CAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAiF;AACtF,2BAAA,KAAA,CACEZ,WADF;AAAA,MACEA,WADF,mCAAI,YAAJ;AAAA,8BAAA,KAAA,CAEEa,kBAFF;AAAA,MAEEA,kBAFF,sCAEuB,WAFvB;AAIA,MAAI,UAAJ,GAAA,KAAA,CAAI,UAAJ;AAAA,MAAI,OAAJ,GAAA,KAAA,CAEEC,gBAFF;AAAA,MAAI,YAAJ,GAAA,KAAA,CAAI,YAAJ;AAAA,MAIEC,WAJF,GAAA,KAAA,CAIEA,WAJF;;AAMA,mBAAkBC,SAAlB,EAAA;AAAA,MAAKd,SAAL,cAAKA,SAAL;;AACA,MAAIe,QAAQ,GAAGC,OAAO,CAAC;AAAA,WAAM,IAAA,2DAAA,CAAA,UAAA,EAAA,SAAA,EAAA,WAAA,EAAP,YAAO,CAAN;AAAA,GAAD,EAIL,CAAA,UAAA,EAAA,YAAA,EAAA,WAAA,EAJjB,SAIiB,CAJK,CAAtB;;AAMA,8BAAwBE,uBAAuB,CAAC;AAC9CC,IAAAA,GAD8C,EAC9CA,GAD8C;AAE9CP,IAAAA,gBAAgB,EAF8B,OAAA;AAG9CQ,IAAAA,gBAAgB,EAH8B,QAAA;AAI9CC,IAAAA,aAAa,EAAEV,kBAAkB,KAJa,WAAA;AAK9CW,IAAAA,sBAAsB,EAAE;AALsB,GAAD,CAA/C;AAAA,MAAKL,eAAL,yBAAKA,eAAL;;AASA,MAAIM,MAAM,GAAGC,KAAb,EAAA;AACAd,EAAAA,0CAAO,CAAPA,GAAAA,CAAAA,KAAAA,EAAAA,MAAAA;AAEA,MAAIe,iBAAiB,GAAGC,SAAS,CAAA,8BAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAYC,IAAAA,EAAE,EAAEJ;AAAhB,GAAA,CAAA,CAAjC;AAEA,SAAO;AACLK,IAAAA,YAAY,EAAA,8BAAA,CAAA,EAAA,EACPC,UAAU,CAAA,eAAA,EADH,iBACG,CADH,EAAA;AAEVC,MAAAA,IAAI,EAFM,SAAA;AAGV,0BAHU,WAAA;AAIVC,MAAAA,QAAQ,EAAEC;AAJA,KAAA,CADP;AAOLC,IAAAA,aAAa,EAAE;AACbN,MAAAA,EAAE,EAAEO,6CAAU,CAAA,KAAA,EAAA,WAAA,EADD,UACC,CADD;AAEb,yBAAmBA,6CAAU,CAAA,KAAA,EAAA,WAAA,EAFhB,KAEgB,CAFhB;AAGbH,MAAAA,QAAQ,EAHK,CAAA;AAIbD,MAAAA,IAAI,EAAE;AAJO;AAPV,GAAP;AAcD;OAOM,SAAA,MAAA,CAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAII;AACT,MAAI,IAAJ,GAAA,KAAA,CAAI,IAAJ;AAAA,MAAuBM,aAAvB,GAAA,KAAA,CAAWD,UAAX;AACA,MAAK7B,GAAL,GAAA,IAAA,CAAKA,GAAL;AACA,MAAI,OAAJ,GAAA,KAAA,CAAKM,gBAAL;AAAA,MAAgCC,WAAhC,GAAA,KAAA,CAAgCA,WAAhC;AAEA,MAAIwB,UAAU,GAAG/B,GAAG,KAApB,WAAA;;AAEA,2BAAkBiC,iBAAiB,CAAC;AAClC3B,IAAAA,gBAAgB,EADkB,OAAA;AAElCN,IAAAA,GAFkC,EAElCA,GAFkC;AAGlCa,IAAAA,GAAAA,EAAAA;AAHkC,GAAD,CAAnC;AAAA,MAAKmB,SAAL,sBAAKA,SAAL;;AAKA,MAAIH,UAAU,GAAGC,aAAa,IAAII,KAAK,CAALA,YAAAA,CAAAA,GAAAA,CAAlC,GAAkCA,CAAlC;;AAEA,kBAAmBE,QAAQ,CAAA,8BAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAAgBP,IAAAA,UAAAA,EAAAA;AAAhB,GAAA,CAAA,CAA3B;AAAA,MAAKM,UAAL,aAAKA,UAAL;;AACA,MAAIE,KAAK,GAAGT,6CAAU,CAAA,KAAA,EAAA,GAAA,EAAtB,KAAsB,CAAtB;AACA,MAAIU,UAAU,GAAGV,6CAAU,CAAA,KAAA,EAAA,GAAA,EAA3B,UAA2B,CAA3B;AACA,MAAKH,QAAL,GAjBS,UAiBT,CAAKA,QAAL;;AAGA,MAAIM,UAAU,IAAI,CAAlB,UAAA,EAA+B;AAC7BN,IAAAA,QAAQ,GAARA,CAAAA;AACD;;AAED,SAAO;AACLc,IAAAA,QAAQ,EAAA,8BAAA,CAAA,EAAA,EAAA,UAAA,EAAA;AAENlB,MAAAA,EAAE,EAFI,KAAA;AAGN,uBAHM,UAAA;AAIN,uBAAiBQ,UAAU,IAJrB,SAAA;AAKN,uBAAiBE,UAAU,GAAA,UAAA,GALrB,SAAA;AAMNN,MAAAA,QAAQ,EAAEI,UAAU,GAAA,SAAA,GANd,QAAA;AAONL,MAAAA,IAAI,EAAE;AAPA,KAAA;AADH,GAAP;AAWD;;AAED,SAAA,6CAAA,CAAA,KAAA,EAAA,GAAA,EAAA,IAAA,EAAgF;AAC9E,MAAI,OAAA,GAAA,KAAJ,QAAA,EAA6B;AAC3BxB,IAAAA,GAAG,GAAGA,GAAG,CAAHA,OAAAA,CAAAA,MAAAA,EAANA,EAAMA,CAANA;AACD;;AAED,MAAIwC,MAAM,GAAGpC,0CAAO,CAAPA,GAAAA,CAAb,KAAaA,CAAb;AACA,SAAUoC,MAAV,GAAA,GAAUA,GAAV,IAAUA,GAAV,GAAUA,GAAV,GAAA;AACD","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Direction, KeyboardDelegate, Orientation} from '@react-types/shared';\nimport {Key} from 'react';\n\nexport class TabsKeyboardDelegate<T> implements KeyboardDelegate {\n  private collection: Collection<T>;\n  private flipDirection: boolean;\n  private disabledKeys: Set<Key>;\n  private orientation: Orientation;\n\n  constructor(collection: Collection<T>, direction: Direction, orientation: Orientation, disabledKeys: Set<Key> = new Set()) {\n    this.collection = collection;\n    this.flipDirection = direction === 'rtl' && orientation === 'horizontal';\n    this.orientation = orientation;\n    this.disabledKeys = disabledKeys;\n  }\n\n  getKeyLeftOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getNextKey(key);\n    } else {\n      if (this.orientation === 'horizontal') {\n        return this.getPreviousKey(key);\n      }\n      return null;\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getPreviousKey(key);\n    } else {\n      if (this.orientation === 'horizontal') {\n        return this.getNextKey(key);\n      }\n      return null;\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    if (this.orientation === 'vertical') {\n      return this.getPreviousKey(key);\n    }\n    return null;\n  }\n\n  getKeyBelow(key: Key) {\n    if (this.orientation === 'vertical') {\n      return this.getNextKey(key);\n    }\n    return null;\n  }\n\n  getFirstKey() {\n    let key = this.collection.getFirstKey();\n    if (this.disabledKeys.has(key)) {\n      key = this.getNextKey(key);\n    }\n    return key;\n  }\n\n  getLastKey() {\n    let key = this.collection.getLastKey();\n    if (this.disabledKeys.has(key)) {\n      key = this.getPreviousKey(key);\n    }\n    return key;\n  }\n\n  getNextKey(key) {\n    do {\n      key = this.collection.getKeyAfter(key);\n      if (key == null) {\n        key = this.collection.getFirstKey();\n      }\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n\n  getPreviousKey(key) {\n    do {\n      key = this.collection.getKeyBefore(key);\n      if (key == null) {\n        key = this.collection.getLastKey();\n      }\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTabProps, AriaTabsProps} from '@react-types/tabs';\nimport {HTMLAttributes, Key, RefObject, useMemo} from 'react';\nimport {mergeProps, useId, useLabels} from '@react-aria/utils';\nimport {SingleSelectListState} from '@react-stately/list';\nimport {TabsKeyboardDelegate} from './TabsKeyboardDelegate';\nimport {TabsState} from '@react-stately/tabs';\nimport {useLocale} from '@react-aria/i18n';\nimport {usePress} from '@react-aria/interactions';\nimport {useSelectableCollection, useSelectableItem} from '@react-aria/selection';\n\ninterface TabsAria {\n  /** Props for the tablist container. */\n  tabListProps: HTMLAttributes<HTMLElement>,\n  /** Props for the associated tabpanel element. */\n  tabPanelProps: HTMLAttributes<HTMLElement>\n}\n\nconst tabsIds = new WeakMap<SingleSelectListState<unknown>, string>();\n\nexport function useTabs<T>(props: AriaTabsProps<T>, state: TabsState<T>, ref): TabsAria {\n  let {\n    orientation = 'horizontal',\n    keyboardActivation = 'automatic'\n  } = props;\n  let {\n    collection,\n    selectionManager: manager,\n    disabledKeys,\n    selectedKey\n  } = state;\n  let {direction} = useLocale();\n  let delegate = useMemo(() => new TabsKeyboardDelegate(\n    collection,\n    direction,\n    orientation,\n    disabledKeys), [collection, disabledKeys, orientation, direction]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    selectOnFocus: keyboardActivation === 'automatic',\n    disallowEmptySelection: true\n  });\n\n  // Compute base id for all tabs\n  let tabsId = useId();\n  tabsIds.set(state, tabsId);\n\n  let tabListLabelProps = useLabels({...props, id: tabsId});\n\n  return {\n    tabListProps: {\n      ...mergeProps(collectionProps, tabListLabelProps),\n      role: 'tablist',\n      'aria-orientation': orientation,\n      tabIndex: undefined\n    },\n    tabPanelProps: {\n      id: generateId(state, selectedKey, 'tabpanel'),\n      'aria-labelledby': generateId(state, selectedKey, 'tab'),\n      tabIndex: 0,\n      role: 'tabpanel'\n    }\n  };\n}\n\ninterface TabAria {\n  /** Props for the tab element. */\n  tabProps: HTMLAttributes<HTMLElement>\n}\n\nexport function useTab<T>(\n  props: AriaTabProps<T>,\n  state: SingleSelectListState<T>,\n  ref: RefObject<HTMLElement>\n): TabAria {\n  let {item, isDisabled: propsDisabled} = props;\n  let {key} = item;\n  let {selectionManager: manager, selectedKey} = state;\n\n  let isSelected = key === selectedKey;\n\n  let {itemProps} = useSelectableItem({\n    selectionManager: manager,\n    key,\n    ref\n  });\n  let isDisabled = propsDisabled || state.disabledKeys.has(key);\n\n  let {pressProps} = usePress({...itemProps, isDisabled});\n  let tabId = generateId(state, key, 'tab');\n  let tabPanelId = generateId(state, key, 'tabpanel');\n  let {tabIndex} = pressProps;\n\n  // selected tab should have tabIndex=0, when it initializes\n  if (isSelected && !isDisabled) {\n    tabIndex = 0;\n  }\n\n  return {\n    tabProps: {\n      ...pressProps,\n      id: tabId,\n      'aria-selected': isSelected,\n      'aria-disabled': isDisabled || undefined,\n      'aria-controls': isSelected ? tabPanelId : undefined,\n      tabIndex: isDisabled ? undefined : tabIndex,\n      role: 'tab'\n    }\n  };\n}\n\nfunction generateId<T>(state: SingleSelectListState<T>, key: Key, role: string) {\n  if (typeof key === 'string') {\n    key = key.replace(/\\s+/g, '');\n  }\n\n  let baseId = tabsIds.get(state);\n  return `${baseId}-${role}-${key}`;\n}\n"]},"metadata":{},"sourceType":"module"}