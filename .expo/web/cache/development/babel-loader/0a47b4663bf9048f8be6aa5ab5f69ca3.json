{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _getIndexedChildren = _interopRequireDefault(require(\"../../../utils/getIndexedChildren\"));\n\nvar _Context = require(\"./Context\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Accordion/Accordion.tsx\";\n\nvar Accordion = function Accordion(_ref, ref) {\n  var children = _ref.children,\n      pIndex = _ref.index,\n      defaultIndex = _ref.defaultIndex,\n      allowMultiple = _ref.allowMultiple,\n      allowToggle = _ref.allowToggle,\n      onChange = _ref.onChange,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\", \"index\", \"defaultIndex\", \"allowMultiple\", \"allowToggle\", \"onChange\"]);\n\n  var _useThemeProps = (0, _hooks.useThemeProps)('Accordion', props),\n      endingHeight = _useThemeProps.endingHeight,\n      startingHeight = _useThemeProps.startingHeight,\n      duration = _useThemeProps.duration,\n      isOpen = _useThemeProps.isOpen,\n      onAnimationEnd = _useThemeProps.onAnimationEnd,\n      onAnimationStart = _useThemeProps.onAnimationStart,\n      newProps = (0, _objectWithoutProperties2.default)(_useThemeProps, [\"endingHeight\", \"startingHeight\", \"duration\", \"isOpen\", \"onAnimationEnd\", \"onAnimationStart\"]);\n\n  var _React$useState = _react.default.useState(pIndex || defaultIndex || []),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var changeHandler = function changeHandler(isOpening, activeIndex) {\n    var indexCopy = index.map(function (i) {\n      return i;\n    });\n\n    if (allowToggle) {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        setIndex(index.splice(index.indexOf(activeIndex), 1));\n      }\n    } else {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        indexCopy = indexCopy.filter(function (n) {\n          return n !== activeIndex;\n        });\n        setIndex(indexCopy);\n      }\n    }\n\n    onChange && onChange(indexCopy);\n  };\n\n  return _react.default.createElement(_Context.AccordionContext.Provider, {\n    value: {\n      index: index,\n      changeHandler: changeHandler,\n      AnimationProps: {\n        endingHeight: endingHeight,\n        startingHeight: startingHeight,\n        duration: duration,\n        isOpen: isOpen,\n        onAnimationEnd: onAnimationEnd,\n        onAnimationStart: onAnimationStart\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Box.default, (0, _extends2.default)({\n    overflow: \"hidden\"\n  }, newProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), (0, _getIndexedChildren.default)(children)));\n};\n\nvar _default = _react.default.memo(_react.default.forwardRef(Accordion));\n\nexports.default = _default;","map":{"version":3,"sources":["Accordion.tsx"],"names":["Accordion","children","index","pIndex","defaultIndex","allowMultiple","allowToggle","onChange","props","endingHeight","startingHeight","duration","isOpen","onAnimationEnd","onAnimationStart","newProps","setIndex","React","changeHandler","indexCopy","n","AnimationProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport type { IAccordionProps } from './types';\nimport { useThemeProps } from '../../../hooks';\nimport getIndexedChildren from '../../../utils/getIndexedChildren';\nimport { AccordionContext } from './Context';\n\nconst Accordion = (\n  {\n    children,\n    index: pIndex,\n    defaultIndex,\n    allowMultiple,\n    allowToggle,\n    onChange,\n    ...props\n  }: IAccordionProps,\n  ref: any\n) => {\n  const {\n    endingHeight,\n    startingHeight,\n    duration,\n    isOpen,\n    onAnimationEnd,\n    onAnimationStart,\n    ...newProps\n  } = useThemeProps('Accordion', props);\n\n  const [index, setIndex] = React.useState(pIndex || defaultIndex || []);\n  const changeHandler = (isOpening: boolean, activeIndex: number) => {\n    let indexCopy = index.map((i: number) => i);\n    if (allowToggle) {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        setIndex(index.splice(index.indexOf(activeIndex), 1));\n      }\n    } else {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        indexCopy = indexCopy.filter((n) => n !== activeIndex);\n        setIndex(indexCopy);\n      }\n    }\n    onChange && onChange(indexCopy);\n  };\n  return (\n    <AccordionContext.Provider\n      value={{\n        index: index,\n        changeHandler,\n        AnimationProps: {\n          endingHeight,\n          startingHeight,\n          duration,\n          isOpen,\n          onAnimationEnd,\n          onAnimationStart,\n        },\n      }}\n    >\n      <Box overflow=\"hidden\" {...newProps} ref={ref}>\n        {getIndexedChildren(children)}\n      </Box>\n    </AccordionContext.Provider>\n  );\n};\n\nexport default React.memo(React.forwardRef(Accordion));\n"]},"metadata":{},"sourceType":"script"}