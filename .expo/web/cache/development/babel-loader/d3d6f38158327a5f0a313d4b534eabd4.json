{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.NBStepper = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _primitives = require(\"../../primitives\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _Context = require(\"./Context\");\n\nvar _Icons = require(\"../../primitives/Icon/Icons\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/NumberInput/NumberInputStepper.tsx\";\n\nvar NBStepper = _react.default.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\"]);\n\n  var _useThemeProps = (0, _hooks.useThemeProps)('NumberInputStepper', props),\n      style = _useThemeProps.style,\n      isIncrement = _useThemeProps.isIncrement,\n      disablitityCheck = _useThemeProps.disablitityCheck,\n      _active = _useThemeProps._active,\n      _disabled = _useThemeProps._disabled,\n      isDisabled = _useThemeProps.isDisabled,\n      accessibilityLabel = _useThemeProps.accessibilityLabel,\n      pressHandler = _useThemeProps.pressHandler,\n      iconColor = _useThemeProps.iconColor,\n      newProps = (0, _objectWithoutProperties2.default)(_useThemeProps, [\"style\", \"isIncrement\", \"disablitityCheck\", \"_active\", \"_disabled\", \"isDisabled\", \"accessibilityLabel\", \"pressHandler\", \"iconColor\"]);\n\n  return _react.default.createElement(_reactNative.TouchableOpacity, {\n    activeOpacity: 0.2,\n    disabled: disablitityCheck || isDisabled,\n    onPress: pressHandler,\n    accessible: true,\n    accessibilityLabel: accessibilityLabel,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_primitives.Box, (0, _extends2.default)({}, newProps, _active, disablitityCheck || isDisabled ? _disabled : {}, {\n    borderColor: \"transparent\",\n    style: style,\n    opacity: disablitityCheck || isDisabled ? 0.4 : 1\n  }, _reactNative.Platform.OS === 'web' ? {\n    disabled: disablitityCheck || isDisabled,\n    cursor: disablitityCheck || isDisabled ? 'not-allowed' : 'auto'\n  } : {}, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), children || isIncrement ? _react.default.createElement(_Icons.ChevronUpIcon, {\n    color: iconColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }) : _react.default.createElement(_Icons.ChevronDownIcon, {\n    color: iconColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })));\n});\n\nexports.NBStepper = NBStepper;\n\nvar NumberInputStepper = function NumberInputStepper(_ref2, ref) {\n  var children = _ref2.children,\n      props = (0, _objectWithoutProperties2.default)(_ref2, [\"children\"]);\n\n  var _React$useContext = _react.default.useContext(_Context.NumberInputContext),\n      numberInputStepper = _React$useContext.numberInputStepper,\n      setNumberInputStepper = _React$useContext.setNumberInputStepper;\n\n  _react.default.useEffect(function () {\n    !numberInputStepper && setNumberInputStepper(_react.default.createElement(_primitives.VStack, (0, _extends2.default)({}, props, {\n      ref: ref,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), children));\n  }, [numberInputStepper, setNumberInputStepper, props, children, ref]);\n\n  return null;\n};\n\nvar _default = _react.default.memo(_react.default.forwardRef(NumberInputStepper));\n\nexports.default = _default;","map":{"version":3,"sources":["NumberInputStepper.tsx"],"names":["NBStepper","React","children","props","style","isIncrement","disablitityCheck","_active","_disabled","isDisabled","accessibilityLabel","pressHandler","iconColor","newProps","Platform","disabled","cursor","NumberInputStepper","numberInputStepper","setNumberInputStepper","NumberInputContext"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport { VStack, Box } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport type { INumberInputSteppersProps, INumberInputContext } from './types';\nimport { NumberInputContext } from './Context';\nimport { ChevronUpIcon, ChevronDownIcon } from '../../primitives/Icon/Icons';\n\nexport const NBStepper = React.forwardRef(\n  ({ children, ...props }: any, ref?: any) => {\n    const {\n      style,\n      isIncrement,\n      disablitityCheck,\n      _active,\n      _disabled,\n      isDisabled,\n      accessibilityLabel,\n      pressHandler,\n      iconColor,\n      ...newProps\n    } = useThemeProps('NumberInputStepper', props);\n    return (\n      <TouchableOpacity\n        activeOpacity={0.2}\n        disabled={disablitityCheck || isDisabled}\n        onPress={pressHandler}\n        accessible\n        accessibilityLabel={accessibilityLabel}\n        ref={ref}\n      >\n        <Box\n          {...newProps}\n          {..._active}\n          {...(disablitityCheck || isDisabled ? _disabled : {})}\n          borderColor=\"transparent\"\n          style={style}\n          opacity={disablitityCheck || isDisabled ? 0.4 : 1}\n          {...(Platform.OS === 'web'\n            ? {\n                disabled: disablitityCheck || isDisabled,\n                cursor: disablitityCheck || isDisabled ? 'not-allowed' : 'auto',\n              }\n            : {})}\n        >\n          {children || isIncrement ? (\n            <ChevronUpIcon color={iconColor} />\n          ) : (\n            <ChevronDownIcon color={iconColor} />\n          )}\n        </Box>\n      </TouchableOpacity>\n    );\n  }\n);\n\nconst NumberInputStepper = (\n  { children, ...props }: INumberInputSteppersProps,\n  ref?: any\n) => {\n  const {\n    numberInputStepper,\n    setNumberInputStepper,\n  }: INumberInputContext = React.useContext(NumberInputContext);\n\n  React.useEffect(() => {\n    !numberInputStepper &&\n      setNumberInputStepper(\n        <VStack {...props} ref={ref}>\n          {children}\n        </VStack>\n      );\n  }, [numberInputStepper, setNumberInputStepper, props, children, ref]);\n  return null;\n};\n\nexport default React.memo(React.forwardRef(NumberInputStepper));\n"]},"metadata":{},"sourceType":"script"}