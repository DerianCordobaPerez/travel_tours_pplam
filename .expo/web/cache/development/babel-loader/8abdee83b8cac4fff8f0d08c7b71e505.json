{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _native = _interopRequireDefault(require(\"styled-components/native\"));\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _customProps = require(\"../../../utils/customProps\");\n\nvar _Text = _interopRequireDefault(require(\"../Text\"));\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Image/index.tsx\";\n\nvar StyledImage = (0, _native.default)(_reactNative.Image)(_styledSystem.color, _styledSystem.space, _styledSystem.layout, _styledSystem.flexbox, _styledSystem.border, _styledSystem.position, _customProps.customPosition, _customProps.customBorder, _customProps.customBackground, _customProps.customOutline, _customProps.customShadow, _customProps.customExtra, _customProps.customLayout);\n\nvar Image = function Image(_ref, ref) {\n  var source = _ref.source,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"source\"]);\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('Image', props),\n      alt = _usePropsResolution.alt,\n      fallbackSource = _usePropsResolution.fallbackSource,\n      ignoreFallback = _usePropsResolution.ignoreFallback,\n      _alt = _usePropsResolution._alt,\n      newProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"alt\", \"fallbackSource\", \"ignoreFallback\", \"_alt\"]);\n\n  var _useState = (0, _react.useState)(source),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      renderedSource = _useState2[0],\n      setSource = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      alternate = _useState4[0],\n      setAlternate = _useState4[1];\n\n  _react.default.useEffect(function () {\n    setAlternate(false);\n    setSource(source);\n  }, [source]);\n\n  var onImageLoadError = function onImageLoadError(event) {\n    console.warn(event.nativeEvent.error);\n\n    if (!ignoreFallback && fallbackSource && fallbackSource !== renderedSource) {\n      setSource(fallbackSource);\n    } else {\n      setAlternate(true);\n    }\n  };\n\n  if (!alt) {\n    console.warn('Please pass alt prop to Image component');\n  }\n\n  if (alternate) {\n    return _react.default.createElement(_Text.default, (0, _extends2.default)({}, _alt, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 12\n      }\n    }), alt);\n  }\n\n  return _react.default.createElement(StyledImage, (0, _extends2.default)({\n    source: renderedSource,\n    accessibilityLabel: alt,\n    alt: alt\n  }, newProps, {\n    onError: props.onError ? props.onError : onImageLoadError,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Image));\n\nexports.default = _default;","map":{"version":3,"sources":["index.tsx"],"names":["StyledImage","RNImage","color","space","layout","flexbox","border","position","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customLayout","Image","source","props","alt","fallbackSource","ignoreFallback","_alt","newProps","renderedSource","setSource","alternate","setAlternate","React","onImageLoadError","console","event"],"mappings":"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","sourcesContent":["import React, { useState, memo, forwardRef } from 'react';\nimport { Image as RNImage } from 'react-native';\nimport styled from 'styled-components/native';\nimport { border, color, flexbox, layout, space, position } from 'styled-system';\nimport {\n  customBorder,\n  customBackground,\n  customOutline,\n  customLayout,\n  customExtra,\n  customShadow,\n  customPosition,\n} from '../../../utils/customProps';\nimport Text from '../Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IImageProps } from './types';\n\nconst StyledImage = styled(RNImage)<IImageProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout\n);\n\nconst Image = ({ source, ...props }: IImageProps, ref: any) => {\n  const {\n    alt,\n    fallbackSource,\n    ignoreFallback,\n    _alt,\n    ...newProps\n  } = usePropsResolution('Image', props);\n  const [renderedSource, setSource] = useState(source);\n  const [alternate, setAlternate] = useState(false);\n\n  React.useEffect(() => {\n    setAlternate(false);\n    setSource(source);\n  }, [source]);\n\n  const onImageLoadError = (event: any) => {\n    console.warn(event.nativeEvent.error);\n    if (\n      !ignoreFallback &&\n      fallbackSource &&\n      fallbackSource !== renderedSource\n    ) {\n      setSource(fallbackSource);\n    } else {\n      setAlternate(true);\n    }\n  };\n\n  if (!alt) {\n    console.warn('Please pass alt prop to Image component');\n  }\n\n  if (alternate) {\n    return <Text {..._alt}>{alt}</Text>;\n  }\n  return (\n    <StyledImage\n      source={renderedSource}\n      accessibilityLabel={alt}\n      alt={alt}\n      {...newProps}\n      onError={props.onError ? props.onError : onImageLoadError}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(Image));\nexport type { IImageProps };\n"]},"metadata":{},"sourceType":"script"}