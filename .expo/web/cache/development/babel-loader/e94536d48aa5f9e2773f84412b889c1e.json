{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usePropsWithComponentTheme = usePropsWithComponentTheme;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.omit\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _useNativeBase2 = require(\"./../useNativeBase\");\n\nvar _utils = require(\"./utils\");\n\nfunction usePropsWithComponentTheme(localTheme, propsReceived) {\n  var _useWindowDimensions;\n\n  var _useNativeBase = (0, _useNativeBase2.useNativeBase)(),\n      theme = _useNativeBase.theme,\n      colorModeProps = (0, _objectWithoutProperties2.default)(_useNativeBase, [\"theme\"]);\n\n  var windowWidth = (_useWindowDimensions = (0, _reactNative.useWindowDimensions)()) == null ? void 0 : _useWindowDimensions.width;\n  return (0, _utils.calculateProps)((0, _lodash.default)(theme, 'components'), colorModeProps, localTheme, propsReceived, windowWidth);\n}","map":{"version":3,"sources":["usePropsWithComponentTheme.ts"],"names":["theme","colorModeProps","windowWidth"],"mappings":";;;;;;;;;AAAA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;;;AAEA,IAAA,eAAA,GAAA,OAAA,sBAAA;;AACA,IAAA,MAAA,GAAA,OAAA,WAAA;;AAEO,SAAA,0BAAA,CAAA,UAAA,EAAA,aAAA,EAGL;AAAA,MAAA,oBAAA;;AAAA,MAAA,cAAA,GACqC,CAAA,GAAA,eAAA,CADrC,aACqC,GADrC;AAAA,MACQA,KADR,GAAA,cAAA,CAAA,KAAA;AAAA,MACkBC,cADlB,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,cAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,MAAIC,WAAW,GAAA,CAAA,oBAAA,GAAG,CAAA,GAAA,YAAA,CAAH,mBAAG,GAAH,KAAA,IAAA,GAAA,KAAA,CAAA,GAAG,oBAAA,CAAlB,KAAA;AACA,SAAO,CAAA,GAAA,MAAA,CAAA,cAAA,EACL,CAAA,GAAA,OAAA,CAAA,OAAA,EAAA,KAAA,EADK,YACL,CADK,EAAA,cAAA,EAAA,UAAA,EAAA,aAAA,EAAP,WAAO,CAAP;AAOD","sourcesContent":["import omit from 'lodash.omit';\nimport { useWindowDimensions } from 'react-native';\nimport { useNativeBase } from './../useNativeBase';\nimport { calculateProps } from './utils';\n\nexport function usePropsWithComponentTheme(\n  localTheme: any,\n  propsReceived: any\n) {\n  const { theme, ...colorModeProps } = useNativeBase();\n  let windowWidth = useWindowDimensions()?.width;\n  return calculateProps(\n    omit(theme, 'components'),\n    colorModeProps,\n    localTheme,\n    propsReceived,\n    windowWidth\n  );\n}\n"]},"metadata":{},"sourceType":"script"}