{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.themeTools = exports.theme = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _base = _interopRequireDefault(require(\"./base\"));\n\nvar _components = _interopRequireDefault(require(\"./components\"));\n\nvar tools = _interopRequireWildcard(require(\"./tools\"));\n\nexports.themeTools = tools;\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: 'light',\n  accessibleColors: false\n};\nvar theme = (0, _extends2.default)({}, _base.default, {\n  components: _components.default,\n  config: config\n});\nexports.theme = theme;","map":{"version":3,"sources":["index.ts"],"names":["config","useSystemColorMode","initialColorMode","accessibleColors","theme","base","components"],"mappings":";;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,UAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,gBAAA,CAAA;;AACA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,WAAA,CAAA;;;AASA,IAAMA,MAAwB,GAAG;AAC/BC,EAAAA,kBAAkB,EADa,KAAA;AAE/BC,EAAAA,gBAAgB,EAFe,OAAA;AAG/BC,EAAAA,gBAAgB,EAHlB;AAAiC,CAAjC;AAKA,IAAMC,KAAK,GAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EACNC,KAAAA,CADM,OAAA,EAAA;AAETC,EAAAA,UAAU,EAAVA,WAAAA,CAFS,OAAA;AAGTN,EAAAA,MAAM,EAHR;AAAW,CAAA,CAAX","sourcesContent":["import base from './base';\nimport components from './components';\nimport * as tools from './tools';\n//@ts-ignore\nimport type { ColorModeOptions } from './../core/color-mode/types';\nexport interface ComponentTheme {\n  baseStyle?: Record<string, any>;\n  sizes?: Record<string, any>;\n  variants?: Record<string, any>;\n  defaultProps?: Record<string, any>;\n}\nconst config: ColorModeOptions = {\n  useSystemColorMode: false, // TODO: implement this\n  initialColorMode: 'light',\n  accessibleColors: false,\n};\nconst theme = {\n  ...base,\n  components,\n  config,\n};\n\nexport type ITheme = typeof theme;\nexport { theme, tools as themeTools };\n"]},"metadata":{},"sourceType":"script"}