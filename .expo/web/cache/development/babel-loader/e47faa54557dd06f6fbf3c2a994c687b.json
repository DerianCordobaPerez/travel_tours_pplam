{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extendTheme = extendTheme;\n\nvar _theme = require(\"./../theme\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash.mergewith\"));\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction extendTheme(overrides) {\n  function customizer(source, override) {\n    if (isFunction(source)) {\n      return function () {\n        var sourceValue = source.apply(void 0, arguments);\n        var overrideValue = isFunction(override) ? override.apply(void 0, arguments) : override;\n        return (0, _lodash.default)({}, sourceValue, overrideValue, customizer);\n      };\n    }\n\n    return undefined;\n  }\n\n  return (0, _lodash.default)({}, _theme.theme, overrides, customizer);\n}","map":{"version":3,"sources":["extendTheme.tsx"],"names":["isFunction","sourceValue","source","overrideValue","override","defaultTheme"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,cAAA;;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;AAEA,SAAA,UAAA,CAAA,KAAA,EAAyC;AACvC,SAAO,OAAA,KAAA,KAAP,UAAA;AAGK;;AAAA,SAAA,WAAA,CAAA,SAAA,EAEL;AACA,WAAA,UAAA,CAAA,MAAA,EAAA,QAAA,EAAgD;AAC9C,QAAIA,UAAU,CAAd,MAAc,CAAd,EAAwB;AACtB,aAAO,YAAoB;AACzB,YAAMC,WAAW,GAAGC,MAAM,CAANA,KAAAA,CAAAA,KAAAA,CAAAA,EAApB,SAAoBA,CAApB;AACA,YAAMC,aAAa,GAAGH,UAAU,CAAVA,QAAU,CAAVA,GAClBI,QAAQ,CAARA,KAAAA,CAAAA,KAAAA,CAAAA,EADkBJ,SAClBI,CADkBJ,GAAtB,QAAA;AAGA,eAAO,CAAA,GAAA,OAAA,CAAA,OAAA,EAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAP,UAAO,CAAP;AALF,OAAA;AAQF;;AAAA,WAAA,SAAA;AAGF;;AAAA,SAAO,CAAA,GAAA,OAAA,CAAA,OAAA,EAAA,EAAA,EAAcK,MAAAA,CAAd,KAAA,EAAA,SAAA,EAAP,UAAO,CAAP;AACD","sourcesContent":["import { theme as defaultTheme, ITheme } from './../theme';\nimport mergeWith from 'lodash.mergewith';\n\nfunction isFunction(value: any): boolean {\n  return typeof value === 'function';\n}\n\nexport function extendTheme<T extends ITheme | Record<string, any>>(\n  overrides: T\n) {\n  function customizer(source: any, override: any) {\n    if (isFunction(source)) {\n      return (...args: any[]) => {\n        const sourceValue = source(...args);\n        const overrideValue = isFunction(override)\n          ? override(...args)\n          : override;\n        return mergeWith({}, sourceValue, overrideValue, customizer);\n      };\n    }\n    return undefined;\n  }\n\n  return mergeWith({}, defaultTheme, overrides, customizer);\n}\n"]},"metadata":{},"sourceType":"script"}