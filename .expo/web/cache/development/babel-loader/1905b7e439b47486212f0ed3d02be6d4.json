{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _Context = require(\"./Context\");\n\nvar _collections = require(\"@react-stately/collections\");\n\nvar _tabs = require(\"@react-stately/tabs\");\n\nvar _TabViews = _interopRequireDefault(require(\"./TabViews\"));\n\nvar _TabBar = _interopRequireDefault(require(\"./TabBar\"));\n\nvar _tabs2 = require(\"@react-native-aria/tabs\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Tabs/Tabs.tsx\";\n\nvar getTabsAndBars = function getTabsAndBars(children) {\n  var bars = [];\n  var views = [];\n\n  var items = _react.default.Children.toArray(children);\n\n  var tabBarProps = {\n    props: {},\n    ref: undefined\n  };\n  var tabViewsProps = {\n    props: {},\n    ref: undefined\n  };\n  items.forEach(function (item) {\n    if (item.type) {\n      if (item.type.displayName === 'TabBar') {\n        bars = bars.concat(item.props.children);\n        tabBarProps = {\n          props: item.props,\n          ref: item.ref\n        };\n      } else if (item.type.displayName === 'TabViews') {\n        views = views.concat(item.props.children);\n        tabViewsProps = {\n          props: item.props,\n          ref: item.ref\n        };\n      }\n    }\n  });\n  return {\n    views: views,\n    bars: bars,\n    tabViewsProps: tabViewsProps,\n    tabBarProps: tabBarProps\n  };\n};\n\nvar convertToCollectionItems = function convertToCollectionItems(children) {\n  var _getTabsAndBars = getTabsAndBars(children),\n      views = _getTabsAndBars.views,\n      bars = _getTabsAndBars.bars;\n\n  return bars.map(function (bar, index) {\n    var textValue;\n\n    if (bar.props.accessibilityLabel) {\n      textValue = bar.props.accessibilityLabel;\n    } else if (typeof bar.props.children === 'string') {\n      textValue = bar.props.children;\n    } else if (__DEV__) {\n      console.warn('Please pass accessibilityLabel into Tabs.Tab component');\n    }\n\n    return _react.default.createElement(_collections.Item, {\n      key: index,\n      title: bar,\n      textValue: textValue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, views[index]);\n  });\n};\n\nvar Tabs = function Tabs(_ref, ref) {\n  var children = _ref.children,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\"]);\n\n  var _useThemeProps = (0, _hooks.useThemeProps)('Tabs', props),\n      onChange = _useThemeProps.onChange,\n      activeTabStyle = _useThemeProps.activeTabStyle,\n      inactiveTabStyle = _useThemeProps.inactiveTabStyle,\n      activeIconProps = _useThemeProps.activeIconProps,\n      inactiveIconProps = _useThemeProps.inactiveIconProps,\n      tabBarStyle = _useThemeProps.tabBarStyle,\n      isFitted = _useThemeProps.isFitted,\n      align = _useThemeProps.align,\n      newProps = (0, _objectWithoutProperties2.default)(_useThemeProps, [\"onChange\", \"activeTabStyle\", \"inactiveTabStyle\", \"activeIconProps\", \"inactiveIconProps\", \"tabBarStyle\", \"isFitted\", \"align\"]);\n\n  var collectionChildren = convertToCollectionItems(children);\n\n  var _getTabsAndBars2 = getTabsAndBars(children),\n      tabBarProps = _getTabsAndBars2.tabBarProps,\n      tabViewsProps = _getTabsAndBars2.tabViewsProps;\n\n  var mappedProps = {\n    children: collectionChildren,\n    defaultSelectedKey: props.defaultIndex !== undefined ? props.defaultIndex.toString() : undefined,\n    selectedKey: props.index !== undefined ? props.index.toString() : undefined,\n    onSelectionChange: function onSelectionChange(e) {\n      return onChange && onChange(parseInt(e));\n    },\n    keyboardActivation: props.keyboardActivation\n  };\n  var state = (0, _tabs.useTabsState)(mappedProps);\n\n  var setAlign = function setAlign() {\n    switch (align) {\n      case 'start':\n        return 'flex-start';\n\n      case 'end':\n        return 'flex-end';\n\n      case 'center':\n        return 'center';\n\n      default:\n        return 'flex-start';\n    }\n  };\n\n  var tablistRef = _react.default.useRef();\n\n  var _useTabs = (0, _tabs2.useTabs)(mappedProps, state, tablistRef),\n      tabListProps = _useTabs.tabListProps,\n      tabPanelProps = _useTabs.tabPanelProps;\n\n  return _react.default.createElement(_Context.TabsContext.Provider, {\n    value: {\n      activeTabStyle: activeTabStyle,\n      inactiveTabStyle: inactiveTabStyle,\n      activeIconProps: activeIconProps,\n      inactiveIconProps: inactiveIconProps,\n      tabBarStyle: tabBarStyle,\n      isFitted: isFitted,\n      align: setAlign(),\n      state: state\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Box.default, (0, _extends2.default)({\n    width: \"100%\"\n  }, newProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_TabBar.default, (0, _extends2.default)({\n    tabListProps: tabListProps\n  }, tabBarProps.props, {\n    tablistRef: (0, _utils.mergeRefs)([tablistRef, tabBarProps.ref]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })), _react.default.createElement(_TabViews.default, (0, _extends2.default)({}, tabPanelProps, tabViewsProps.props, {\n    ref: tabViewsProps.ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), state.selectedItem && state.selectedItem.props.children)));\n};\n\nvar _default = _react.default.memo(_react.default.forwardRef(Tabs));\n\nexports.default = _default;","map":{"version":3,"sources":["Tabs.tsx"],"names":["getTabsAndBars","bars","views","items","React","tabBarProps","props","ref","tabViewsProps","item","convertToCollectionItems","bar","textValue","console","Tabs","children","onChange","activeTabStyle","inactiveTabStyle","activeIconProps","inactiveIconProps","tabBarStyle","isFitted","align","newProps","collectionChildren","mappedProps","defaultSelectedKey","selectedKey","onSelectionChange","parseInt","keyboardActivation","state","setAlign","tablistRef","tabListProps","tabPanelProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport type { ITabsProps } from './types';\nimport { useThemeProps } from '../../../hooks';\nimport { TabsContext } from './Context';\nimport { Item } from '@react-stately/collections';\nimport { useTabsState } from '@react-stately/tabs';\nimport TabViews from './TabViews';\nimport TabBar from './TabBar';\nimport { useTabs } from '@react-native-aria/tabs';\nimport { mergeRefs } from '../../../utils';\nconst getTabsAndBars = (children: any) => {\n  let bars: any = [];\n  let views: any = [];\n  let items = React.Children.toArray(children);\n  let tabBarProps: any = { props: {}, ref: undefined };\n  let tabViewsProps = { props: {}, ref: undefined };\n  items.forEach((item: any) => {\n    if (item.type) {\n      if (item.type.displayName === 'TabBar') {\n        bars = bars.concat(item.props.children);\n        tabBarProps = { props: item.props, ref: item.ref };\n      } else if (item.type.displayName === 'TabViews') {\n        views = views.concat(item.props.children);\n        tabViewsProps = { props: item.props, ref: item.ref };\n      }\n    }\n  });\n  return { views, bars, tabViewsProps, tabBarProps };\n};\nconst convertToCollectionItems = (children: any) => {\n  const { views, bars } = getTabsAndBars(children);\n  return bars.map((bar: any, index: number) => {\n    let textValue;\n    if (bar.props.accessibilityLabel) {\n      textValue = bar.props.accessibilityLabel;\n    } else if (typeof bar.props.children === 'string') {\n      textValue = bar.props.children;\n    } else if (__DEV__) {\n      console.warn('Please pass accessibilityLabel into Tabs.Tab component');\n    }\n    return (\n      <Item key={index} title={bar} textValue={textValue}>\n        {views[index]}\n      </Item>\n    );\n  });\n};\nconst Tabs = ({ children, ...props }: ITabsProps, ref: any) => {\n  const {\n    onChange,\n    activeTabStyle,\n    inactiveTabStyle,\n    activeIconProps,\n    inactiveIconProps,\n    tabBarStyle,\n    isFitted,\n    align,\n    ...newProps\n  } = useThemeProps('Tabs', props);\n  // useTabsState needs collection children.\n  const collectionChildren = convertToCollectionItems(children);\n  const { tabBarProps, tabViewsProps } = getTabsAndBars(children);\n  const mappedProps = {\n    children: collectionChildren,\n    defaultSelectedKey:\n      props.defaultIndex !== undefined\n        ? props.defaultIndex.toString()\n        : undefined,\n    selectedKey: props.index !== undefined ? props.index.toString() : undefined,\n    onSelectionChange: (e: any) => onChange && onChange(parseInt(e)),\n    keyboardActivation: props.keyboardActivation,\n  };\n  // useTabsState needs collection children.\n  let state = useTabsState(mappedProps);\n  const setAlign = () => {\n    switch (align) {\n      case 'start':\n        return 'flex-start';\n      case 'end':\n        return 'flex-end';\n      case 'center':\n        return 'center';\n      default:\n        return 'flex-start';\n    }\n  };\n  let tablistRef = React.useRef<any>();\n  let { tabListProps, tabPanelProps } = useTabs(mappedProps, state, tablistRef);\n  return (\n    <TabsContext.Provider\n      value={{\n        activeTabStyle,\n        inactiveTabStyle,\n        activeIconProps,\n        inactiveIconProps,\n        tabBarStyle,\n        isFitted,\n        align: setAlign(),\n        state,\n      }}\n    >\n      <Box width=\"100%\" {...newProps} ref={ref}>\n        <TabBar\n          tabListProps={tabListProps}\n          {...tabBarProps.props}\n          tablistRef={mergeRefs([tablistRef, tabBarProps.ref])}\n        />\n        <TabViews\n          {...tabPanelProps}\n          {...tabViewsProps.props}\n          ref={tabViewsProps.ref}\n        >\n          {state.selectedItem && state.selectedItem.props.children}\n        </TabViews>\n      </Box>\n    </TabsContext.Provider>\n  );\n};\nexport default React.memo(React.forwardRef(Tabs));\n"]},"metadata":{},"sourceType":"script"}