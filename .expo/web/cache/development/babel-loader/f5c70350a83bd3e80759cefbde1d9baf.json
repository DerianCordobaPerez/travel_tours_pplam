{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _slider = require(\"@react-native-aria/slider\");\n\nvar _visuallyHidden = require(\"@react-aria/visually-hidden\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _Box = _interopRequireDefault(require(\"../Box\"));\n\nvar _Context = require(\"./Context\");\n\nvar _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Slider/SliderThumb.tsx\";\n\nfunction SliderThumb(props, ref) {\n  var _React$useContext = _react.default.useContext(_Context.SliderContext),\n      state = _React$useContext.state,\n      trackLayout = _React$useContext.trackLayout,\n      orientation = _React$useContext.orientation,\n      colorScheme = _React$useContext.colorScheme,\n      thumbSize = _React$useContext.thumbSize;\n\n  var themeProps = (0, _useThemeProps.usePropsResolution)('SliderThumb', (0, _extends2.default)({\n    size: thumbSize,\n    colorScheme: colorScheme\n  }, props));\n\n  var inputRef = _react.default.useRef(null);\n\n  var _useSliderThumb = (0, _slider.useSliderThumb)({\n    index: 0,\n    trackLayout: trackLayout,\n    inputRef: inputRef,\n    orientation: orientation\n  }, state),\n      thumbProps = _useSliderThumb.thumbProps,\n      inputProps = _useSliderThumb.inputProps;\n\n  var thumbAbsoluteSize = (0, _hooks.useToken)('sizes', themeProps.size);\n  var thumbStyles = {\n    bottom: orientation === 'vertical' ? state.getThumbPercent(0) * 100 + \"%\" : undefined,\n    left: orientation !== 'vertical' ? state.getThumbPercent(0) * 100 + \"%\" : undefined,\n    transform: orientation === 'vertical' ? [{\n      translateY: parseInt(thumbAbsoluteSize) / 2\n    }] : [{\n      translateX: -parseInt(thumbAbsoluteSize) / 2\n    }]\n  };\n  thumbStyles.transform.push({\n    scale: state.isThumbDragging(0) ? themeProps.scaleOnPressed : 1\n  });\n  return _react.default.createElement(_Box.default, (0, _extends2.default)({\n    position: \"absolute\"\n  }, thumbProps, themeProps, {\n    ref: ref,\n    style: [thumbStyles, props.style],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }), props.children, _reactNative.Platform.OS === 'web' && _react.default.createElement(_visuallyHidden.VisuallyHidden, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(\"input\", (0, _extends2.default)({\n    ref: inputRef\n  }, inputProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }))));\n}\n\nSliderThumb.displayName = 'SliderThumb';\n\nvar _default = (0, _react.forwardRef)(SliderThumb);\n\nexports.default = _default;","map":{"version":3,"sources":["SliderThumb.tsx"],"names":["state","trackLayout","orientation","colorScheme","thumbSize","React","SliderContext","themeProps","size","inputRef","thumbProps","inputProps","index","thumbAbsoluteSize","thumbStyles","bottom","left","transform","translateY","parseInt","translateX","scale","props","Platform","SliderThumb"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { useSliderThumb } from '@react-native-aria/slider';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { useToken } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { ISliderThumbProps } from './types';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\n\nfunction SliderThumb(props: ISliderThumbProps, ref: any) {\n  let {\n    state,\n    trackLayout,\n    orientation,\n    colorScheme,\n    thumbSize,\n  } = React.useContext(SliderContext);\n  const themeProps = usePropsResolution('SliderThumb', {\n    size: thumbSize,\n    colorScheme,\n    ...props,\n  });\n  let inputRef = React.useRef(null);\n  let { thumbProps, inputProps } = useSliderThumb(\n    {\n      index: 0,\n      trackLayout,\n      inputRef,\n      orientation,\n    },\n    state\n  );\n\n  const thumbAbsoluteSize = useToken('sizes', themeProps.size);\n\n  const thumbStyles: any = {\n    bottom:\n      orientation === 'vertical'\n        ? `${state.getThumbPercent(0) * 100}%`\n        : undefined,\n    left:\n      orientation !== 'vertical'\n        ? `${state.getThumbPercent(0) * 100}%`\n        : undefined,\n    transform:\n      orientation === 'vertical'\n        ? [{ translateY: parseInt(thumbAbsoluteSize) / 2 }]\n        : [{ translateX: -parseInt(thumbAbsoluteSize) / 2 }],\n  };\n\n  thumbStyles.transform.push({\n    scale: state.isThumbDragging(0) ? themeProps.scaleOnPressed : 1,\n  });\n\n  return (\n    <Box\n      position=\"absolute\"\n      {...thumbProps}\n      {...themeProps}\n      ref={ref}\n      style={[thumbStyles, props.style]}\n    >\n      {props.children}\n      {Platform.OS === 'web' && (\n        <VisuallyHidden>\n          <input ref={inputRef} {...inputProps} />\n        </VisuallyHidden>\n      )}\n    </Box>\n  );\n}\n\nSliderThumb.displayName = 'SliderThumb';\n\nexport default forwardRef(SliderThumb);\n"]},"metadata":{},"sourceType":"script"}