{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-aria/slider/src/utils.ts","./packages/@react-aria/slider/src/useSlider.ts","./packages/@react-aria/slider/src/useSliderThumb.ts"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","import {SliderState} from '@react-stately/slider';\n\nexport const sliderIds = new WeakMap<SliderState, string>();\n\nexport function getSliderThumbId(state: SliderState, index: number) {\n  let id = sliderIds.get(state);\n  if (!id) {\n    throw new Error('Unknown slider state');\n  }\n\n  return `${id}-${index}`;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaSliderProps} from '@react-types/slider';\nimport {clamp, mergeProps, useGlobalListeners} from '@react-aria/utils';\nimport {getSliderThumbId, sliderIds} from './utils';\nimport React, {HTMLAttributes, LabelHTMLAttributes, OutputHTMLAttributes, RefObject, useRef} from 'react';\nimport {setInteractionModality, useMove} from '@react-aria/interactions';\nimport {SliderState} from '@react-stately/slider';\nimport {useLabel} from '@react-aria/label';\nimport {useLocale} from '@react-aria/i18n';\n\ninterface SliderAria {\n  /** Props for the label element. */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n\n  /** Props for the root element of the slider component; groups slider inputs. */\n  groupProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the track element. */\n  trackProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the output element, displaying the value of the slider thumbs. */\n  outputProps: OutputHTMLAttributes<HTMLOutputElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a slider component representing one or more values.\n *\n * @param props Props for the slider.\n * @param state State for the slider, as returned by `useSliderState`.\n * @param trackRef Ref for the \"track\" element.  The width of this element provides the \"length\"\n * of the track -- the span of one dimensional space that the slider thumb can be.  It also\n * accepts click and drag motions, so that the closest thumb will follow clicks and drags on\n * the track.\n */\nexport function useSlider(\n  props: AriaSliderProps,\n  state: SliderState,\n  trackRef: RefObject<HTMLElement>\n): SliderAria {\n  let {labelProps, fieldProps} = useLabel(props);\n\n  let isVertical = props.orientation === 'vertical';\n\n  // Attach id of the label to the state so it can be accessed by useSliderThumb.\n  sliderIds.set(state, labelProps.id ?? fieldProps.id);\n\n  let {direction} = useLocale();\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  // When the user clicks or drags the track, we want the motion to set and drag the\n  // closest thumb.  Hence we also need to install useMove() on the track element.\n  // Here, we keep track of which index is the \"closest\" to the drag start point.\n  // It is set onMouseDown/onTouchDown; see trackProps below.\n  const realTimeTrackDraggingIndex = useRef<number | null>(null);\n\n  const stateRef = useRef<SliderState>(null);\n  stateRef.current = state;\n  const reverseX = direction === 'rtl';\n  const currentPosition = useRef<number>(null);\n  const {moveProps} = useMove({\n    onMoveStart() {\n      currentPosition.current = null;\n    },\n    onMove({deltaX, deltaY}) {\n      let size = isVertical ? trackRef.current.offsetHeight : trackRef.current.offsetWidth;\n\n      if (currentPosition.current == null) {\n        currentPosition.current = stateRef.current.getThumbPercent(realTimeTrackDraggingIndex.current) * size;\n      }\n\n      let delta = isVertical ? deltaY : deltaX;\n      if (isVertical || reverseX) {\n        delta = -delta;\n      }\n\n      currentPosition.current += delta;\n\n      if (realTimeTrackDraggingIndex.current != null && trackRef.current) {\n        const percent = clamp(currentPosition.current / size, 0, 1);\n        stateRef.current.setThumbPercent(realTimeTrackDraggingIndex.current, percent);\n      }\n    },\n    onMoveEnd() {\n      if (realTimeTrackDraggingIndex.current != null) {\n        stateRef.current.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n    }\n  });\n\n  let currentPointer = useRef<number | null | undefined>(undefined);\n  let onDownTrack = (e: React.UIEvent, id: number, clientX: number, clientY: number) => {\n    // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\n    if (trackRef.current && !props.isDisabled && state.values.every((_, i) => !state.isThumbDragging(i))) {\n      let size = isVertical ? trackRef.current.offsetHeight : trackRef.current.offsetWidth;\n      // Find the closest thumb\n      const trackPosition = trackRef.current.getBoundingClientRect()[isVertical ? 'top' : 'left'];\n      const clickPosition = isVertical ? clientY : clientX;\n      const offset = clickPosition - trackPosition;\n      let percent = offset / size;\n      if (direction === 'rtl' || isVertical) {\n        percent = 1 - percent;\n      }\n      let value = state.getPercentValue(percent);\n\n      // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\n      let closestThumb;\n      let split = state.values.findIndex(v => value - v < 0);\n      if (split === 0) { // If the index is zero then the closetThumb is the first one\n        closestThumb = split;\n      } else if (split === -1) { // If no index is found they've clicked past all the thumbs\n        closestThumb = state.values.length - 1;\n      } else {\n        let lastLeft = state.values[split - 1];\n        let firstRight = state.values[split];\n        // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\n        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\n          closestThumb = split - 1;\n        } else {\n          closestThumb = split;\n        }\n      }\n\n      // Confirm that the found closest thumb is editable, not disabled, and move it\n      if (closestThumb >= 0 && state.isThumbEditable(closestThumb)) {\n        // Don't unfocus anything\n        e.preventDefault();\n\n        realTimeTrackDraggingIndex.current = closestThumb;\n        state.setFocusedThumb(closestThumb);\n        currentPointer.current = id;\n\n        state.setThumbDragging(realTimeTrackDraggingIndex.current, true);\n        state.setThumbValue(closestThumb, value);\n\n        addGlobalListener(window, 'mouseup', onUpTrack, false);\n        addGlobalListener(window, 'touchend', onUpTrack, false);\n        addGlobalListener(window, 'pointerup', onUpTrack, false);\n      } else {\n        realTimeTrackDraggingIndex.current = null;\n      }\n    }\n  };\n\n  let onUpTrack = (e) => {\n    let id = e.pointerId ?? e.changedTouches?.[0].identifier;\n    if (id === currentPointer.current) {\n      if (realTimeTrackDraggingIndex.current != null) {\n        state.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n\n      removeGlobalListener(window, 'mouseup', onUpTrack, false);\n      removeGlobalListener(window, 'touchend', onUpTrack, false);\n      removeGlobalListener(window, 'pointerup', onUpTrack, false);\n    }\n  };\n\n  if (labelProps.htmlFor) {\n    // Ideally the `for` attribute should point to the first thumb, but VoiceOver on iOS\n    // causes this to override the `aria-labelledby` on the thumb. This causes the first\n    // thumb to only be announced as the slider label rather than its individual name as well.\n    // See https://bugs.webkit.org/show_bug.cgi?id=172464.\n    delete labelProps.htmlFor;\n    labelProps.onClick = () => {\n      // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\n      // so do it manually. In addition, make sure we show the focus ring.\n      document.getElementById(getSliderThumbId(state, 0))?.focus();\n      setInteractionModality('keyboard');\n    };\n  }\n\n  return {\n    labelProps,\n    // The root element of the Slider will have role=\"group\" to group together\n    // all the thumb inputs in the Slider.  The label of the Slider will\n    // be used to label the group.\n    groupProps: {\n      role: 'group',\n      ...fieldProps\n    },\n    trackProps: mergeProps({\n      onMouseDown(e: React.MouseEvent<HTMLElement>) {\n        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n          return;\n        }\n        onDownTrack(e, undefined, e.clientX, e.clientY);\n      },\n      onPointerDown(e: React.PointerEvent<HTMLElement>) {\n        if (e.pointerType === 'mouse' && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)) {\n          return;\n        }\n        onDownTrack(e, e.pointerId, e.clientX, e.clientY);\n      },\n      onTouchStart(e: React.TouchEvent<HTMLElement>) { onDownTrack(e, e.changedTouches[0].identifier, e.changedTouches[0].clientX, e.changedTouches[0].clientY); }\n    }, moveProps),\n    outputProps: {\n      htmlFor: state.values.map((_, index) => getSliderThumbId(state, index)).join(' '),\n      'aria-live': 'off'\n    }\n  };\n}\n","import {AriaSliderThumbProps} from '@react-types/slider';\nimport {clamp, focusWithoutScrolling, mergeProps, useGlobalListeners} from '@react-aria/utils';\nimport {getSliderThumbId, sliderIds} from './utils';\nimport React, {ChangeEvent, HTMLAttributes, InputHTMLAttributes, LabelHTMLAttributes, RefObject, useCallback, useEffect, useRef} from 'react';\nimport {SliderState} from '@react-stately/slider';\nimport {useFocusable} from '@react-aria/focus';\nimport {useLabel} from '@react-aria/label';\nimport {useLocale} from '@react-aria/i18n';\nimport {useMove} from '@react-aria/interactions';\n\ninterface SliderThumbAria {\n  /** Props for the root thumb element; handles the dragging motion. */\n  thumbProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the visually hidden range input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n\n  /** Props for the label element for this thumb (optional). */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>\n}\n\ninterface SliderThumbOptions extends AriaSliderThumbProps {\n  /** A ref to the track element. */\n  trackRef: RefObject<HTMLElement>,\n  /** A ref to the thumb input element. */\n  inputRef: RefObject<HTMLInputElement>\n}\n\n/**\n * Provides behavior and accessibility for a thumb of a slider component.\n *\n * @param opts Options for this Slider thumb.\n * @param state Slider state, created via `useSliderState`.\n */\nexport function useSliderThumb(\n  opts: SliderThumbOptions,\n  state: SliderState\n): SliderThumbAria {\n  let {\n    index,\n    isRequired,\n    isDisabled,\n    validationState,\n    trackRef,\n    inputRef\n  } = opts;\n\n  let isVertical = opts.orientation === 'vertical';\n\n  let {direction} = useLocale();\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let labelId = sliderIds.get(state);\n  const {labelProps, fieldProps} = useLabel({\n    ...opts,\n    id: getSliderThumbId(state, index),\n    'aria-labelledby': `${labelId} ${opts['aria-labelledby'] ?? ''}`.trim()\n  });\n\n  const value = state.values[index];\n\n  const focusInput = useCallback(() => {\n    if (inputRef.current) {\n      focusWithoutScrolling(inputRef.current);\n    }\n  }, [inputRef]);\n\n  const isFocused = state.focusedThumb === index;\n\n  useEffect(() => {\n    if (isFocused) {\n      focusInput();\n    }\n  }, [isFocused, focusInput]);\n\n  const stateRef = useRef<SliderState>(null);\n  stateRef.current = state;\n  let reverseX = direction === 'rtl';\n  let currentPosition = useRef<number>(null);\n  let {moveProps} = useMove({\n    onMoveStart() {\n      currentPosition.current = null;\n      state.setThumbDragging(index, true);\n    },\n    onMove({deltaX, deltaY, pointerType}) {\n      let size = isVertical ? trackRef.current.offsetHeight : trackRef.current.offsetWidth;\n\n      if (currentPosition.current == null) {\n        currentPosition.current = stateRef.current.getThumbPercent(index) * size;\n      }\n      if (pointerType === 'keyboard') {\n        // (invert left/right according to language direction) + (according to vertical)\n        let delta = ((reverseX ? -deltaX : deltaX) + (isVertical ? -deltaY : -deltaY)) * stateRef.current.step;\n        currentPosition.current += delta * size;\n        stateRef.current.setThumbValue(index, stateRef.current.getThumbValue(index) + delta);\n      } else {\n        let delta = isVertical ? deltaY : deltaX;\n        if (isVertical || reverseX) {\n          delta = -delta;\n        }\n\n        currentPosition.current += delta;\n        stateRef.current.setThumbPercent(index, clamp(currentPosition.current / size, 0, 1));\n      }\n    },\n    onMoveEnd() {\n      state.setThumbDragging(index, false);\n    }\n  });\n\n  // Immediately register editability with the state\n  state.setThumbEditable(index, !isDisabled);\n\n  const {focusableProps} = useFocusable(\n    mergeProps(opts, {\n      onFocus: () => state.setFocusedThumb(index),\n      onBlur: () => state.setFocusedThumb(undefined)\n    }),\n    inputRef\n  );\n\n  let currentPointer = useRef<number | undefined>(undefined);\n  let onDown = (id?: number) => {\n    focusInput();\n    currentPointer.current = id;\n    state.setThumbDragging(index, true);\n\n    addGlobalListener(window, 'mouseup', onUp, false);\n    addGlobalListener(window, 'touchend', onUp, false);\n    addGlobalListener(window, 'pointerup', onUp, false);\n\n  };\n\n  let onUp = (e) => {\n    let id = e.pointerId ?? e.changedTouches?.[0].identifier;\n    if (id === currentPointer.current) {\n      focusInput();\n      state.setThumbDragging(index, false);\n      removeGlobalListener(window, 'mouseup', onUp, false);\n      removeGlobalListener(window, 'touchend', onUp, false);\n      removeGlobalListener(window, 'pointerup', onUp, false);\n    }\n  };\n\n  // We install mouse handlers for the drag motion on the thumb div, but\n  // not the key handler for moving the thumb with the slider.  Instead,\n  // we focus the range input, and let the browser handle the keyboard\n  // interactions; we then listen to input's onChange to update state.\n  return {\n    inputProps: mergeProps(focusableProps, fieldProps, {\n      type: 'range',\n      tabIndex: !isDisabled ? 0 : undefined,\n      min: state.getThumbMinValue(index),\n      max: state.getThumbMaxValue(index),\n      step: state.step,\n      value: value,\n      disabled: isDisabled,\n      'aria-orientation': opts.orientation,\n      'aria-valuetext': state.getThumbValueLabel(index),\n      'aria-required': isRequired || undefined,\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': opts['aria-errormessage'],\n      onChange: (e: ChangeEvent<HTMLInputElement>) => {\n        state.setThumbValue(index, parseFloat(e.target.value));\n      }\n    }),\n    thumbProps: !isDisabled ? mergeProps(\n      moveProps,\n      {\n        onMouseDown: (e: React.MouseEvent<HTMLElement>) => {\n          if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n            return;\n          }\n          onDown();\n        },\n        onPointerDown: (e: React.PointerEvent<HTMLElement>) => {\n          if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n            return;\n          }\n          onDown(e.pointerId);\n        },\n        onTouchStart: (e: React.TouchEvent<HTMLElement>) => {onDown(e.changedTouches[0].identifier);}\n      }\n    ) : {},\n    labelProps\n  };\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","sliderIds","WeakMap","getSliderThumbId","state","index","id","get","Error","useSlider","props","trackRef","labelProps","fieldProps","useLabel","isVertical","orientation","set","direction","useLocale","addGlobalListener","removeGlobalListener","useGlobalListeners","realTimeTrackDraggingIndex","useRef","stateRef","current","reverseX","currentPosition","moveProps","useMove","onMoveStart","onMove","deltaX","deltaY","size","offsetHeight","offsetWidth","getThumbPercent","delta","percent","clamp","setThumbPercent","onMoveEnd","setThumbDragging","currentPointer","undefined","onDownTrack","e","clientX","clientY","isDisabled","values","every","_","i","isThumbDragging","trackPosition","getBoundingClientRect","clickPosition","offset","value","getPercentValue","closestThumb","split","findIndex","v","length","lastLeft","firstRight","Math","abs","isThumbEditable","preventDefault","setFocusedThumb","setThumbValue","window","onUpTrack","pointerId","changedTouches","identifier","htmlFor","onClick","document","getElementById","focus","setInteractionModality","groupProps","role","trackProps","mergeProps","onMouseDown","button","altKey","ctrlKey","metaKey","onPointerDown","pointerType","onTouchStart","outputProps","map","join","useSliderThumb","opts","isRequired","validationState","inputRef","labelId","trim","focusInput","useCallback","focusWithoutScrolling","isFocused","focusedThumb","useEffect","step","getThumbValue","setThumbEditable","focusableProps","useFocusable","onFocus","onBlur","onDown","onUp","inputProps","type","tabIndex","min","getThumbMinValue","max","getThumbMaxValue","disabled","getThumbValueLabel","onChange","parseFloat","target","thumbProps"],"version":3,"file":"main.js.map"}