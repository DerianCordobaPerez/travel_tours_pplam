{"mappings":"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","sources":["./packages/@react-aria/tabs/src/TabsKeyboardDelegate.ts","./packages/@react-aria/tabs/src/useTabs.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Direction, KeyboardDelegate, Orientation} from '@react-types/shared';\nimport {Key} from 'react';\n\nexport class TabsKeyboardDelegate<T> implements KeyboardDelegate {\n  private collection: Collection<T>;\n  private flipDirection: boolean;\n  private disabledKeys: Set<Key>;\n  private orientation: Orientation;\n\n  constructor(collection: Collection<T>, direction: Direction, orientation: Orientation, disabledKeys: Set<Key> = new Set()) {\n    this.collection = collection;\n    this.flipDirection = direction === 'rtl' && orientation === 'horizontal';\n    this.orientation = orientation;\n    this.disabledKeys = disabledKeys;\n  }\n\n  getKeyLeftOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getNextKey(key);\n    } else {\n      if (this.orientation === 'horizontal') {\n        return this.getPreviousKey(key);\n      }\n      return null;\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getPreviousKey(key);\n    } else {\n      if (this.orientation === 'horizontal') {\n        return this.getNextKey(key);\n      }\n      return null;\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    if (this.orientation === 'vertical') {\n      return this.getPreviousKey(key);\n    }\n    return null;\n  }\n\n  getKeyBelow(key: Key) {\n    if (this.orientation === 'vertical') {\n      return this.getNextKey(key);\n    }\n    return null;\n  }\n\n  getFirstKey() {\n    let key = this.collection.getFirstKey();\n    if (this.disabledKeys.has(key)) {\n      key = this.getNextKey(key);\n    }\n    return key;\n  }\n\n  getLastKey() {\n    let key = this.collection.getLastKey();\n    if (this.disabledKeys.has(key)) {\n      key = this.getPreviousKey(key);\n    }\n    return key;\n  }\n\n  getNextKey(key) {\n    do {\n      key = this.collection.getKeyAfter(key);\n      if (key == null) {\n        key = this.collection.getFirstKey();\n      }\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n\n  getPreviousKey(key) {\n    do {\n      key = this.collection.getKeyBefore(key);\n      if (key == null) {\n        key = this.collection.getLastKey();\n      }\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTabProps, AriaTabsProps} from '@react-types/tabs';\nimport {HTMLAttributes, Key, RefObject, useMemo} from 'react';\nimport {mergeProps, useId, useLabels} from '@react-aria/utils';\nimport {SingleSelectListState} from '@react-stately/list';\nimport {TabsKeyboardDelegate} from './TabsKeyboardDelegate';\nimport {TabsState} from '@react-stately/tabs';\nimport {useLocale} from '@react-aria/i18n';\nimport {usePress} from '@react-aria/interactions';\nimport {useSelectableCollection, useSelectableItem} from '@react-aria/selection';\n\ninterface TabsAria {\n  /** Props for the tablist container. */\n  tabListProps: HTMLAttributes<HTMLElement>,\n  /** Props for the associated tabpanel element. */\n  tabPanelProps: HTMLAttributes<HTMLElement>\n}\n\nconst tabsIds = new WeakMap<SingleSelectListState<unknown>, string>();\n\nexport function useTabs<T>(props: AriaTabsProps<T>, state: TabsState<T>, ref): TabsAria {\n  let {\n    orientation = 'horizontal',\n    keyboardActivation = 'automatic'\n  } = props;\n  let {\n    collection,\n    selectionManager: manager,\n    disabledKeys,\n    selectedKey\n  } = state;\n  let {direction} = useLocale();\n  let delegate = useMemo(() => new TabsKeyboardDelegate(\n    collection,\n    direction,\n    orientation,\n    disabledKeys), [collection, disabledKeys, orientation, direction]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    selectOnFocus: keyboardActivation === 'automatic',\n    disallowEmptySelection: true\n  });\n\n  // Compute base id for all tabs\n  let tabsId = useId();\n  tabsIds.set(state, tabsId);\n\n  let tabListLabelProps = useLabels({...props, id: tabsId});\n\n  return {\n    tabListProps: {\n      ...mergeProps(collectionProps, tabListLabelProps),\n      role: 'tablist',\n      'aria-orientation': orientation,\n      tabIndex: undefined\n    },\n    tabPanelProps: {\n      id: generateId(state, selectedKey, 'tabpanel'),\n      'aria-labelledby': generateId(state, selectedKey, 'tab'),\n      tabIndex: 0,\n      role: 'tabpanel'\n    }\n  };\n}\n\ninterface TabAria {\n  /** Props for the tab element. */\n  tabProps: HTMLAttributes<HTMLElement>\n}\n\nexport function useTab<T>(\n  props: AriaTabProps<T>,\n  state: SingleSelectListState<T>,\n  ref: RefObject<HTMLElement>\n): TabAria {\n  let {item, isDisabled: propsDisabled} = props;\n  let {key} = item;\n  let {selectionManager: manager, selectedKey} = state;\n\n  let isSelected = key === selectedKey;\n\n  let {itemProps} = useSelectableItem({\n    selectionManager: manager,\n    key,\n    ref\n  });\n  let isDisabled = propsDisabled || state.disabledKeys.has(key);\n\n  let {pressProps} = usePress({...itemProps, isDisabled});\n  let tabId = generateId(state, key, 'tab');\n  let tabPanelId = generateId(state, key, 'tabpanel');\n  let {tabIndex} = pressProps;\n\n  // selected tab should have tabIndex=0, when it initializes\n  if (isSelected && !isDisabled) {\n    tabIndex = 0;\n  }\n\n  return {\n    tabProps: {\n      ...pressProps,\n      id: tabId,\n      'aria-selected': isSelected,\n      'aria-disabled': isDisabled || undefined,\n      'aria-controls': isSelected ? tabPanelId : undefined,\n      tabIndex: isDisabled ? undefined : tabIndex,\n      role: 'tab'\n    }\n  };\n}\n\nfunction generateId<T>(state: SingleSelectListState<T>, key: Key, role: string) {\n  if (typeof key === 'string') {\n    key = key.replace(/\\s+/g, '');\n  }\n\n  let baseId = tabsIds.get(state);\n  return `${baseId}-${role}-${key}`;\n}\n"],"names":["TabsKeyboardDelegate","constructor","collection","direction","orientation","disabledKeys","Set","flipDirection","getKeyLeftOf","key","getNextKey","getPreviousKey","getKeyRightOf","getKeyAbove","getKeyBelow","getFirstKey","has","getLastKey","getKeyAfter","getKeyBefore","tabsIds","WeakMap","useTabs","props","state","ref","keyboardActivation","selectionManager","manager","selectedKey","useLocale","delegate","useMemo","collectionProps","useSelectableCollection","keyboardDelegate","selectOnFocus","disallowEmptySelection","tabsId","useId","set","tabListLabelProps","useLabels","id","tabListProps","mergeProps","role","tabIndex","undefined","tabPanelProps","generateId","useTab","item","isDisabled","propsDisabled","isSelected","itemProps","useSelectableItem","pressProps","usePress","tabId","tabPanelId","tabProps","replace","baseId","get"],"version":3,"file":"module.js.map"}