var {
  useTextField
} = require("@react-aria/textfield");

var {
  useMessageFormatter
} = require("@react-aria/i18n");

var {
  useMenuTrigger
} = require("@react-aria/menu");

var {
  ListKeyboardDelegate,
  useSelectableCollection
} = require("@react-aria/selection");

var {
  getItemCount
} = require("@react-stately/collections");

var {
  useEffect,
  useMemo,
  useRef
} = require("react");

var {
  chain,
  isAppleDevice,
  mergeProps,
  useLabels
} = require("@react-aria/utils");

var {
  getItemId,
  listData
} = require("@react-aria/listbox");

var {
  ariaHideOutside
} = require("@react-aria/overlays");

var {
  announce
} = require("@react-aria/live-announcer");

var _babelRuntimeHelpersInteropRequireDefault = $parcel$interopDefault(require("@babel/runtime/helpers/interopRequireDefault"));

var _babelRuntimeHelpersExtends = $parcel$interopDefault(require("@babel/runtime/helpers/extends"));

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}

// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/ar-AE.json
var $d3abd1c94a8091e6bea5d25566d34f3b$exports = {};
$d3abd1c94a8091e6bea5d25566d34f3b$exports = JSON.parse("{\"buttonLabel\":\"عرض المقترحات\",\"countAnnouncement\":\"{optionCount, plural, one {# خيار} other {# خيارات}} متاحة.\",\"focusAnnouncement\":\"{isGroupChange, select, true {المجموعة المدخلة {groupTitle}, مع {groupCount, plural, one {# خيار} other {# خيارات}}. } other {}}{optionText}{isSelected, select, true {, محدد} other {}}\",\"listboxLabel\":\"مقترحات\",\"selectedAnnouncement\":\"{optionText}، محدد\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/bg-BG.json
var $e68f714a4c0d09d95c33770e06f8$exports = {};
$e68f714a4c0d09d95c33770e06f8$exports = JSON.parse("{\"buttonLabel\":\"Покажи предложения\",\"countAnnouncement\":\"{optionCount, plural, one {# опция} other {# опции}} на разположение.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Въведена група {groupTitle}, с {groupCount, plural, one {# опция} other {# опции}}. } other {}}{optionText}{isSelected, select, true {, избрани} other {}}\",\"listboxLabel\":\"Предложения\",\"selectedAnnouncement\":\"{optionText}, избрани\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/cs-CZ.json
var $a500a0b3a3619656e27bf5600e433c24$exports = {};
$a500a0b3a3619656e27bf5600e433c24$exports = JSON.parse("{\"buttonLabel\":\"Zobrazit doporučení\",\"countAnnouncement\":\"K dispozici {optionCount, plural, one {je # možnost} other {jsou/je # možnosti/-í}}.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Zadaná skupina „{groupTitle}“ {groupCount, plural, one {s # možností} other {se # možnostmi}}. } other {}}{optionText}{isSelected, select, true { (vybráno)} other {}}\",\"listboxLabel\":\"Návrhy\",\"selectedAnnouncement\":\"{optionText}, vybráno\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/da-DK.json
var $e49da863b7bd600c177b6a36f118$exports = {};
$e49da863b7bd600c177b6a36f118$exports = JSON.parse("{\"buttonLabel\":\"Vis forslag\",\"countAnnouncement\":\"{optionCount, plural, one {# mulighed tilgængelig} other {# muligheder tilgængelige}}.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Angivet gruppe {groupTitle}, med {groupCount, plural, one {# mulighed} other {# muligheder}}. } other {}}{optionText}{isSelected, select, true {, valgt} other {}}\",\"listboxLabel\":\"Forslag\",\"selectedAnnouncement\":\"{optionText}, valgt\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/de-DE.json
var $ee8337d033bc8022023cbd1e81c99e0f$exports = {};
$ee8337d033bc8022023cbd1e81c99e0f$exports = JSON.parse("{\"buttonLabel\":\"Empfehlungen anzeigen\",\"countAnnouncement\":\"{optionCount, plural, one {# Option} other {# Optionen}} verfügbar.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Eingetretene Gruppe {groupTitle}, mit {groupCount, plural, one {# Option} other {# Optionen}}. } other {}}{optionText}{isSelected, select, true {, ausgewählt} other {}}\",\"listboxLabel\":\"Empfehlungen\",\"selectedAnnouncement\":\"{optionText}, ausgewählt\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/el-GR.json
var $b80f3d468ed1c259fafa109ac82f$exports = {};
$b80f3d468ed1c259fafa109ac82f$exports = JSON.parse("{\"buttonLabel\":\"Προβολή προτάσεων\",\"countAnnouncement\":\"{optionCount, plural, one {# επιλογή} other {# επιλογές }} διαθέσιμες.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Εισαγμένη ομάδα {groupTitle}, με {groupCount, plural, one {# επιλογή} other {# επιλογές}}. } other {}}{optionText}{isSelected, select, true {, επιλεγμένο} other {}}\",\"listboxLabel\":\"Προτάσεις\",\"selectedAnnouncement\":\"{optionText}, επιλέχθηκε\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/en-US.json
var $bf7e6d52e99e0a0de8c556ddb07fc5a$exports = {};
$bf7e6d52e99e0a0de8c556ddb07fc5a$exports = JSON.parse("{\"focusAnnouncement\":\"{isGroupChange, select, true {Entered group {groupTitle}, with {groupCount, plural, one {# option} other {# options}}. } other {}}{optionText}{isSelected, select, true {, selected} other {}}\",\"countAnnouncement\":\"{optionCount, plural, one {# option} other {# options}} available.\",\"selectedAnnouncement\":\"{optionText}, selected\",\"buttonLabel\":\"Show suggestions\",\"listboxLabel\":\"Suggestions\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/es-ES.json
var $a10df97a05936d5ade08a757b8203$exports = {};
$a10df97a05936d5ade08a757b8203$exports = JSON.parse("{\"buttonLabel\":\"Mostrar sugerencias\",\"countAnnouncement\":\"{optionCount, plural, one {# opción} other {# opciones}} disponible(s).\",\"focusAnnouncement\":\"{isGroupChange, select, true {Se ha unido al grupo {groupTitle}, con {groupCount, plural, one {# opción} other {# opciones}}. } other {}}{optionText}{isSelected, select, true {, seleccionado} other {}}\",\"listboxLabel\":\"Sugerencias\",\"selectedAnnouncement\":\"{optionText}, seleccionado\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/et-EE.json
var $f3ceb8fdb1d42883b88768afca1419$exports = {};
$f3ceb8fdb1d42883b88768afca1419$exports = JSON.parse("{\"buttonLabel\":\"Kuva soovitused\",\"countAnnouncement\":\"{optionCount, plural, one {# valik} other {# valikud}} saadaval.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Sisestatud rühm {groupTitle}, valikuga {groupCount, plural, one {# valik} other {# valikud}}. } other {}}{optionText}{isSelected, select, true {, valitud} other {}}\",\"listboxLabel\":\"Soovitused\",\"selectedAnnouncement\":\"{optionText}, valitud\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/fi-FI.json
var $f1743c0157b8801e8cb7483c8ad$exports = {};
$f1743c0157b8801e8cb7483c8ad$exports = JSON.parse("{\"buttonLabel\":\"Näytä ehdotukset\",\"countAnnouncement\":\"{optionCount, plural, one {# vaihtoehto} other {# vaihtoehdot}} saatavilla.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Mentiin ryhmään {groupTitle}, {groupCount, plural, one {# vaihtoehdon} other {# vaihtoehdon}} kanssa.} other {}}{optionText}{isSelected, select, true {, valittu} other {}}\",\"listboxLabel\":\"Ehdotukset\",\"selectedAnnouncement\":\"{optionText}, valittu\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/fr-FR.json
var $dc583336acdeed35267661d22$exports = {};
$dc583336acdeed35267661d22$exports = JSON.parse("{\"buttonLabel\":\"Afficher les suggestions\",\"countAnnouncement\":\"{optionCount, plural, one {# option} other {# options}} disponible(s).\",\"focusAnnouncement\":\"{isGroupChange, select, true {Groupe {groupTitle} saisi, avec {groupCount, plural, one {# option} other {# options}}. } other {}}{optionText}{isSelected, select, true {, sélectionné(s)} other {}}\",\"listboxLabel\":\"Suggestions\",\"selectedAnnouncement\":\"{optionText}, sélectionné\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/he-IL.json
var $e8d5cdaf06bc2fff1bfdce0b70eaee1$exports = {};
$e8d5cdaf06bc2fff1bfdce0b70eaee1$exports = JSON.parse("{\"buttonLabel\":\"הצג הצעות\",\"countAnnouncement\":\"{optionCount, plural, one {אפשרות #} other {# אפשרויות}} במצב זמין.\",\"focusAnnouncement\":\"{isGroupChange, select, true {נכנס לקבוצה {groupTitle}, עם {groupCount, plural, one {אפשרות #} other {# אפשרויות}}. } other {}}{optionText}{isSelected, select, true {, נבחר} other {}}\",\"listboxLabel\":\"הצעות\",\"selectedAnnouncement\":\"{optionText}, נבחר\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/hr-HR.json
var $a09462ff6f02eb4bf7658204c3f6e15$exports = {};
$a09462ff6f02eb4bf7658204c3f6e15$exports = JSON.parse("{\"buttonLabel\":\"Prikaži prijedloge\",\"countAnnouncement\":\"Dostupno još: {optionCount, plural, one {# opcija} other {# opcije/a}}.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Unesena skupina {groupTitle}, s {groupCount, plural, one {# opcijom} other {# opcije/a}}. } other {}}{optionText}{isSelected, select, true {, odabranih} other {}}\",\"listboxLabel\":\"Prijedlozi\",\"selectedAnnouncement\":\"{optionText}, odabrano\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/hu-HU.json
var $a51a94bb99ac070324d83d28741ff6a3$exports = {};
$a51a94bb99ac070324d83d28741ff6a3$exports = JSON.parse("{\"buttonLabel\":\"Javaslatok megjelenítése\",\"countAnnouncement\":\"{optionCount, plural, one {# lehetőség} other {# lehetőség}} áll rendelkezésre.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Belépett a(z) {groupTitle} csoportba, amely {groupCount, plural, one {# lehetőséget} other {# lehetőséget}} tartalmaz. } other {}}{optionText}{isSelected, select, true {, kijelölve} other {}}\",\"listboxLabel\":\"Javaslatok\",\"selectedAnnouncement\":\"{optionText}, kijelölve\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/it-IT.json
var $dc21b3c22ee0c88b8141ebe9086768be$exports = {};
$dc21b3c22ee0c88b8141ebe9086768be$exports = JSON.parse("{\"buttonLabel\":\"Mostra suggerimenti\",\"countAnnouncement\":\"{optionCount, plural, one {# opzione disponibile} other {# opzioni disponibili}}.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Ingresso nel gruppo {groupTitle}, con {groupCount, plural, one {# opzione} other {# opzioni}}. } other {}}{optionText}{isSelected, select, true {, selezionato} other {}}\",\"listboxLabel\":\"Suggerimenti\",\"selectedAnnouncement\":\"{optionText}, selezionato\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/ja-JP.json
var $a4da3b639472f5f28d54905e8d8b311$exports = {};
$a4da3b639472f5f28d54905e8d8b311$exports = JSON.parse("{\"buttonLabel\":\"候補を表示\",\"countAnnouncement\":\"{optionCount, plural, one {# 個のオプション} other {# 個のオプション}}を利用できます。\",\"focusAnnouncement\":\"{isGroupChange, select, true {入力されたグループ {groupTitle}、{groupCount, plural, one {# 個のオプション} other {# 個のオプション}}を含む。} other {}}{optionText}{isSelected, select, true {、選択済み} other {}}\",\"listboxLabel\":\"候補\",\"selectedAnnouncement\":\"{optionText}、選択済み\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/ko-KR.json
var $fcdb1200b0b078125505411250b3da8$exports = {};
$fcdb1200b0b078125505411250b3da8$exports = JSON.parse("{\"buttonLabel\":\"제안 사항 표시\",\"countAnnouncement\":\"{optionCount, plural, one {#개 옵션} other {#개 옵션}}을 사용할 수 있습니다.\",\"focusAnnouncement\":\"{isGroupChange, select, true {입력한 그룹 {groupTitle}, {groupCount, plural, one {#개 옵션} other {#개 옵션}}. } other {}}{optionText}{isSelected, select, true {, 선택됨} other {}}\",\"listboxLabel\":\"제안\",\"selectedAnnouncement\":\"{optionText}, 선택됨\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/lt-LT.json
var $ae7d46453e48caf5831bf917e3f7f4$exports = {};
$ae7d46453e48caf5831bf917e3f7f4$exports = JSON.parse("{\"buttonLabel\":\"Rodyti pasiūlymus\",\"countAnnouncement\":\"Yra {optionCount, plural, one {# parinktis} other {# parinktys (-ių)}}.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Įvesta grupė {groupTitle}, su {groupCount, plural, one {# parinktimi} other {# parinktimis (-ių)}}. } other {}}{optionText}{isSelected, select, true {, pasirinkta} other {}}\",\"listboxLabel\":\"Pasiūlymai\",\"selectedAnnouncement\":\"{optionText}, pasirinkta\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/lv-LV.json
var $d008ca76e03db31d004b0e4f3f5574a$exports = {};
$d008ca76e03db31d004b0e4f3f5574a$exports = JSON.parse("{\"buttonLabel\":\"Rādīt ieteikumus\",\"countAnnouncement\":\"Pieejamo opciju skaits: {optionCount, plural, one {# opcija} other {# opcijas}}.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Ievadīta grupa {groupTitle}, ar {groupCount, plural, one {# opciju} other {# opcijām}}. } other {}}{optionText}{isSelected, select, true {, atlasīta} other {}}\",\"listboxLabel\":\"Ieteikumi\",\"selectedAnnouncement\":\"{optionText}, atlasīta\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/nb-NO.json
var $dcaa72b3e8623f0d734c2b2e58a$exports = {};
$dcaa72b3e8623f0d734c2b2e58a$exports = JSON.parse("{\"buttonLabel\":\"Vis forslag\",\"countAnnouncement\":\"{optionCount, plural, one {# alternativ} other {# alternativer}} finnes.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Angitt gruppe {groupTitle}, med {groupCount, plural, one {# alternativ} other {# alternativer}}. } other {}}{optionText}{isSelected, select, true {, valgt} other {}}\",\"listboxLabel\":\"Forslag\",\"selectedAnnouncement\":\"{optionText}, valgt\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/nl-NL.json
var $a7a8fb75c57944677d9c6bf80bbe$exports = {};
$a7a8fb75c57944677d9c6bf80bbe$exports = JSON.parse("{\"buttonLabel\":\"Suggesties weergeven\",\"countAnnouncement\":\"{optionCount, plural, one {# optie} other {# opties}} beschikbaar.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Groep {groupTitle} ingevoerd met {groupCount, plural, one {# optie} other {# opties}}. } other {}}{optionText}{isSelected, select, true {, geselecteerd} other {}}\",\"listboxLabel\":\"Suggesties\",\"selectedAnnouncement\":\"{optionText}, geselecteerd\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/pl-PL.json
var $ed7527596f583bb2411b6e63181c828$exports = {};
$ed7527596f583bb2411b6e63181c828$exports = JSON.parse("{\"buttonLabel\":\"Wyświetlaj sugestie\",\"countAnnouncement\":\"dostępna/dostępne(-nych) {optionCount, plural, one {# opcja} other {# opcje(-i)}}.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Dołączono do grupy {groupTitle}, z {groupCount, plural, one {# opcją} other {# opcjami}}. } other {}}{optionText}{isSelected, select, true {, wybrano} other {}}\",\"listboxLabel\":\"Sugestie\",\"selectedAnnouncement\":\"{optionText}, wybrano\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/pt-BR.json
var $df7ce3597cba6c589fe1547e9398a1$exports = {};
$df7ce3597cba6c589fe1547e9398a1$exports = JSON.parse("{\"buttonLabel\":\"Mostrar sugestões\",\"countAnnouncement\":\"{optionCount, plural, one {# opção} other {# opções}} disponível.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Grupo inserido {groupTitle}, com {groupCount, plural, one {# opção} other {# opções}}. } other {}}{optionText}{isSelected, select, true {, selecionado} other {}}\",\"listboxLabel\":\"Sugestões\",\"selectedAnnouncement\":\"{optionText}, selecionado\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/pt-PT.json
var $af7a1745d38e51c65b0133f60a0$exports = {};
$af7a1745d38e51c65b0133f60a0$exports = JSON.parse("{\"buttonLabel\":\"Apresentar sugestões\",\"countAnnouncement\":\"{optionCount, plural, one {# opção} other {# opções}} disponível.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Grupo introduzido {groupTitle}, com {groupCount, plural, one {# opção} other {# opções}}. } other {}}{optionText}{isSelected, select, true {, selecionado} other {}}\",\"listboxLabel\":\"Sugestões\",\"selectedAnnouncement\":\"{optionText}, selecionado\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/ro-RO.json
var $a05b7681dd40a3dd5d6e247465fb2$exports = {};
$a05b7681dd40a3dd5d6e247465fb2$exports = JSON.parse("{\"buttonLabel\":\"Afișare sugestii\",\"countAnnouncement\":\"{optionCount, plural, one {# opțiune} other {# opțiuni}} disponibile.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Grup {groupTitle} introdus, cu {groupCount, plural, one {# opțiune} other {# opțiuni}}. } other {}}{optionText}{isSelected, select, true {, selectat} other {}}\",\"listboxLabel\":\"Sugestii\",\"selectedAnnouncement\":\"{optionText}, selectat\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/ru-RU.json
var $a3e6ad485d388d34644c7738b17894$exports = {};
$a3e6ad485d388d34644c7738b17894$exports = JSON.parse("{\"buttonLabel\":\"Показать предложения\",\"countAnnouncement\":\"{optionCount, plural, one {# параметр} other {# параметров}} доступно.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Введенная группа {groupTitle}, с {groupCount, plural, one {# параметром} other {# параметрами}}. } other {}}{optionText}{isSelected, select, true {, выбранными} other {}}\",\"listboxLabel\":\"Предложения\",\"selectedAnnouncement\":\"{optionText}, выбрано\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/sk-SK.json
var $e0b1ab042642593eb7294132e50b46b$exports = {};
$e0b1ab042642593eb7294132e50b46b$exports = JSON.parse("{\"buttonLabel\":\"Zobraziť návrhy\",\"countAnnouncement\":\"{optionCount, plural, one {# možnosť} other {# možnosti/-í}} k dispozícii.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Zadaná skupina {groupTitle}, s {groupCount, plural, one {# možnosťou} other {# možnosťami}}. } other {}}{optionText}{isSelected, select, true {, vybraté} other {}}\",\"listboxLabel\":\"Návrhy\",\"selectedAnnouncement\":\"{optionText}, vybraté\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/sl-SI.json
var $bf5ec183b7bd0eecdc06625a9a73fa9d$exports = {};
$bf5ec183b7bd0eecdc06625a9a73fa9d$exports = JSON.parse("{\"buttonLabel\":\"Prikaži predloge\",\"countAnnouncement\":\"Na voljo je {optionCount, plural, one {# opcija} other {# opcije}}.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Vnesena skupina {groupTitle}, z {groupCount, plural, one {# opcija} other {# opcije}}. } other {}}{optionText}{isSelected, select, true {, izbrano} other {}}\",\"listboxLabel\":\"Predlogi\",\"selectedAnnouncement\":\"{optionText}, izbrano\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/sr-SP.json
var $aa293a3771d0b4cc15832591bc00b93d$exports = {};
$aa293a3771d0b4cc15832591bc00b93d$exports = JSON.parse("{\"buttonLabel\":\"Prikaži predloge\",\"countAnnouncement\":\"Dostupno još: {optionCount, plural, one {# opcija} other {# opcije/a}}.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Unesena grupa {groupTitle}, s {groupCount, plural, one {# opcijom} other {# optione/a}}. } other {}}{optionText}{isSelected, select, true {, izabranih} other {}}\",\"listboxLabel\":\"Predlozi\",\"selectedAnnouncement\":\"{optionText}, izabrano\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/sv-SE.json
var $d15eef346cfbe2e9dc1d93abc4c6e5a$exports = {};
$d15eef346cfbe2e9dc1d93abc4c6e5a$exports = JSON.parse("{\"buttonLabel\":\"Visa förslag\",\"countAnnouncement\":\"{optionCount, plural, one {# alternativ} other {# alternativ}} tillgängliga.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Ingick i gruppen {groupTitle} med {groupCount, plural, one {# alternativ} other {# alternativ}}. } other {}}{optionText}{isSelected, select, true {, valda} other {}}\",\"listboxLabel\":\"Förslag\",\"selectedAnnouncement\":\"{optionText}, valda\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/tr-TR.json
var $d70b2a82645d0b4b2c9cef7d29890$exports = {};
$d70b2a82645d0b4b2c9cef7d29890$exports = JSON.parse("{\"buttonLabel\":\"Önerileri göster\",\"countAnnouncement\":\"{optionCount, plural, one {# seçenek} other {# seçenekler}} kullanılabilir.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Girilen grup {groupTitle}, ile {groupCount, plural, one {# seçenek} other {# seçenekler}}. } other {}}{optionText}{isSelected, select, true {, seçildi} other {}}\",\"listboxLabel\":\"Öneriler\",\"selectedAnnouncement\":\"{optionText}, seçildi\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/uk-UA.json
var $ab1fe27a4f39549d797837c26e78fd16$exports = {};
$ab1fe27a4f39549d797837c26e78fd16$exports = JSON.parse("{\"buttonLabel\":\"Показати пропозиції\",\"countAnnouncement\":\"{optionCount, plural, one {# параметр} other {# параметри(-ів)}} доступно.\",\"focusAnnouncement\":\"{isGroupChange, select, true {Введена група {groupTitle}, з {groupCount, plural, one {# параметр} other {# параметри(-ів)}}. } other {}}{optionText}{isSelected, select, true {, вибрано} other {}}\",\"listboxLabel\":\"Пропозиції\",\"selectedAnnouncement\":\"{optionText}, вибрано\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/zh-CN.json
var $fe62c244e0490ab4a42af68a4b80$exports = {};
$fe62c244e0490ab4a42af68a4b80$exports = JSON.parse("{\"buttonLabel\":\"显示建议\",\"countAnnouncement\":\"有 {optionCount, plural, one {# 个选项} other {# 个选项}}可用。\",\"focusAnnouncement\":\"{isGroupChange, select, true {进入了 {groupTitle} 组，其中有 {groupCount, plural, one {# 个选项} other {# 个选项}}. } other {}}{optionText}{isSelected, select, true {, 已选择} other {}}\",\"listboxLabel\":\"建议\",\"selectedAnnouncement\":\"{optionText}, 已选择\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/combobox/intl/zh-TW.json
var $fa0b480f785921c54bbc13041b14dc$exports = {};
$fa0b480f785921c54bbc13041b14dc$exports = JSON.parse("{\"buttonLabel\":\"顯示建議\",\"countAnnouncement\":\"{optionCount, plural, one {# 選項} other {# 選項}} 可用。\",\"focusAnnouncement\":\"{isGroupChange, select, true {輸入的群組 {groupTitle}, 有 {groupCount, plural, one {# 選項} other {# 選項}}. } other {}}{optionText}{isSelected, select, true {, 已選取} other {}}\",\"listboxLabel\":\"建議\",\"selectedAnnouncement\":\"{optionText}, 已選取\"}");
// @ts-ignore
const $fa71f27c5feed757eb58cfe0179b$var$intlMessages = {
  "ar-AE": _babelRuntimeHelpersInteropRequireDefault($d3abd1c94a8091e6bea5d25566d34f3b$exports).default,
  "bg-BG": _babelRuntimeHelpersInteropRequireDefault($e68f714a4c0d09d95c33770e06f8$exports).default,
  "cs-CZ": _babelRuntimeHelpersInteropRequireDefault($a500a0b3a3619656e27bf5600e433c24$exports).default,
  "da-DK": _babelRuntimeHelpersInteropRequireDefault($e49da863b7bd600c177b6a36f118$exports).default,
  "de-DE": _babelRuntimeHelpersInteropRequireDefault($ee8337d033bc8022023cbd1e81c99e0f$exports).default,
  "el-GR": _babelRuntimeHelpersInteropRequireDefault($b80f3d468ed1c259fafa109ac82f$exports).default,
  "en-US": _babelRuntimeHelpersInteropRequireDefault($bf7e6d52e99e0a0de8c556ddb07fc5a$exports).default,
  "es-ES": _babelRuntimeHelpersInteropRequireDefault($a10df97a05936d5ade08a757b8203$exports).default,
  "et-EE": _babelRuntimeHelpersInteropRequireDefault($f3ceb8fdb1d42883b88768afca1419$exports).default,
  "fi-FI": _babelRuntimeHelpersInteropRequireDefault($f1743c0157b8801e8cb7483c8ad$exports).default,
  "fr-FR": _babelRuntimeHelpersInteropRequireDefault($dc583336acdeed35267661d22$exports).default,
  "he-IL": _babelRuntimeHelpersInteropRequireDefault($e8d5cdaf06bc2fff1bfdce0b70eaee1$exports).default,
  "hr-HR": _babelRuntimeHelpersInteropRequireDefault($a09462ff6f02eb4bf7658204c3f6e15$exports).default,
  "hu-HU": _babelRuntimeHelpersInteropRequireDefault($a51a94bb99ac070324d83d28741ff6a3$exports).default,
  "it-IT": _babelRuntimeHelpersInteropRequireDefault($dc21b3c22ee0c88b8141ebe9086768be$exports).default,
  "ja-JP": _babelRuntimeHelpersInteropRequireDefault($a4da3b639472f5f28d54905e8d8b311$exports).default,
  "ko-KR": _babelRuntimeHelpersInteropRequireDefault($fcdb1200b0b078125505411250b3da8$exports).default,
  "lt-LT": _babelRuntimeHelpersInteropRequireDefault($ae7d46453e48caf5831bf917e3f7f4$exports).default,
  "lv-LV": _babelRuntimeHelpersInteropRequireDefault($d008ca76e03db31d004b0e4f3f5574a$exports).default,
  "nb-NO": _babelRuntimeHelpersInteropRequireDefault($dcaa72b3e8623f0d734c2b2e58a$exports).default,
  "nl-NL": _babelRuntimeHelpersInteropRequireDefault($a7a8fb75c57944677d9c6bf80bbe$exports).default,
  "pl-PL": _babelRuntimeHelpersInteropRequireDefault($ed7527596f583bb2411b6e63181c828$exports).default,
  "pt-BR": _babelRuntimeHelpersInteropRequireDefault($df7ce3597cba6c589fe1547e9398a1$exports).default,
  "pt-PT": _babelRuntimeHelpersInteropRequireDefault($af7a1745d38e51c65b0133f60a0$exports).default,
  "ro-RO": _babelRuntimeHelpersInteropRequireDefault($a05b7681dd40a3dd5d6e247465fb2$exports).default,
  "ru-RU": _babelRuntimeHelpersInteropRequireDefault($a3e6ad485d388d34644c7738b17894$exports).default,
  "sk-SK": _babelRuntimeHelpersInteropRequireDefault($e0b1ab042642593eb7294132e50b46b$exports).default,
  "sl-SI": _babelRuntimeHelpersInteropRequireDefault($bf5ec183b7bd0eecdc06625a9a73fa9d$exports).default,
  "sr-SP": _babelRuntimeHelpersInteropRequireDefault($aa293a3771d0b4cc15832591bc00b93d$exports).default,
  "sv-SE": _babelRuntimeHelpersInteropRequireDefault($d15eef346cfbe2e9dc1d93abc4c6e5a$exports).default,
  "tr-TR": _babelRuntimeHelpersInteropRequireDefault($d70b2a82645d0b4b2c9cef7d29890$exports).default,
  "uk-UA": _babelRuntimeHelpersInteropRequireDefault($ab1fe27a4f39549d797837c26e78fd16$exports).default,
  "zh-CN": _babelRuntimeHelpersInteropRequireDefault($fe62c244e0490ab4a42af68a4b80$exports).default,
  "zh-TW": _babelRuntimeHelpersInteropRequireDefault($fa0b480f785921c54bbc13041b14dc$exports).default
};

/**
 * Provides the behavior and accessibility implementation for a combo box component.
 * A combo box combines a text input with a listbox, allowing users to filter a list of options to items matching a query.
 * @param props - Props for the combo box.
 * @param state - State for the select, as returned by `useComboBoxState`.
 */
function useComboBox(props, state) {
  var _focusedItem$parentKe, _state$selectionManag;

  let {
    buttonRef,
    popoverRef,
    inputRef,
    listBoxRef,
    keyboardDelegate,
    // completionMode = 'suggest',
    isReadOnly,
    isDisabled
  } = props;
  let formatMessage = useMessageFormatter($fa71f27c5feed757eb58cfe0179b$var$intlMessages);
  let {
    menuTriggerProps,
    menuProps
  } = useMenuTrigger({
    type: 'listbox'
  }, state, buttonRef); // Set listbox id so it can be used when calling getItemId later

  listData.set(state, {
    id: menuProps.id
  }); // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).
  // When virtualized, the layout object will be passed in as a prop and override this.

  let delegate = useMemo(() => keyboardDelegate || new ListKeyboardDelegate(state.collection, state.disabledKeys, listBoxRef), [keyboardDelegate, state.collection, state.disabledKeys, listBoxRef]); // Use useSelectableCollection to get the keyboard handlers to apply to the textfield

  let {
    collectionProps
  } = useSelectableCollection({
    selectionManager: state.selectionManager,
    keyboardDelegate: delegate,
    disallowTypeAhead: true,
    disallowEmptySelection: true,
    ref: inputRef
  }); // For textfield specific keydown operations

  let onKeyDown = e => {
    switch (e.key) {
      case 'Enter':
      case 'Tab':
        // Prevent form submission if menu is open since we may be selecting a option
        if (state.isOpen && e.key === 'Enter') {
          e.preventDefault();
        }

        state.commit();
        break;

      case 'Escape':
        state.revert();
        break;

      case 'ArrowDown':
        state.open('first', 'manual');
        break;

      case 'ArrowUp':
        state.open('last', 'manual');
        break;

      case 'ArrowLeft':
      case 'ArrowRight':
        state.selectionManager.setFocusedKey(null);
        break;
    }
  };

  let onBlur = e => {
    var _popoverRef$current;

    // Ignore blur if focused moved to the button or into the popover.
    if (e.relatedTarget === (buttonRef == null ? void 0 : buttonRef.current) || (_popoverRef$current = popoverRef.current) != null && _popoverRef$current.contains(e.relatedTarget)) {
      return;
    }

    if (props.onBlur) {
      props.onBlur(e);
    }

    state.setFocused(false);
  };

  let onFocus = e => {
    if (state.isFocused) {
      return;
    }

    if (props.onFocus) {
      props.onFocus(e);
    }

    state.setFocused(true);
  };

  let {
    labelProps,
    inputProps
  } = useTextField(_babelRuntimeHelpersExtends({}, props, {
    onChange: state.setInputValue,
    onKeyDown: !isReadOnly && chain(state.isOpen && collectionProps.onKeyDown, onKeyDown),
    onBlur,
    value: state.inputValue,
    onFocus,
    autoComplete: 'off'
  }), inputRef); // Press handlers for the ComboBox button

  let onPress = e => {
    if (e.pointerType === 'touch') {
      // Focus the input field in case it isn't focused yet
      inputRef.current.focus();
      state.toggle(null, 'manual');
    }
  };

  let onPressStart = e => {
    if (e.pointerType !== 'touch') {
      inputRef.current.focus();
      state.toggle(e.pointerType === 'keyboard' || e.pointerType === 'virtual' ? 'first' : null, 'manual');
    }
  };

  let triggerLabelProps = useLabels({
    id: menuTriggerProps.id,
    'aria-label': formatMessage('buttonLabel'),
    'aria-labelledby': props['aria-labelledby'] || labelProps.id
  });
  let listBoxProps = useLabels({
    id: menuProps.id,
    'aria-label': formatMessage('listboxLabel'),
    'aria-labelledby': props['aria-labelledby'] || labelProps.id
  }); // If a touch happens on direct center of ComboBox input, might be virtual click from iPad so open ComboBox menu

  let lastEventTime = useRef(0);

  let onTouchEnd = e => {
    if (isDisabled || isReadOnly) {
      return;
    } // Sometimes VoiceOver on iOS fires two touchend events in quick succession. Ignore the second one.


    if (e.timeStamp - lastEventTime.current < 500) {
      e.preventDefault();
      inputRef.current.focus();
      return;
    }

    let rect = e.target.getBoundingClientRect();
    let touch = e.changedTouches[0];
    let centerX = Math.ceil(rect.left + .5 * rect.width);
    let centerY = Math.ceil(rect.top + .5 * rect.height);

    if (touch.clientX === centerX && touch.clientY === centerY) {
      e.preventDefault();
      inputRef.current.focus();
      state.toggle(null, 'manual');
      lastEventTime.current = e.timeStamp;
    }
  }; // VoiceOver has issues with announcing aria-activedescendant properly on change
  // (especially on iOS). We use a live region announcer to announce focus changes
  // manually. In addition, section titles are announced when navigating into a new section.


  let focusedItem = state.selectionManager.focusedKey != null && state.isOpen ? state.collection.getItem(state.selectionManager.focusedKey) : undefined;
  let sectionKey = (_focusedItem$parentKe = focusedItem == null ? void 0 : focusedItem.parentKey) != null ? _focusedItem$parentKe : null;
  let itemKey = (_state$selectionManag = state.selectionManager.focusedKey) != null ? _state$selectionManag : null;
  let lastSection = useRef(sectionKey);
  let lastItem = useRef(itemKey);
  useEffect(() => {
    if (isAppleDevice() && focusedItem != null && itemKey !== lastItem.current) {
      let isSelected = state.selectionManager.isSelected(itemKey);
      let section = sectionKey != null ? state.collection.getItem(sectionKey) : null;
      let sectionTitle = (section == null ? void 0 : section['aria-label']) || (typeof (section == null ? void 0 : section.rendered) === 'string' ? section.rendered : '') || '';
      let announcement = formatMessage('focusAnnouncement', {
        isGroupChange: section && sectionKey !== lastSection.current,
        groupTitle: sectionTitle,
        groupCount: section ? [...section.childNodes].length : 0,
        optionText: focusedItem['aria-label'] || focusedItem.textValue || '',
        isSelected
      });
      announce(announcement);
    }

    lastSection.current = sectionKey;
    lastItem.current = itemKey;
  }); // Announce the number of available suggestions when it changes

  let optionCount = getItemCount(state.collection);
  let lastSize = useRef(optionCount);
  let lastOpen = useRef(state.isOpen);
  useEffect(() => {
    // Only announce the number of options available when the menu opens if there is no
    // focused item, otherwise screen readers will typically read e.g. "1 of 6".
    // The exception is VoiceOver since this isn't included in the message above.
    let didOpenWithoutFocusedItem = state.isOpen !== lastOpen.current && (state.selectionManager.focusedKey == null || isAppleDevice());

    if (state.isOpen && (didOpenWithoutFocusedItem || optionCount !== lastSize.current)) {
      let announcement = formatMessage('countAnnouncement', {
        optionCount
      });
      announce(announcement);
    }

    lastSize.current = optionCount;
    lastOpen.current = state.isOpen;
  }); // Announce when a selection occurs for VoiceOver. Other screen readers typically do this automatically.

  let lastSelectedKey = useRef(state.selectedKey);
  useEffect(() => {
    if (isAppleDevice() && state.isFocused && state.selectedItem && state.selectedKey !== lastSelectedKey.current) {
      let optionText = state.selectedItem['aria-label'] || state.selectedItem.textValue || '';
      let announcement = formatMessage('selectedAnnouncement', {
        optionText
      });
      announce(announcement);
    }

    lastSelectedKey.current = state.selectedKey;
  });
  useEffect(() => {
    if (state.isOpen) {
      return ariaHideOutside([inputRef.current, popoverRef.current]);
    }
  }, [state.isOpen, inputRef, popoverRef]);
  return {
    labelProps,
    buttonProps: _babelRuntimeHelpersExtends({}, menuTriggerProps, triggerLabelProps, {
      excludeFromTabOrder: true,
      onPress,
      onPressStart
    }),
    inputProps: mergeProps(inputProps, {
      role: 'combobox',
      'aria-expanded': menuTriggerProps['aria-expanded'],
      'aria-controls': state.isOpen ? menuProps.id : undefined,
      // TODO: readd proper logic for completionMode = complete (aria-autocomplete: both)
      'aria-autocomplete': 'list',
      'aria-activedescendant': focusedItem ? getItemId(state, focusedItem.key) : undefined,
      onTouchEnd,
      // This disable's iOS's autocorrect suggestions, since the combo box provides its own suggestions.
      autoCorrect: 'off',
      // This disable's the macOS Safari spell check auto corrections.
      spellCheck: 'false'
    }),
    listBoxProps: mergeProps(menuProps, listBoxProps, {
      autoFocus: state.focusStrategy,
      shouldUseVirtualFocus: true,
      shouldSelectOnPressUp: true,
      shouldFocusOnHover: true
    })
  };
}

exports.useComboBox = useComboBox;
//# sourceMappingURL=main.js.map
