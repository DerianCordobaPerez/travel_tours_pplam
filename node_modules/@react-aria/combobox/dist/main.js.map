{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-aria/combobox/intl/ar-AE.json","./packages/@react-aria/combobox/intl/bg-BG.json","./packages/@react-aria/combobox/intl/cs-CZ.json","./packages/@react-aria/combobox/intl/da-DK.json","./packages/@react-aria/combobox/intl/de-DE.json","./packages/@react-aria/combobox/intl/el-GR.json","./packages/@react-aria/combobox/intl/en-US.json","./packages/@react-aria/combobox/intl/es-ES.json","./packages/@react-aria/combobox/intl/et-EE.json","./packages/@react-aria/combobox/intl/fi-FI.json","./packages/@react-aria/combobox/intl/fr-FR.json","./packages/@react-aria/combobox/intl/he-IL.json","./packages/@react-aria/combobox/intl/hr-HR.json","./packages/@react-aria/combobox/intl/hu-HU.json","./packages/@react-aria/combobox/intl/it-IT.json","./packages/@react-aria/combobox/intl/ja-JP.json","./packages/@react-aria/combobox/intl/ko-KR.json","./packages/@react-aria/combobox/intl/lt-LT.json","./packages/@react-aria/combobox/intl/lv-LV.json","./packages/@react-aria/combobox/intl/nb-NO.json","./packages/@react-aria/combobox/intl/nl-NL.json","./packages/@react-aria/combobox/intl/pl-PL.json","./packages/@react-aria/combobox/intl/pt-BR.json","./packages/@react-aria/combobox/intl/pt-PT.json","./packages/@react-aria/combobox/intl/ro-RO.json","./packages/@react-aria/combobox/intl/ru-RU.json","./packages/@react-aria/combobox/intl/sk-SK.json","./packages/@react-aria/combobox/intl/sl-SI.json","./packages/@react-aria/combobox/intl/sr-SP.json","./packages/@react-aria/combobox/intl/sv-SE.json","./packages/@react-aria/combobox/intl/tr-TR.json","./packages/@react-aria/combobox/intl/uk-UA.json","./packages/@react-aria/combobox/intl/zh-CN.json","./packages/@react-aria/combobox/intl/zh-TW.json","./packages/@react-aria/combobox/src/useComboBox.ts"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","{\n  \"buttonLabel\": \"عرض المقترحات\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# خيار} other {# خيارات}} متاحة.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {المجموعة المدخلة {groupTitle}, مع {groupCount, plural, one {# خيار} other {# خيارات}}. } other {}}{optionText}{isSelected, select, true {, محدد} other {}}\",\n  \"listboxLabel\": \"مقترحات\",\n  \"selectedAnnouncement\": \"{optionText}، محدد\"\n}\n","{\n  \"buttonLabel\": \"Покажи предложения\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# опция} other {# опции}} на разположение.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Въведена група {groupTitle}, с {groupCount, plural, one {# опция} other {# опции}}. } other {}}{optionText}{isSelected, select, true {, избрани} other {}}\",\n  \"listboxLabel\": \"Предложения\",\n  \"selectedAnnouncement\": \"{optionText}, избрани\"\n}\n","{\n  \"buttonLabel\": \"Zobrazit doporučení\",\n  \"countAnnouncement\": \"K dispozici {optionCount, plural, one {je # možnost} other {jsou/je # možnosti/-í}}.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Zadaná skupina „{groupTitle}“ {groupCount, plural, one {s # možností} other {se # možnostmi}}. } other {}}{optionText}{isSelected, select, true { (vybráno)} other {}}\",\n  \"listboxLabel\": \"Návrhy\",\n  \"selectedAnnouncement\": \"{optionText}, vybráno\"\n}\n","{\n  \"buttonLabel\": \"Vis forslag\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# mulighed tilgængelig} other {# muligheder tilgængelige}}.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Angivet gruppe {groupTitle}, med {groupCount, plural, one {# mulighed} other {# muligheder}}. } other {}}{optionText}{isSelected, select, true {, valgt} other {}}\",\n  \"listboxLabel\": \"Forslag\",\n  \"selectedAnnouncement\": \"{optionText}, valgt\"\n}\n","{\n  \"buttonLabel\": \"Empfehlungen anzeigen\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# Option} other {# Optionen}} verfügbar.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Eingetretene Gruppe {groupTitle}, mit {groupCount, plural, one {# Option} other {# Optionen}}. } other {}}{optionText}{isSelected, select, true {, ausgewählt} other {}}\",\n  \"listboxLabel\": \"Empfehlungen\",\n  \"selectedAnnouncement\": \"{optionText}, ausgewählt\"\n}\n","{\n  \"buttonLabel\": \"Προβολή προτάσεων\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# επιλογή} other {# επιλογές }} διαθέσιμες.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Εισαγμένη ομάδα {groupTitle}, με {groupCount, plural, one {# επιλογή} other {# επιλογές}}. } other {}}{optionText}{isSelected, select, true {, επιλεγμένο} other {}}\",\n  \"listboxLabel\": \"Προτάσεις\",\n  \"selectedAnnouncement\": \"{optionText}, επιλέχθηκε\"\n}\n","{\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Entered group {groupTitle}, with {groupCount, plural, one {# option} other {# options}}. } other {}}{optionText}{isSelected, select, true {, selected} other {}}\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# option} other {# options}} available.\",\n  \"selectedAnnouncement\": \"{optionText}, selected\",\n  \"buttonLabel\": \"Show suggestions\",\n  \"listboxLabel\": \"Suggestions\"\n}\n","{\n  \"buttonLabel\": \"Mostrar sugerencias\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# opción} other {# opciones}} disponible(s).\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Se ha unido al grupo {groupTitle}, con {groupCount, plural, one {# opción} other {# opciones}}. } other {}}{optionText}{isSelected, select, true {, seleccionado} other {}}\",\n  \"listboxLabel\": \"Sugerencias\",\n  \"selectedAnnouncement\": \"{optionText}, seleccionado\"\n}\n","{\n  \"buttonLabel\": \"Kuva soovitused\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# valik} other {# valikud}} saadaval.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Sisestatud rühm {groupTitle}, valikuga {groupCount, plural, one {# valik} other {# valikud}}. } other {}}{optionText}{isSelected, select, true {, valitud} other {}}\",\n  \"listboxLabel\": \"Soovitused\",\n  \"selectedAnnouncement\": \"{optionText}, valitud\"\n}\n","{\n  \"buttonLabel\": \"Näytä ehdotukset\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# vaihtoehto} other {# vaihtoehdot}} saatavilla.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Mentiin ryhmään {groupTitle}, {groupCount, plural, one {# vaihtoehdon} other {# vaihtoehdon}} kanssa.} other {}}{optionText}{isSelected, select, true {, valittu} other {}}\",\n  \"listboxLabel\": \"Ehdotukset\",\n  \"selectedAnnouncement\": \"{optionText}, valittu\"\n}\n","{\n  \"buttonLabel\": \"Afficher les suggestions\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# option} other {# options}} disponible(s).\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Groupe {groupTitle} saisi, avec {groupCount, plural, one {# option} other {# options}}. } other {}}{optionText}{isSelected, select, true {, sélectionné(s)} other {}}\",\n  \"listboxLabel\": \"Suggestions\",\n  \"selectedAnnouncement\": \"{optionText}, sélectionné\"\n}\n","{\n  \"buttonLabel\": \"הצג הצעות\",\n  \"countAnnouncement\": \"{optionCount, plural, one {אפשרות #} other {# אפשרויות}} במצב זמין.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {נכנס לקבוצה {groupTitle}, עם {groupCount, plural, one {אפשרות #} other {# אפשרויות}}. } other {}}{optionText}{isSelected, select, true {, נבחר} other {}}\",\n  \"listboxLabel\": \"הצעות\",\n  \"selectedAnnouncement\": \"{optionText}, נבחר\"\n}\n","{\n  \"buttonLabel\": \"Prikaži prijedloge\",\n  \"countAnnouncement\": \"Dostupno još: {optionCount, plural, one {# opcija} other {# opcije/a}}.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Unesena skupina {groupTitle}, s {groupCount, plural, one {# opcijom} other {# opcije/a}}. } other {}}{optionText}{isSelected, select, true {, odabranih} other {}}\",\n  \"listboxLabel\": \"Prijedlozi\",\n  \"selectedAnnouncement\": \"{optionText}, odabrano\"\n}\n","{\n  \"buttonLabel\": \"Javaslatok megjelenítése\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# lehetőség} other {# lehetőség}} áll rendelkezésre.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Belépett a(z) {groupTitle} csoportba, amely {groupCount, plural, one {# lehetőséget} other {# lehetőséget}} tartalmaz. } other {}}{optionText}{isSelected, select, true {, kijelölve} other {}}\",\n  \"listboxLabel\": \"Javaslatok\",\n  \"selectedAnnouncement\": \"{optionText}, kijelölve\"\n}\n","{\n  \"buttonLabel\": \"Mostra suggerimenti\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# opzione disponibile} other {# opzioni disponibili}}.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Ingresso nel gruppo {groupTitle}, con {groupCount, plural, one {# opzione} other {# opzioni}}. } other {}}{optionText}{isSelected, select, true {, selezionato} other {}}\",\n  \"listboxLabel\": \"Suggerimenti\",\n  \"selectedAnnouncement\": \"{optionText}, selezionato\"\n}\n","{\n  \"buttonLabel\": \"候補を表示\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# 個のオプション} other {# 個のオプション}}を利用できます。\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {入力されたグループ {groupTitle}、{groupCount, plural, one {# 個のオプション} other {# 個のオプション}}を含む。} other {}}{optionText}{isSelected, select, true {、選択済み} other {}}\",\n  \"listboxLabel\": \"候補\",\n  \"selectedAnnouncement\": \"{optionText}、選択済み\"\n}\n","{\n  \"buttonLabel\": \"제안 사항 표시\",\n  \"countAnnouncement\": \"{optionCount, plural, one {#개 옵션} other {#개 옵션}}을 사용할 수 있습니다.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {입력한 그룹 {groupTitle}, {groupCount, plural, one {#개 옵션} other {#개 옵션}}. } other {}}{optionText}{isSelected, select, true {, 선택됨} other {}}\",\n  \"listboxLabel\": \"제안\",\n  \"selectedAnnouncement\": \"{optionText}, 선택됨\"\n}\n","{\n  \"buttonLabel\": \"Rodyti pasiūlymus\",\n  \"countAnnouncement\": \"Yra {optionCount, plural, one {# parinktis} other {# parinktys (-ių)}}.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Įvesta grupė {groupTitle}, su {groupCount, plural, one {# parinktimi} other {# parinktimis (-ių)}}. } other {}}{optionText}{isSelected, select, true {, pasirinkta} other {}}\",\n  \"listboxLabel\": \"Pasiūlymai\",\n  \"selectedAnnouncement\": \"{optionText}, pasirinkta\"\n}\n","{\n  \"buttonLabel\": \"Rādīt ieteikumus\",\n  \"countAnnouncement\": \"Pieejamo opciju skaits: {optionCount, plural, one {# opcija} other {# opcijas}}.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Ievadīta grupa {groupTitle}, ar {groupCount, plural, one {# opciju} other {# opcijām}}. } other {}}{optionText}{isSelected, select, true {, atlasīta} other {}}\",\n  \"listboxLabel\": \"Ieteikumi\",\n  \"selectedAnnouncement\": \"{optionText}, atlasīta\"\n}\n","{\n  \"buttonLabel\": \"Vis forslag\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# alternativ} other {# alternativer}} finnes.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Angitt gruppe {groupTitle}, med {groupCount, plural, one {# alternativ} other {# alternativer}}. } other {}}{optionText}{isSelected, select, true {, valgt} other {}}\",\n  \"listboxLabel\": \"Forslag\",\n  \"selectedAnnouncement\": \"{optionText}, valgt\"\n}\n","{\n  \"buttonLabel\": \"Suggesties weergeven\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# optie} other {# opties}} beschikbaar.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Groep {groupTitle} ingevoerd met {groupCount, plural, one {# optie} other {# opties}}. } other {}}{optionText}{isSelected, select, true {, geselecteerd} other {}}\",\n  \"listboxLabel\": \"Suggesties\",\n  \"selectedAnnouncement\": \"{optionText}, geselecteerd\"\n}\n","{\n  \"buttonLabel\": \"Wyświetlaj sugestie\",\n  \"countAnnouncement\": \"dostępna/dostępne(-nych) {optionCount, plural, one {# opcja} other {# opcje(-i)}}.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Dołączono do grupy {groupTitle}, z {groupCount, plural, one {# opcją} other {# opcjami}}. } other {}}{optionText}{isSelected, select, true {, wybrano} other {}}\",\n  \"listboxLabel\": \"Sugestie\",\n  \"selectedAnnouncement\": \"{optionText}, wybrano\"\n}\n","{\n  \"buttonLabel\": \"Mostrar sugestões\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# opção} other {# opções}} disponível.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Grupo inserido {groupTitle}, com {groupCount, plural, one {# opção} other {# opções}}. } other {}}{optionText}{isSelected, select, true {, selecionado} other {}}\",\n  \"listboxLabel\": \"Sugestões\",\n  \"selectedAnnouncement\": \"{optionText}, selecionado\"\n}\n","{\n  \"buttonLabel\": \"Apresentar sugestões\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# opção} other {# opções}} disponível.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Grupo introduzido {groupTitle}, com {groupCount, plural, one {# opção} other {# opções}}. } other {}}{optionText}{isSelected, select, true {, selecionado} other {}}\",\n  \"listboxLabel\": \"Sugestões\",\n  \"selectedAnnouncement\": \"{optionText}, selecionado\"\n}\n","{\n  \"buttonLabel\": \"Afișare sugestii\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# opțiune} other {# opțiuni}} disponibile.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Grup {groupTitle} introdus, cu {groupCount, plural, one {# opțiune} other {# opțiuni}}. } other {}}{optionText}{isSelected, select, true {, selectat} other {}}\",\n  \"listboxLabel\": \"Sugestii\",\n  \"selectedAnnouncement\": \"{optionText}, selectat\"\n}\n","{\n  \"buttonLabel\": \"Показать предложения\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# параметр} other {# параметров}} доступно.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Введенная группа {groupTitle}, с {groupCount, plural, one {# параметром} other {# параметрами}}. } other {}}{optionText}{isSelected, select, true {, выбранными} other {}}\",\n  \"listboxLabel\": \"Предложения\",\n  \"selectedAnnouncement\": \"{optionText}, выбрано\"\n}\n","{\n  \"buttonLabel\": \"Zobraziť návrhy\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# možnosť} other {# možnosti/-í}} k dispozícii.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Zadaná skupina {groupTitle}, s {groupCount, plural, one {# možnosťou} other {# možnosťami}}. } other {}}{optionText}{isSelected, select, true {, vybraté} other {}}\",\n  \"listboxLabel\": \"Návrhy\",\n  \"selectedAnnouncement\": \"{optionText}, vybraté\"\n}\n","{\n  \"buttonLabel\": \"Prikaži predloge\",\n  \"countAnnouncement\": \"Na voljo je {optionCount, plural, one {# opcija} other {# opcije}}.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Vnesena skupina {groupTitle}, z {groupCount, plural, one {# opcija} other {# opcije}}. } other {}}{optionText}{isSelected, select, true {, izbrano} other {}}\",\n  \"listboxLabel\": \"Predlogi\",\n  \"selectedAnnouncement\": \"{optionText}, izbrano\"\n}\n","{\n  \"buttonLabel\": \"Prikaži predloge\",\n  \"countAnnouncement\": \"Dostupno još: {optionCount, plural, one {# opcija} other {# opcije/a}}.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Unesena grupa {groupTitle}, s {groupCount, plural, one {# opcijom} other {# optione/a}}. } other {}}{optionText}{isSelected, select, true {, izabranih} other {}}\",\n  \"listboxLabel\": \"Predlozi\",\n  \"selectedAnnouncement\": \"{optionText}, izabrano\"\n}\n","{\n  \"buttonLabel\": \"Visa förslag\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# alternativ} other {# alternativ}} tillgängliga.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Ingick i gruppen {groupTitle} med {groupCount, plural, one {# alternativ} other {# alternativ}}. } other {}}{optionText}{isSelected, select, true {, valda} other {}}\",\n  \"listboxLabel\": \"Förslag\",\n  \"selectedAnnouncement\": \"{optionText}, valda\"\n}\n","{\n  \"buttonLabel\": \"Önerileri göster\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# seçenek} other {# seçenekler}} kullanılabilir.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Girilen grup {groupTitle}, ile {groupCount, plural, one {# seçenek} other {# seçenekler}}. } other {}}{optionText}{isSelected, select, true {, seçildi} other {}}\",\n  \"listboxLabel\": \"Öneriler\",\n  \"selectedAnnouncement\": \"{optionText}, seçildi\"\n}\n","{\n  \"buttonLabel\": \"Показати пропозиції\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# параметр} other {# параметри(-ів)}} доступно.\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {Введена група {groupTitle}, з {groupCount, plural, one {# параметр} other {# параметри(-ів)}}. } other {}}{optionText}{isSelected, select, true {, вибрано} other {}}\",\n  \"listboxLabel\": \"Пропозиції\",\n  \"selectedAnnouncement\": \"{optionText}, вибрано\"\n}\n","{\n  \"buttonLabel\": \"显示建议\",\n  \"countAnnouncement\": \"有 {optionCount, plural, one {# 个选项} other {# 个选项}}可用。\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {进入了 {groupTitle} 组，其中有 {groupCount, plural, one {# 个选项} other {# 个选项}}. } other {}}{optionText}{isSelected, select, true {, 已选择} other {}}\",\n  \"listboxLabel\": \"建议\",\n  \"selectedAnnouncement\": \"{optionText}, 已选择\"\n}\n","{\n  \"buttonLabel\": \"顯示建議\",\n  \"countAnnouncement\": \"{optionCount, plural, one {# 選項} other {# 選項}} 可用。\",\n  \"focusAnnouncement\": \"{isGroupChange, select, true {輸入的群組 {groupTitle}, 有 {groupCount, plural, one {# 選項} other {# 選項}}. } other {}}{optionText}{isSelected, select, true {, 已選取} other {}}\",\n  \"listboxLabel\": \"建議\",\n  \"selectedAnnouncement\": \"{optionText}, 已選取\"\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {AriaButtonProps} from '@react-types/button';\nimport {ariaHideOutside} from '@react-aria/overlays';\nimport {AriaListBoxOptions, getItemId, listData} from '@react-aria/listbox';\nimport {chain, isAppleDevice, mergeProps, useLabels} from '@react-aria/utils';\nimport {ComboBoxProps} from '@react-types/combobox';\nimport {ComboBoxState} from '@react-stately/combobox';\nimport {FocusEvent, HTMLAttributes, InputHTMLAttributes, KeyboardEvent, RefObject, TouchEvent, useEffect, useMemo, useRef} from 'react';\nimport {getItemCount} from '@react-stately/collections';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {KeyboardDelegate, PressEvent} from '@react-types/shared';\nimport {ListKeyboardDelegate, useSelectableCollection} from '@react-aria/selection';\nimport {useMenuTrigger} from '@react-aria/menu';\nimport {useMessageFormatter} from '@react-aria/i18n';\nimport {useTextField} from '@react-aria/textfield';\n\ninterface AriaComboBoxProps<T> extends ComboBoxProps<T> {\n  /** The ref for the input element. */\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  /** The ref for the list box popover. */\n  popoverRef: RefObject<HTMLDivElement>,\n  /** The ref for the list box. */\n  listBoxRef: RefObject<HTMLElement>,\n  /** The ref for the optional list box popup trigger button.  */\n  buttonRef?: RefObject<HTMLElement>,\n  /** An optional keyboard delegate implementation, to override the default. */\n  keyboardDelegate?: KeyboardDelegate\n}\n\ninterface ComboBoxAria<T> {\n  /** Props for the label element. */\n  labelProps: HTMLAttributes<HTMLElement>,\n  /** Props for the combo box input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Props for the list box, to be passed to [useListBox](useListBox.html). */\n  listBoxProps: AriaListBoxOptions<T>,\n  /** Props for the optional trigger button, to be passed to [useButton](useButton.html). */\n  buttonProps: AriaButtonProps\n}\n\n/**\n * Provides the behavior and accessibility implementation for a combo box component.\n * A combo box combines a text input with a listbox, allowing users to filter a list of options to items matching a query.\n * @param props - Props for the combo box.\n * @param state - State for the select, as returned by `useComboBoxState`.\n */\nexport function useComboBox<T>(props: AriaComboBoxProps<T>, state: ComboBoxState<T>): ComboBoxAria<T> {\n  let {\n    buttonRef,\n    popoverRef,\n    inputRef,\n    listBoxRef,\n    keyboardDelegate,\n    // completionMode = 'suggest',\n    isReadOnly,\n    isDisabled\n  } = props;\n\n  let formatMessage = useMessageFormatter(intlMessages);\n  let {menuTriggerProps, menuProps} = useMenuTrigger(\n    {\n      type: 'listbox'\n    },\n    state,\n    buttonRef\n  );\n\n  // Set listbox id so it can be used when calling getItemId later\n  listData.set(state, {id: menuProps.id});\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let delegate = useMemo(() =>\n    keyboardDelegate ||\n    new ListKeyboardDelegate(state.collection, state.disabledKeys, listBoxRef)\n  , [keyboardDelegate, state.collection, state.disabledKeys, listBoxRef]);\n\n  // Use useSelectableCollection to get the keyboard handlers to apply to the textfield\n  let {collectionProps} = useSelectableCollection({\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    disallowTypeAhead: true,\n    disallowEmptySelection: true,\n    ref: inputRef\n  });\n\n  // For textfield specific keydown operations\n  let onKeyDown = (e: KeyboardEvent) => {\n    switch (e.key) {\n      case 'Enter':\n      case 'Tab':\n        // Prevent form submission if menu is open since we may be selecting a option\n        if (state.isOpen && e.key === 'Enter') {\n          e.preventDefault();\n        }\n\n        state.commit();\n        break;\n      case 'Escape':\n        state.revert();\n        break;\n      case 'ArrowDown':\n        state.open('first', 'manual');\n        break;\n      case 'ArrowUp':\n        state.open('last', 'manual');\n        break;\n      case 'ArrowLeft':\n      case 'ArrowRight':\n        state.selectionManager.setFocusedKey(null);\n        break;\n    }\n  };\n\n  let onBlur = (e: FocusEvent) => {\n    // Ignore blur if focused moved to the button or into the popover.\n    if (e.relatedTarget === buttonRef?.current || popoverRef.current?.contains(e.relatedTarget as HTMLElement)) {\n      return;\n    }\n\n    if (props.onBlur) {\n      props.onBlur(e);\n    }\n\n    state.setFocused(false);\n  };\n\n  let onFocus = (e: FocusEvent) => {\n    if (state.isFocused) {\n      return;\n    }\n\n    if (props.onFocus) {\n      props.onFocus(e);\n    }\n\n    state.setFocused(true);\n  };\n\n  let {labelProps, inputProps} = useTextField({\n    ...props,\n    onChange: state.setInputValue,\n    onKeyDown: !isReadOnly && chain(state.isOpen && collectionProps.onKeyDown, onKeyDown),\n    onBlur,\n    value: state.inputValue,\n    onFocus,\n    autoComplete: 'off'\n  }, inputRef);\n\n  // Press handlers for the ComboBox button\n  let onPress = (e: PressEvent) => {\n    if (e.pointerType === 'touch') {\n      // Focus the input field in case it isn't focused yet\n      inputRef.current.focus();\n      state.toggle(null, 'manual');\n    }\n  };\n\n  let onPressStart = (e: PressEvent) => {\n    if (e.pointerType !== 'touch') {\n      inputRef.current.focus();\n      state.toggle((e.pointerType === 'keyboard' || e.pointerType === 'virtual') ? 'first' : null, 'manual');\n    }\n  };\n\n  let triggerLabelProps = useLabels({\n    id: menuTriggerProps.id,\n    'aria-label': formatMessage('buttonLabel'),\n    'aria-labelledby': props['aria-labelledby'] || labelProps.id\n  });\n\n  let listBoxProps = useLabels({\n    id: menuProps.id,\n    'aria-label': formatMessage('listboxLabel'),\n    'aria-labelledby': props['aria-labelledby'] || labelProps.id\n  });\n\n  // If a touch happens on direct center of ComboBox input, might be virtual click from iPad so open ComboBox menu\n  let lastEventTime = useRef(0);\n  let onTouchEnd = (e: TouchEvent) => {\n    if (isDisabled || isReadOnly) {\n      return;\n    }\n\n    // Sometimes VoiceOver on iOS fires two touchend events in quick succession. Ignore the second one.\n    if (e.timeStamp - lastEventTime.current < 500) {\n      e.preventDefault();\n      inputRef.current.focus();\n      return;\n    }\n\n    let rect = (e.target as HTMLElement).getBoundingClientRect();\n    let touch = e.changedTouches[0];\n\n    let centerX = Math.ceil(rect.left + .5 * rect.width);\n    let centerY = Math.ceil(rect.top + .5 * rect.height);\n\n    if (touch.clientX === centerX && touch.clientY === centerY) {\n      e.preventDefault();\n      inputRef.current.focus();\n      state.toggle(null, 'manual');\n\n      lastEventTime.current = e.timeStamp;\n    }\n  };\n\n  // VoiceOver has issues with announcing aria-activedescendant properly on change\n  // (especially on iOS). We use a live region announcer to announce focus changes\n  // manually. In addition, section titles are announced when navigating into a new section.\n  let focusedItem = state.selectionManager.focusedKey != null && state.isOpen\n    ? state.collection.getItem(state.selectionManager.focusedKey)\n    : undefined;\n  let sectionKey = focusedItem?.parentKey ?? null;\n  let itemKey = state.selectionManager.focusedKey ?? null;\n  let lastSection = useRef(sectionKey);\n  let lastItem = useRef(itemKey);\n  useEffect(() => {\n    if (isAppleDevice() && focusedItem != null && itemKey !== lastItem.current) {\n      let isSelected = state.selectionManager.isSelected(itemKey);\n      let section = sectionKey != null ? state.collection.getItem(sectionKey) : null;\n      let sectionTitle = section?.['aria-label'] || (typeof section?.rendered === 'string' ? section.rendered : '') || '';\n\n      let announcement = formatMessage('focusAnnouncement', {\n        isGroupChange: section && sectionKey !== lastSection.current,\n        groupTitle: sectionTitle,\n        groupCount: section ? [...section.childNodes].length : 0,\n        optionText: focusedItem['aria-label'] || focusedItem.textValue || '',\n        isSelected\n      });\n\n      announce(announcement);\n    }\n\n    lastSection.current = sectionKey;\n    lastItem.current = itemKey;\n  });\n\n  // Announce the number of available suggestions when it changes\n  let optionCount = getItemCount(state.collection);\n  let lastSize = useRef(optionCount);\n  let lastOpen = useRef(state.isOpen);\n  useEffect(() => {\n    // Only announce the number of options available when the menu opens if there is no\n    // focused item, otherwise screen readers will typically read e.g. \"1 of 6\".\n    // The exception is VoiceOver since this isn't included in the message above.\n    let didOpenWithoutFocusedItem =\n      state.isOpen !== lastOpen.current &&\n      (state.selectionManager.focusedKey == null || isAppleDevice());\n\n    if (state.isOpen && (didOpenWithoutFocusedItem || optionCount !== lastSize.current)) {\n      let announcement = formatMessage('countAnnouncement', {optionCount});\n      announce(announcement);\n    }\n\n    lastSize.current = optionCount;\n    lastOpen.current = state.isOpen;\n  });\n\n  // Announce when a selection occurs for VoiceOver. Other screen readers typically do this automatically.\n  let lastSelectedKey = useRef(state.selectedKey);\n  useEffect(() => {\n    if (isAppleDevice() && state.isFocused && state.selectedItem && state.selectedKey !== lastSelectedKey.current) {\n      let optionText = state.selectedItem['aria-label'] || state.selectedItem.textValue || '';\n      let announcement = formatMessage('selectedAnnouncement', {optionText});\n      announce(announcement);\n    }\n\n    lastSelectedKey.current = state.selectedKey;\n  });\n\n  useEffect(() => {\n    if (state.isOpen) {\n      return ariaHideOutside([inputRef.current, popoverRef.current]);\n    }\n  }, [state.isOpen, inputRef, popoverRef]);\n\n  return {\n    labelProps,\n    buttonProps: {\n      ...menuTriggerProps,\n      ...triggerLabelProps,\n      excludeFromTabOrder: true,\n      onPress,\n      onPressStart\n    },\n    inputProps: mergeProps(inputProps, {\n      role: 'combobox',\n      'aria-expanded': menuTriggerProps['aria-expanded'],\n      'aria-controls': state.isOpen ? menuProps.id : undefined,\n      // TODO: readd proper logic for completionMode = complete (aria-autocomplete: both)\n      'aria-autocomplete': 'list',\n      'aria-activedescendant': focusedItem ? getItemId(state, focusedItem.key) : undefined,\n      onTouchEnd,\n      // This disable's iOS's autocorrect suggestions, since the combo box provides its own suggestions.\n      autoCorrect: 'off',\n      // This disable's the macOS Safari spell check auto corrections.\n      spellCheck: 'false'\n    }),\n    listBoxProps: mergeProps(menuProps, listBoxProps, {\n      autoFocus: state.focusStrategy,\n      shouldUseVirtualFocus: true,\n      shouldSelectOnPressUp: true,\n      shouldFocusOnHover: true\n    })\n  };\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","JSON","parse","useComboBox","props","state","buttonRef","popoverRef","inputRef","listBoxRef","keyboardDelegate","isReadOnly","isDisabled","formatMessage","useMessageFormatter","intlMessages","menuTriggerProps","menuProps","useMenuTrigger","type","listData","set","id","delegate","useMemo","ListKeyboardDelegate","collection","disabledKeys","collectionProps","useSelectableCollection","selectionManager","disallowTypeAhead","disallowEmptySelection","ref","onKeyDown","e","key","isOpen","preventDefault","commit","revert","open","setFocusedKey","onBlur","relatedTarget","current","contains","setFocused","onFocus","isFocused","labelProps","inputProps","useTextField","onChange","setInputValue","chain","value","inputValue","autoComplete","onPress","pointerType","focus","toggle","onPressStart","triggerLabelProps","useLabels","listBoxProps","lastEventTime","useRef","onTouchEnd","timeStamp","rect","target","getBoundingClientRect","touch","changedTouches","centerX","Math","ceil","left","width","centerY","top","height","clientX","clientY","focusedItem","focusedKey","getItem","undefined","sectionKey","parentKey","itemKey","lastSection","lastItem","useEffect","isAppleDevice","isSelected","section","sectionTitle","rendered","announcement","isGroupChange","groupTitle","groupCount","childNodes","length","optionText","textValue","announce","optionCount","getItemCount","lastSize","lastOpen","didOpenWithoutFocusedItem","lastSelectedKey","selectedKey","selectedItem","ariaHideOutside","buttonProps","excludeFromTabOrder","mergeProps","role","getItemId","autoCorrect","spellCheck","autoFocus","focusStrategy","shouldUseVirtualFocus","shouldSelectOnPressUp","shouldFocusOnHover"],"version":3,"file":"main.js.map"}