{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-aria/live-announcer/src/LiveAnnouncer.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, {Fragment, ReactNode, RefObject, useImperativeHandle, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {VisuallyHidden} from '@react-aria/visually-hidden';\n\ntype Assertiveness = 'assertive' | 'polite';\ninterface Announcer {\n  announce(message: string, assertiveness: Assertiveness, timeout: number): void,\n  clear(assertiveness: Assertiveness): void\n}\n\n/* Inspired by https://github.com/AlmeroSteyn/react-aria-live */\nconst LIVEREGION_TIMEOUT_DELAY = 7000;\n\nlet liveRegionAnnouncer = React.createRef<Announcer>();\nlet node: HTMLElement = null;\nlet messageId = 0;\n\n/**\n * Announces the message using screen reader technology.\n */\nexport function announce(\n  message: string,\n  assertiveness: Assertiveness = 'assertive',\n  timeout = LIVEREGION_TIMEOUT_DELAY\n) {\n  ensureInstance(announcer => announcer.announce(message, assertiveness, timeout));\n}\n\n/**\n * Stops all queued announcements.\n */\nexport function clearAnnouncer(assertiveness: Assertiveness) {\n  ensureInstance(announcer => announcer.clear(assertiveness));\n}\n\n/**\n * Removes the announcer from the DOM.\n */\nexport function destroyAnnouncer() {\n  if (liveRegionAnnouncer.current) {\n    ReactDOM.unmountComponentAtNode(node);\n    document.body.removeChild(node);\n    node = null;\n  }\n}\n\n/**\n * Ensures we only have one instance of the announcer so that we don't have elements competing.\n */\nfunction ensureInstance(callback: (announcer: Announcer) => void) {\n  if (!liveRegionAnnouncer.current) {\n    node = document.createElement('div');\n    node.dataset.liveAnnouncer = 'true';\n    document.body.prepend(node);\n    ReactDOM.render(\n      <LiveRegionAnnouncer ref={liveRegionAnnouncer} />,\n      node,\n      () => callback(liveRegionAnnouncer.current)\n    );\n  } else {\n    callback(liveRegionAnnouncer.current);\n  }\n}\n\nconst LiveRegionAnnouncer = React.forwardRef((_, ref: RefObject<Announcer>) => {\n  let [assertiveMessages, setAssertiveMessages] = useState([]);\n  let [politeMessages, setPoliteMessages] = useState([]);\n\n  let clear = (assertiveness: Assertiveness) => {\n    if (!assertiveness || assertiveness === 'assertive') {\n      setAssertiveMessages([]);\n    }\n\n    if (!assertiveness || assertiveness === 'polite') {\n      setPoliteMessages([]);\n    }\n  };\n\n  let announce = (message: string, assertiveness = 'assertive', timeout = LIVEREGION_TIMEOUT_DELAY) => {\n    let id = messageId++;\n\n    if (assertiveness === 'assertive') {\n      setAssertiveMessages(messages => [...messages, {id, text: message}]);\n    } else {\n      setPoliteMessages(messages => [...messages, {id, text: message}]);\n    }\n\n    if (message !== '') {\n      setTimeout(() => {\n        if (assertiveness === 'assertive') {\n          setAssertiveMessages(messages => messages.filter(message => message.id !== id));\n        } else {\n          setPoliteMessages(messages => messages.filter(message => message.id !== id));\n        }\n      }, timeout);\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    announce,\n    clear\n  }));\n\n  return (\n    <Fragment>\n      <MessageBlock aria-live=\"assertive\">\n        {assertiveMessages.map(message => <div key={message.id}>{message.text}</div>)}\n      </MessageBlock>\n      <MessageBlock aria-live=\"polite\">\n        {politeMessages.map(message => <div key={message.id}>{message.text}</div>)}\n      </MessageBlock>\n    </Fragment>\n  );\n});\n\ninterface MessageBlockProps {\n   children: ReactNode,\n   'aria-live': Assertiveness\n }\n\nfunction MessageBlock({children, 'aria-live': ariaLive}: MessageBlockProps) {\n  return (\n    <VisuallyHidden\n      role=\"log\"\n      aria-live={ariaLive}\n      aria-relevant=\"additions\">\n      {children}\n    </VisuallyHidden>\n  );\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","LIVEREGION_TIMEOUT_DELAY","liveRegionAnnouncer","React","createRef","node","messageId","announce","message","assertiveness","timeout","ensureInstance","announcer","clearAnnouncer","clear","destroyAnnouncer","current","ReactDOM","unmountComponentAtNode","document","body","removeChild","callback","createElement","dataset","liveAnnouncer","prepend","render","LiveRegionAnnouncer","forwardRef","_","ref","assertiveMessages","setAssertiveMessages","useState","politeMessages","setPoliteMessages","id","messages","text","setTimeout","filter","useImperativeHandle","map","MessageBlock","children","ariaLive"],"version":3,"file":"main.js.map"}