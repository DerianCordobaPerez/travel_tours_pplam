{"version":3,"sources":["useToggleButton.ts"],"names":["useButton","chain","mergeProps","useToggleButton","props","state","isSelected","isPressed","buttonProps","onPress","toggle","accessibilityState","selected"],"mappings":"AAAA,SAAqBA,SAArB,QAAsC,aAAtC;AAEA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,mBAAlC;AAkBA,OAAO,SAASC,eAAT,CACLC,KADK,EAELC,KAFK,EAGO;AACZ,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;AACA,QAAM;AAAEE,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BR,SAAS,CAAC,EAC3C,GAAGI,KADwC;AAE3CK,IAAAA,OAAO,EAAER,KAAK,CAACI,KAAK,CAACK,MAAP,EAAeN,KAAK,CAACK,OAArB;AAF6B,GAAD,CAA5C;AAKA,SAAO;AACLF,IAAAA,SADK;AAELC,IAAAA,WAAW,EAAEN,UAAU,CAACM,WAAD,EAAc;AACnCG,MAAAA,kBAAkB,EAAE;AAClBC,QAAAA,QAAQ,EAAEN;AADQ;AADe,KAAd;AAFlB,GAAP;AAQD","sourcesContent":["import { ButtonAria, useButton } from './useButton';\nimport type { ToggleState } from '@react-stately/toggle';\nimport { chain, mergeProps } from '@react-aria/utils';\nimport type { PressEvents } from '@react-native-aria/interactions';\nimport type { PressableProps } from 'react-native';\n\nexport type AriaButtonProps = PressableProps &\n  PressEvents & {\n    isDisabled: boolean;\n  };\n\nexport interface AriaToggleButtonProps extends AriaButtonProps {\n  /** Whether the element should be selected (controlled). */\n  isSelected?: boolean;\n  /** Whether the element should be selected (uncontrolled). */\n  defaultSelected?: boolean;\n  /** Handler that is called when the element's selection state changes. */\n  onChange?: (isSelected: boolean) => void;\n}\n\nexport function useToggleButton(\n  props: AriaToggleButtonProps,\n  state: ToggleState\n): ButtonAria {\n  const { isSelected } = state;\n  const { isPressed, buttonProps } = useButton({\n    ...props,\n    onPress: chain(state.toggle, props.onPress),\n  });\n\n  return {\n    isPressed,\n    buttonProps: mergeProps(buttonProps, {\n      accessibilityState: {\n        selected: isSelected,\n      },\n    }),\n  };\n}\n"]}