{"version":3,"sources":["useListBox.ts"],"names":["useListBox","_props","_state","_ref","labelProps","listBoxProps"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAT,CACLC,MADK,EAELC,MAFK,EAGLC,IAHK,EAIQ;AACb,SAAO;AACLC,IAAAA,UAAU,EAAE,EADP;AAELC,IAAAA,YAAY,EAAE;AAFT,GAAP;AAID","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { AriaListBoxProps } from '@react-types/listbox';\nimport { ReactNode, RefObject } from 'react';\nimport { KeyboardDelegate } from '@react-types/shared';\nimport { ListState } from '@react-stately/list';\n\ninterface ListBoxAria {\n  /** Props for the listbox element. */\n  listBoxProps: any;\n  /** Props for the listbox's visual label element (if any). */\n  labelProps: any;\n}\n\ninterface AriaListBoxOptions<T> extends Omit<AriaListBoxProps<T>, 'children'> {\n  /** Whether the listbox uses virtual scrolling. */\n  isVirtualized?: boolean;\n\n  /**\n   * An optional keyboard delegate implementation for type to select,\n   * to override the default.\n   */\n  keyboardDelegate?: KeyboardDelegate;\n\n  /**\n   * An optional visual label for the listbox.\n   */\n  label?: ReactNode;\n}\n\n/**\n * Provides the behavior and accessibility implementation for a listbox component.\n * A listbox displays a list of options and allows a user to select one or more of them.\n * @param props - Props for the listbox.\n * @param state - State for the listbox, as returned by `useListState`.\n */\nexport function useListBox<T>(\n  _props: AriaListBoxOptions<T>,\n  _state: ListState<T>,\n  _ref: RefObject<HTMLElement>\n): ListBoxAria {\n  return {\n    labelProps: {},\n    listBoxProps: {},\n  };\n}\n"]}