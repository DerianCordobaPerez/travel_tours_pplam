{"version":3,"sources":["FocusScope.tsx"],"names":["React","FocusScope","props","children","useFocusManager"],"mappings":"AAAA,OAAOA,KAAP,MAAiC,OAAjC;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA4C;AACjD,sBAAO,oBAAC,KAAD,CAAO,QAAP,QAAiBA,KAAK,CAACC,QAAvB,CAAP;AACD,C,CAED;;AACA,OAAO,MAAMC,eAAe,GAAG,MAAM,CAAE,CAAhC","sourcesContent":["import React, { ReactNode } from 'react';\n\ninterface FocusScopeProps {\n  /** The contents of the focus scope. */\n  children: ReactNode;\n\n  /**\n   * Whether to contain focus inside the scope, so users cannot\n   * move focus outside, for example in a modal dialog.\n   */\n  contain?: boolean;\n\n  /**\n   * Whether to restore focus back to the element that was focused\n   * when the focus scope mounted, after the focus scope unmounts.\n   */\n  restoreFocus?: boolean;\n\n  /** Whether to auto focus the first focusable element in the focus scope on mount. */\n  autoFocus?: boolean;\n}\n\n/**\n * A FocusScope manages focus for its descendants. It supports containing focus inside\n * the scope, restoring focus to the previously focused element on unmount, and auto\n * focusing children on mount. It also acts as a container for a programmatic focus\n * management interface that can be used to move focus forward and back in response\n * to user events.\n */\nexport function FocusScope(props: FocusScopeProps) {\n  return <React.Fragment>{props.children}</React.Fragment>;\n}\n\n// Noop - Implement this for mac and windows\nexport const useFocusManager = () => {};\n"]}