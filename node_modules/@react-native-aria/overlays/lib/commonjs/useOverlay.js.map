{"version":3,"sources":["useOverlay.ts"],"names":["useOverlay","_props","_ref","overlayProps"],"mappings":";;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACO,SAASA,UAAT,CACLC,MADK,EAELC,IAFK,EAGQ;AACb,SAAO;AACLC,IAAAA,YAAY,EAAE;AADT,GAAP;AAGD","sourcesContent":["import { HTMLAttributes, RefObject } from 'react';\n\ninterface OverlayProps {\n  /** Whether the overlay is currently open. */\n  isOpen?: boolean;\n\n  /** Handler that is called when the overlay should close. */\n  onClose?: () => void;\n\n  /**\n   * Whether to close the overlay when the user interacts outside it.\n   * @default false\n   */\n  isDismissable?: boolean;\n\n  /** Whether the overlay should close when focus is lost or moves outside it. */\n  shouldCloseOnBlur?: boolean;\n\n  /**\n   * Whether pressing the escape key to close the overlay should be disabled.\n   * @default false\n   */\n  isKeyboardDismissDisabled?: boolean;\n\n  /**\n   * When user interacts with the argument element outside of the overlay ref,\n   * return true if onClose should be called.  This gives you a chance to filter\n   * out interaction with elements that should not dismiss the overlay.\n   * By default, onClose will always be called on interaction outside the overlay ref.\n   */\n  shouldCloseOnInteractOutside?: (element: HTMLElement) => boolean;\n}\n\ninterface OverlayAria {\n  /** Props to apply to the overlay container element. */\n  overlayProps: HTMLAttributes<HTMLElement>;\n}\n\n/**\n * Provides the behavior for overlays such as dialogs, popovers, and menus.\n * Hides the overlay when the user interacts outside it, when the Escape key is pressed,\n * or optionally, on blur. Only the top-most overlay will close at once.\n */\nexport function useOverlay(\n  _props: OverlayProps,\n  _ref: RefObject<HTMLElement>\n): OverlayAria {\n  return {\n    overlayProps: {},\n  };\n}\n"]}