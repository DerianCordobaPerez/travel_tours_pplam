{"version":3,"sources":["TabsKeyboardDelegate.ts"],"names":["TabsKeyboardDelegate","constructor","collection","direction","orientation","disabledKeys","Set","flipDirection","getKeyLeftOf","key","getNextKey","getPreviousKey","getKeyRightOf","getKeyAbove","getKeyBelow","getFirstKey","has","getLastKey","getKeyAfter","getKeyBefore"],"mappings":"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","sourcesContent":["//@ts-nocheck\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  Collection,\n  Direction,\n  KeyboardDelegate,\n  Orientation,\n} from '@react-types/shared';\nimport { Key } from 'react';\n\nexport class TabsKeyboardDelegate<T> implements KeyboardDelegate {\n  private collection: Collection<T>;\n  private flipDirection: boolean;\n  private disabledKeys: Set<Key>;\n  private orientation: Orientation;\n\n  constructor(\n    collection: Collection<T>,\n    direction: Direction,\n    orientation: Orientation,\n    disabledKeys: Set<Key> = new Set()\n  ) {\n    this.collection = collection;\n    this.flipDirection = direction === 'rtl' && orientation === 'horizontal';\n    this.orientation = orientation;\n    this.disabledKeys = disabledKeys;\n  }\n\n  getKeyLeftOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getNextKey(key);\n    } else {\n      if (this.orientation === 'horizontal') {\n        return this.getPreviousKey(key);\n      }\n      return null;\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getPreviousKey(key);\n    } else {\n      if (this.orientation === 'horizontal') {\n        return this.getNextKey(key);\n      }\n      return null;\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    if (this.orientation === 'vertical') {\n      return this.getPreviousKey(key);\n    }\n    return null;\n  }\n\n  getKeyBelow(key: Key) {\n    if (this.orientation === 'vertical') {\n      return this.getNextKey(key);\n    }\n    return null;\n  }\n\n  getFirstKey() {\n    let key = this.collection.getFirstKey();\n    if (this.disabledKeys.has(key)) {\n      key = this.getNextKey(key);\n    }\n    return key;\n  }\n\n  getLastKey() {\n    let key = this.collection.getLastKey();\n    if (this.disabledKeys.has(key)) {\n      key = this.getPreviousKey(key);\n    }\n    return key;\n  }\n\n  getNextKey(key) {\n    do {\n      key = this.collection.getKeyAfter(key);\n      if (key == null) {\n        key = this.collection.getFirstKey();\n      }\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n\n  getPreviousKey(key) {\n    do {\n      key = this.collection.getKeyBefore(key);\n      if (key == null) {\n        key = this.collection.getLastKey();\n      }\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n}\n"]}