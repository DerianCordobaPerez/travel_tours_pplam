{"version":3,"sources":["useTab.web.ts"],"names":["usePress","useSelectableItem","useMapDomPropsToRN","tabsIds","WeakMap","useTab","props","state","ref","item","isDisabled","propsDisabled","key","selectionManager","manager","selectedKey","isSelected","itemProps","disabledKeys","has","pressProps","tabId","generateId","tabPanelId","tabIndex","onMouseDown","e","stopPropagation","tabPropsTemp","undefined","tabProps","role","replace","baseId","get"],"mappings":"AAGA,SAASA,QAAT,QAAyB,iCAAzB;AACA,SACEC,iBADF,QAEO,uBAFP;AAGA,SAASC,kBAAT,QAAmC,0BAAnC;AAGA,MAAMC,OAAO,GAAG,IAAIC,OAAJ,EAAhB;AAOA,OAAO,SAASC,MAAT,CACLC,KADK,EAELC,KAFK,EAGLC,GAHK,EAII;AACT,MAAI;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAU,EAAEC;AAApB,MAAsCL,KAA1C;AACA,MAAI;AAAEM,IAAAA;AAAF,MAAUH,IAAd;AACA,MAAI;AAAEI,IAAAA,gBAAgB,EAAEC,OAApB;AAA6BC,IAAAA;AAA7B,MAA6CR,KAAjD;AAEA,MAAIS,UAAU,GAAGJ,GAAG,KAAKG,WAAzB;AAEA,MAAI;AAAEE,IAAAA;AAAF,MAAgBhB,iBAAiB,CAAC;AACpCY,IAAAA,gBAAgB,EAAEC,OADkB;AAEpCF,IAAAA,GAFoC;AAGpCJ,IAAAA;AAHoC,GAAD,CAArC;AAKA,MAAIE,UAAU,GAAGC,aAAa,IAAIJ,KAAK,CAACW,YAAN,CAAmBC,GAAnB,CAAuBP,GAAvB,CAAlC;AAEA,MAAI;AAAEQ,IAAAA;AAAF,MAAiBpB,QAAQ,CAAC,EAAE,GAAGiB,SAAL;AAAgBP,IAAAA;AAAhB,GAAD,CAA7B;AACA,MAAIW,KAAK,GAAGC,UAAU,CAACf,KAAD,EAAQK,GAAR,EAAa,KAAb,CAAtB;AACA,MAAIW,UAAU,GAAGD,UAAU,CAACf,KAAD,EAAQK,GAAR,EAAa,UAAb,CAA3B;AACA,MAAI;AAAEY,IAAAA;AAAF,MAAeJ,UAAnB,CAjBS,CAmBT;;AACA,MAAIJ,UAAU,IAAI,CAACN,UAAnB,EAA+B;AAC7Bc,IAAAA,QAAQ,GAAG,CAAX;AACD,GAtBQ,CAyBT;AACA;AACA;AACA;AACA;;;AACA,QAAMC,WAAW,GAAMC,CAAD,IAAWA,CAAC,CAACC,eAAF,EAAjC;;AAEA,QAAMC,YAAY,GAAI,EACpB,GAAGR,UADiB;AAEpBK,IAAAA,WAFoB;AAGpB,UAAMJ,KAHc;AAIpB,qBAAiBL,UAJG;AAKpB,qBAAiBN,UAAU,IAAImB,SALX;AAMpB,qBAAiBb,UAAU,GAAGO,UAAH,GAAgBM,SANvB;AAOpB,gBAAYnB,UAAU,GAAGmB,SAAH,GAAeL,QAPjB;AAQpB,YAAQ;AARY,GAAtB;AAWA,QAAMM,QAAQ,GAAG5B,kBAAkB,CAAC0B,YAAD,EAAepB,GAAf,CAAnC;AAEA,SAAO;AACLsB,IAAAA;AADK,GAAP;AAGD;;AAED,SAASR,UAAT,CACEf,KADF,EAEEK,GAFF,EAGEmB,IAHF,EAIE;AACA,MAAI,OAAOnB,GAAP,KAAe,QAAnB,EAA6B;AAC3BA,IAAAA,GAAG,GAAGA,GAAG,CAACoB,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAN;AACD;;AAED,MAAIC,MAAM,GAAG9B,OAAO,CAAC+B,GAAR,CAAY3B,KAAZ,CAAb;AACA,SAAQ,GAAE0B,MAAO,IAAGF,IAAK,IAAGnB,GAAI,EAAhC;AACD","sourcesContent":["import { AriaTabProps } from '@react-types/tabs';\nimport { HTMLAttributes, Key, RefObject } from 'react';\nimport { SingleSelectListState } from '@react-stately/list';\nimport { usePress } from '@react-native-aria/interactions';\nimport {\n  useSelectableItem,\n} from '@react-aria/selection';\nimport { useMapDomPropsToRN } from '@react-native-aria/utils';\n\n\nconst tabsIds = new WeakMap<SingleSelectListState<unknown>, string>();\n\ninterface TabAria {\n  /** Props for the tab element. */\n  tabProps: HTMLAttributes<HTMLElement>;\n}\n\nexport function useTab<T>(\n  props: AriaTabProps<T>,\n  state: SingleSelectListState<T>,\n  ref: RefObject<HTMLElement>\n): TabAria {\n  let { item, isDisabled: propsDisabled } = props;\n  let { key } = item;\n  let { selectionManager: manager, selectedKey } = state;\n\n  let isSelected = key === selectedKey;\n\n  let { itemProps } = useSelectableItem({\n    selectionManager: manager,\n    key,\n    ref,\n  });\n  let isDisabled = propsDisabled || state.disabledKeys.has(key);\n\n  let { pressProps } = usePress({ ...itemProps, isDisabled });\n  let tabId = generateId(state, key, 'tab');\n  let tabPanelId = generateId(state, key, 'tabpanel');\n  let { tabIndex } = pressProps;\n\n  // selected tab should have tabIndex=0, when it initializes\n  if (isSelected && !isDisabled) {\n    tabIndex = 0;\n  }\n\n  \n  // Putting this as a last resort, after several hours of debugging.\n  // Why?\n  // tabListProps adds onMouseDown with preventDefault in useSelectableCollection.ts (React Aria) and react-native-web uses onClick for onPress.\n  // This results in tab button not getting focused when clicked\n  // See this example - https://codesandbox.io/s/issue-i-know-but-dont-know-why-1-ydyw5?file=/src/App.js\n  const onMouseDown  =  (e:any) => e.stopPropagation();\n\n  const tabPropsTemp  = {\n    ...pressProps,\n    onMouseDown,\n    'id': tabId,\n    'aria-selected': isSelected,\n    'aria-disabled': isDisabled || undefined,\n    'aria-controls': isSelected ? tabPanelId : undefined,\n    'tabIndex': isDisabled ? undefined : tabIndex,\n    'role': 'tab',\n  }\n  \n  const tabProps = useMapDomPropsToRN(tabPropsTemp, ref)\n\n  return {\n    tabProps\n  };\n}\n\nfunction generateId<T>(\n  state: SingleSelectListState<T>,\n  key: Key,\n  role: string\n) {\n  if (typeof key === 'string') {\n    key = key.replace(/\\s+/g, '');\n  }\n\n  let baseId = tabsIds.get(state);\n  return `${baseId}-${role}-${key}`;\n}\n"]}