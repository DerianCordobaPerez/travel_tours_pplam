{"version":3,"sources":["useTab.ts"],"names":["usePress","useTab","props","state","_ref","item","isDisabled","propsDisabled","key","selectionManager","manager","selectedKey","isSelected","onPress","select","disabledKeys","has","pressProps","tabProps","accessibilityState","selected","accessibilityRole"],"mappings":"AAGA,SAASA,QAAT,QAAyB,iCAAzB;AAOA,OAAO,SAASC,MAAT,CACLC,KADK,EAELC,KAFK,EAGLC,IAHK,EAII;AACT,MAAI;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAU,EAAEC;AAApB,MAAsCL,KAA1C;AACA,MAAI;AAAEM,IAAAA;AAAF,MAAUH,IAAd;AACA,MAAI;AAAEI,IAAAA,gBAAgB,EAAEC,OAApB;AAA6BC,IAAAA;AAA7B,MAA6CR,KAAjD;AAEA,MAAIS,UAAU,GAAGJ,GAAG,KAAKG,WAAzB;;AAEA,QAAME,OAAO,GAAG,MAAM;AAClBH,IAAAA,OAAO,CAACI,MAAR,CAAeN,GAAf;AACH,GAFD;;AAIA,MAAIF,UAAU,GAAGC,aAAa,IAAIJ,KAAK,CAACY,YAAN,CAAmBC,GAAnB,CAAuBR,GAAvB,CAAlC;AAEA,MAAI;AAAES,IAAAA;AAAF,MAAiBjB,QAAQ,CAAC;AAAEa,IAAAA,OAAF;AAAWP,IAAAA;AAAX,GAAD,CAA7B;AAEA,QAAMY,QAAQ,GAAI,EAChB,GAAGD,UADa;AAEhBE,IAAAA,kBAAkB,EAAE;AAChBC,MAAAA,QAAQ,EAAER;AADM,KAFJ;AAKhBS,IAAAA,iBAAiB,EAAE;AALH,GAAlB;AAQA,SAAO;AACLH,IAAAA;AADK,GAAP;AAGD","sourcesContent":["import { AriaTabProps } from '@react-types/tabs';\nimport { RefObject } from 'react';\nimport { SingleSelectListState } from '@react-stately/list';\nimport { usePress } from '@react-native-aria/interactions';\n\ninterface TabAria {\n  /** Props for the tab element. */\n  tabProps: any;\n}\n\nexport function useTab<T>(\n  props: AriaTabProps<T>,\n  state: SingleSelectListState<T>,\n  _ref: RefObject<HTMLElement>\n): TabAria {\n  let { item, isDisabled: propsDisabled } = props;\n  let { key } = item;\n  let { selectionManager: manager, selectedKey } = state;\n\n  let isSelected = key === selectedKey;\n\n  const onPress = () => {\n      manager.select(key);\n  }\n\n  let isDisabled = propsDisabled || state.disabledKeys.has(key);\n\n  let { pressProps } = usePress({ onPress, isDisabled });\n \n  const tabProps  = {\n    ...pressProps,\n    accessibilityState: {\n        selected: isSelected\n    },\n    accessibilityRole: 'tab',\n  }\n  \n  return {\n    tabProps\n  };\n}"]}