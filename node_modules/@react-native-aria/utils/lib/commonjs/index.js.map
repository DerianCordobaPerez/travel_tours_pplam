{"version":3,"sources":["index.ts"],"names":["attachEventHandlersOnRef","props","ref","current","key","startsWith","toLowerCase","getLabel","label","accessibilityLabel","undefined","isRTL","I18nManager","getConstants"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAsBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAMA;;AA3BO,MAAMA,wBAAwB,GAAG,CAACC,KAAD,EAAaC,GAAb,KAA0B;AAChE,MAAIA,GAAG,IAAIA,GAAG,CAACC,OAAf,EAAwB;AACtB,SAAK,IAAIC,GAAT,IAAgBH,KAAhB,EAAuB;AACrB,UAAIG,GAAG,CAACC,UAAJ,CAAe,IAAf,CAAJ,EAA0B;AACxBH,QAAAA,GAAG,CAACC,OAAJ,CAAYC,GAAG,CAACE,WAAJ,EAAZ,IAAiCL,KAAK,CAACG,GAAD,CAAtC;AACD;AACF;AACF;AACF,CARM;;;;AAUA,MAAMG,QAAQ,GAAIN,KAAD,IAAgB;AAAA;;AACtC,MAAIO,KAAK,4BAAGP,KAAK,CAACQ,kBAAT,yEAA+BR,KAAK,CAAC,YAAD,CAA7C;;AAEA,MAAI,CAACO,KAAL,EAAY;AACVA,IAAAA,KAAK,GAAG,OAAOP,KAAK,CAACO,KAAb,KAAuB,QAAvB,GAAkCP,KAAK,CAACO,KAAxC,GAAgDE,SAAxD;AACD;;AAED,SAAOF,KAAP;AACD,CARM;;;;AAmBA,MAAMG,KAAK,GAAG,MAAM;AACzB;AACA,MAAIC,yBAAYD,KAAZ,KAAsBD,SAA1B,EAAqC;AACnC,WAAOE,yBAAYD,KAAnB;AACD,GAJwB,CAMzB;;;AACA,MAAIC,yBAAYC,YAAhB,EAA8B;AAC5B;AACA,WAAOD,yBAAYC,YAAZ,GAA2BF,KAAlC;AACD;AACF,CAXM","sourcesContent":["import { I18nManager } from 'react-native';\n\nexport const attachEventHandlersOnRef = (props: any, ref: any) => {\n  if (ref && ref.current) {\n    for (let key in props) {\n      if (key.startsWith('on')) {\n        ref.current[key.toLowerCase()] = props[key];\n      }\n    }\n  }\n};\n\nexport const getLabel = (props: any) => {\n  let label = props.accessibilityLabel ?? props['aria-label'];\n\n  if (!label) {\n    label = typeof props.label === 'string' ? props.label : undefined;\n  }\n\n  return label;\n};\n\nexport * from './ariaToAccessibilityMap';\nexport {\n  useId,\n  useLayoutEffect,\n  mergeIds,\n  mergeProps,\n} from '@react-aria/utils';\nexport { SSRProvider, useIsSSR } from '@react-aria/ssr';\n\nexport const isRTL = () => {\n  // To support previous RN versions. Newer versions use below getConstants()\n  if (I18nManager.isRTL !== undefined) {\n    return I18nManager.isRTL;\n  }\n\n  // @ts-ignore - RN web only\n  if (I18nManager.getConstants) {\n    // @ts-ignore - RN web only\n    return I18nManager.getConstants().isRTL;\n  }\n};\n"]}