{"version":3,"sources":["ariaToAccessibilityMap.ts"],"names":["React","ariaToAccessibilityMap","mapDomPropsToRN","props","newProps","tabIndex","focusable","role","accessibilityRole","id","nativeID","key","indexOf","console","warn","dataSet","split","useMapDomPropsToRN","ref","useEffect","current"],"mappings":"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","sourcesContent":["import React, { RefObject } from 'react';\n\nconst ariaToAccessibilityMap: any = {\n  'aria-activedescendant': 'accessibilityActiveDescendant',\n  'aria-atomic': 'accessibilityAtomic',\n  'aria-autocomplete': 'accessibilityAutoComplete',\n  'aria-busy': 'accessibilityBusy',\n  'aria-checked': 'accessibilityChecked',\n  'aria-colcount': 'accessibilityColumnCount',\n  'aria-colindex': 'accessibilityColumnIndex',\n  'aria-colspan': 'accessibilityColumnSpan',\n  'aria-controls': 'accessibilityControls',\n  'aria-describedby': 'accessibilityDescribedBy',\n  'aria-details': 'accessibilityDetails',\n  'aria-disabled': 'accessibilityDisabled',\n  'aria-errormessage': 'accessibilityErrorMessage',\n  'aria-expanded': 'accessibilityExpanded',\n  'aria-flowto': 'accessibilityFlowTo',\n  'aria-haspopup': 'accessibilityHasPopup',\n  'aria-hidden': 'accessibilityHidden',\n  'aria-invalid': 'accessibilityInvalid',\n  'aria-keyshortcuts': 'accessibilityKeyShortcuts',\n  'aria-label': 'accessibilityLabel',\n  'aria-labelledby': 'accessibilityLabelledBy',\n  'aria-live': 'accessibilityLiveRegion',\n  'aria-modal': 'accessibilityModal',\n  'aria-multiline': 'accessibilityMultiline',\n  'aria-multiselectable': 'accessibilityMultiSelectable',\n  'aria-orientation': 'accessibilityOrientation',\n  'aria-owns': 'accessibilityOwns',\n  'aria-placeholder': 'accessibilityPlaceholder',\n  'aria-posinset': 'accessibilityPosInSet',\n  'aria-pressed': 'accessibilityPressed',\n  'aria-readonly': 'accessibilityReadOnly',\n  'aria-required': 'accessibilityRequired',\n  'aria-roledescription': 'accessibilityRoleDescription',\n  'aria-rowcount': 'accessibilityRowCount',\n  'aria-rowindex': 'accessibilityRowIndex',\n  'aria-rowspan': 'accessibilityRowSpan',\n  'aria-selected': 'accessibilitySelected',\n  'aria-setsize': 'accessibilitySetSize',\n  'aria-sort': 'accessibilitySort',\n  'aria-valuemax': 'accessibilityValueMax',\n  'aria-valuemin': 'accessibilityValueMin',\n  'aria-valuenow': 'accessibilityValueNow',\n  'aria-valuetext': 'accessibilityValueText',\n};\n\n// Refer - https://necolas.github.io/react-native-web/docs/accessibility/\nexport const mapDomPropsToRN = (props: any) => {\n  let newProps: any = { ...props };\n\n  if (props.tabIndex === '0' || props.tabIndex === 0) {\n    newProps.focusable = true;\n  }\n  // use the below hook for tabIndex\n  // useMapDomPropsToRN\n  // if (props.tabIndex === '-1' || props.tabIndex === -1) {\n  //   newProps.focusable = false;\n  // }\n\n  if (props.role) {\n    newProps.accessibilityRole = props.role;\n  }\n\n  if (props.id) {\n    newProps.nativeID = props.id;\n  }\n\n  for (let key in props) {\n    // Map aria to RN web accessibility equivalents\n    if (key.indexOf('aria') > -1) {\n      if (ariaToAccessibilityMap[key]) {\n        newProps[ariaToAccessibilityMap[key]] = props[key];\n      } else {\n        console.warn(\n          '@react-native-aria/utils:: ',\n          'No equivalent mapping of ' +\n            key +\n            ' found in ariaToAccessibilityMap. Please raise a PR to support this attribute.'\n        );\n      }\n    } else if (key.indexOf('data-') > -1) {\n      if (!newProps.dataSet) {\n        newProps.dataSet = {};\n      }\n\n      newProps.dataSet[key.split('data-')[1]] = props[key];\n    }\n  }\n\n  return newProps;\n};\n\n// RN web currently doesn't allow setting tabIndex via props, so need to be set using setNativeProps or ref\n// https://github.com/necolas/react-native-web/issues/1916\n// https://github.com/necolas/react-native-web/issues/1099\nexport const useMapDomPropsToRN = (props: any, ref: RefObject<any>) => {\n  React.useEffect(() => {\n    if (ref.current) {\n      ref.current.tabIndex = props.tabIndex;\n    }\n  }, [props.tabIndex]);\n\n  return mapDomPropsToRN(props);\n};\n"]}