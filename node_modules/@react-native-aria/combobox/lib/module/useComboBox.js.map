{"version":3,"sources":["useComboBox.ts"],"names":["useComboBox","props","state","inputRef","onPress","current","focus","toggle","onChangeText","setInputValue","labelProps","buttonProps","inputProps","value","inputValue","onFocus","setFocused","onBlur","listBoxProps"],"mappings":"AAGA;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,WAAT,CACLC,KADK,EAELC,KAFK,EAGS;AACd,MAAI;AAAEC,IAAAA;AAAF,MAAeF,KAAnB,CADc,CAGd;;AACA,MAAIG,OAAO,GAAG,MAAM;AAAA;;AAClB;AACA,yBAAAD,QAAQ,CAACE,OAAT,wEAAkBC,KAAlB;AACAJ,IAAAA,KAAK,CAACK,MAAN;AACD,GAJD;;AAMA,QAAMC,YAAY,GAAGN,KAAK,CAACO,aAA3B;AAEA,SAAO;AACLC,IAAAA,UAAU,EAAE,EADP;AAELC,IAAAA,WAAW,EAAE;AACXP,MAAAA;AADW,KAFR;AAKLQ,IAAAA,UAAU,EAAE;AACVJ,MAAAA,YADU;AAEVK,MAAAA,KAAK,EAAEX,KAAK,CAACY,UAFH;AAGVC,MAAAA,OAAO,EAAE,MAAM;AACbb,QAAAA,KAAK,CAACc,UAAN,CAAiB,IAAjB;AACD,OALS;AAMVC,MAAAA,MAAM,EAAE,MAAM;AACZf,QAAAA,KAAK,CAACc,UAAN,CAAiB,KAAjB;AACD;AARS,KALP;AAeLE,IAAAA,YAAY,EAAE;AAfT,GAAP;AAiBD","sourcesContent":["import { ComboBoxProps } from '@react-types/combobox';\nimport { ComboBoxState } from '@react-stately/combobox';\nimport { RefObject } from 'react';\n// @ts-ignore\nimport { KeyboardDelegate, PressEvent } from '@react-types/shared';\nimport { TextInput, View, Pressable, Touchable } from 'react-native';\n\ninterface AriaComboBoxProps<T> extends ComboBoxProps<T> {\n  /** The ref for the input element. */\n  inputRef: RefObject<TextInput>;\n  /** The ref for the list box popover. */\n  popoverRef: RefObject<View>;\n  /** The ref for the list box. */\n  listBoxRef: RefObject<View>;\n  /** The ref for the list box popup trigger button.  */\n  buttonRef: RefObject<typeof Pressable | Touchable>;\n  /** An optional keyboard delegate implementation, to override the default. */\n  keyboardDelegate?: KeyboardDelegate;\n}\n\ninterface ComboBoxAria {\n  /** Props for the combo box menu trigger button. */\n  buttonProps: any;\n  /** Props for the combo box input element. */\n  inputProps: any;\n  /** Props for the combo box menu. */\n  listBoxProps: any;\n  /** Props for the combo box label element. */\n  labelProps: any;\n}\n\n/**\n * Provides the behavior and accessibility implementation for a combo box component.\n * A combo box combines a text input with a listbox, allowing users to filter a list of options to items matching a query.\n * @param props - Props for the combo box.\n * @param state - State for the select, as returned by `useComboBoxState`.\n */\nexport function useComboBox<T>(\n  props: AriaComboBoxProps<T>,\n  state: ComboBoxState<T>\n): ComboBoxAria {\n  let { inputRef } = props;\n\n  // Press handlers for the ComboBox button\n  let onPress = () => {\n    // Focus the input field in case it isn't focused yet\n    inputRef.current?.focus();\n    state.toggle();\n  };\n\n  const onChangeText = state.setInputValue;\n\n  return {\n    labelProps: {},\n    buttonProps: {\n      onPress,\n    },\n    inputProps: {\n      onChangeText,\n      value: state.inputValue,\n      onFocus: () => {\n        state.setFocused(true);\n      },\n      onBlur: () => {\n        state.setFocused(false);\n      },\n    },\n    listBoxProps: {},\n  };\n}\n"]}