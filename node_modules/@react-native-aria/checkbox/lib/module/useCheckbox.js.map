{"version":3,"sources":["useCheckbox.ts"],"names":["mergeProps","useToggle","useCheckbox","props","state","inputRef","inputProps","isSelected","isIndeterminate","checked","accessibilityRole","accessibilityState","disabled","isDisabled"],"mappings":"AAEA,SAASA,UAAT,QAA2B,mBAA3B;AACA,SAASC,SAAT,QAA0B,2BAA1B;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAT,CACLC,KADK,EAELC,KAFK,EAGLC,QAHK,EAIS;AACd,MAAI;AAAEC,IAAAA;AAAF,MAAiBL,SAAS,CAACE,KAAD,EAAQC,KAAR,EAAeC,QAAf,CAA9B;AACA,MAAI;AAAEE,IAAAA;AAAF,MAAiBH,KAArB;AAEA,MAAI;AAAEI,IAAAA;AAAF,MAAsBL,KAA1B;AAEA,SAAO;AACLG,IAAAA,UAAU,EAAEN,UAAU,CAACM,UAAD,EAAa;AACjCG,MAAAA,OAAO,EAAEF,UADwB;AAEjCG,MAAAA,iBAAiB,EAAE,UAFc;AAGjCC,MAAAA,kBAAkB,EAAE;AAClBF,QAAAA,OAAO,EAAED,eAAe,GAAG,OAAH,GAAaD,UADnB;AAElBK,QAAAA,QAAQ,EAAET,KAAK,CAACU;AAFE;AAHa,KAAb;AADjB,GAAP;AAUD","sourcesContent":["import type { RefObject } from 'react';\nimport type { ToggleState } from '@react-stately/toggle';\nimport { mergeProps } from '@react-aria/utils';\nimport { useToggle } from '@react-native-aria/toggle';\nimport { AriaCheckboxProps } from '@react-types/checkbox';\n\nexport interface CheckboxAria {\n  /** Props for the input or Pressable/Touchable element. */\n  inputProps: any;\n}\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox component.\n * Checkboxes allow users to select multiple items from a list of individual items, or\n * to mark one individual item as selected.\n * @param props - Props for the checkbox.\n * @param state - State for the checkbox, as returned by `useToggleState`.\n * @param inputRef - A ref for the HTML input element.\n */\nexport function useCheckbox(\n  props: AriaCheckboxProps,\n  state: ToggleState,\n  inputRef: RefObject<HTMLInputElement>\n): CheckboxAria {\n  let { inputProps } = useToggle(props, state, inputRef);\n  let { isSelected } = state;\n\n  let { isIndeterminate } = props;\n\n  return {\n    inputProps: mergeProps(inputProps, {\n      checked: isSelected,\n      accessibilityRole: 'checkbox',\n      accessibilityState: {\n        checked: isIndeterminate ? 'mixed' : isSelected,\n        disabled: props.isDisabled,\n      },\n    }),\n  };\n}\n"]}