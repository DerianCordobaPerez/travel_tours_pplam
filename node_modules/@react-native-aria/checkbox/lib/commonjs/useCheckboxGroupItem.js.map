{"version":3,"sources":["useCheckboxGroupItem.ts"],"names":["useCheckboxGroupItem","props","state","inputRef","toggleState","isReadOnly","isSelected","value","onChange","addValue","removeValue","inputProps","isDisabled"],"mappings":";;;;;;;AAaA;;AAGA;;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,oBAAT,CACLC,KADK,EAELC,KAFK,EAGLC,QAHK,EAIS;AACd,QAAMC,WAAW,GAAG,4BAAe;AACjCC,IAAAA,UAAU,EAAEJ,KAAK,CAACI,UAAN,IAAoBH,KAAK,CAACG,UADL;AAEjC;AACAC,IAAAA,UAAU,EAAEJ,KAAK,CAACI,UAAN,CAAiBL,KAAK,CAACM,KAAvB,CAHqB;;AAIjCC,IAAAA,QAAQ,CAACF,UAAD,EAAa;AACnB,UAAIA,UAAJ,EAAgB;AACd;AACAJ,QAAAA,KAAK,CAACO,QAAN,CAAeR,KAAK,CAACM,KAArB;AACD,OAHD,MAGO;AACL;AACAL,QAAAA,KAAK,CAACQ,WAAN,CAAkBT,KAAK,CAACM,KAAxB;AACD;;AAED,UAAIN,KAAK,CAACO,QAAV,EAAoB;AAClBP,QAAAA,KAAK,CAACO,QAAN,CAAeF,UAAf;AACD;AACF;;AAhBgC,GAAf,CAApB;AAmBA,MAAI;AAAEK,IAAAA;AAAF,MAAiB,8BACnB,EACE,GAAGV,KADL;AAEEI,IAAAA,UAAU,EAAEJ,KAAK,CAACI,UAAN,IAAoBH,KAAK,CAACG,UAFxC;AAGEO,IAAAA,UAAU,EAAEX,KAAK,CAACW,UAAN,IAAoBV,KAAK,CAACU;AAHxC,GADmB,EAMnBR,WANmB,EAOnBD,QAPmB,CAArB;AAUA,SAAO;AAAEQ,IAAAA;AAAF,GAAP;AACD","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport type { AriaCheckboxGroupItemProps } from '@react-types/checkbox';\nimport { CheckboxAria, useCheckbox } from './useCheckbox';\nimport type { CheckboxGroupState } from '@react-stately/checkbox';\nimport type { RefObject } from 'react';\nimport { useToggleState } from '@react-stately/toggle';\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox component contained within a checkbox group.\n * Checkbox groups allow users to select multiple items from a list of options.\n * @param props - Props for the checkbox.\n * @param state - State for the checkbox, as returned by `useCheckboxGroupState`.\n * @param inputRef - A ref for the HTML input element.\n */\nexport function useCheckboxGroupItem(\n  props: AriaCheckboxGroupItemProps,\n  state: CheckboxGroupState,\n  inputRef: RefObject<any>\n): CheckboxAria {\n  const toggleState = useToggleState({\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    //@ts-ignore\n    isSelected: state.isSelected(props.value),\n    onChange(isSelected) {\n      if (isSelected) {\n        //@ts-ignore\n        state.addValue(props.value);\n      } else {\n        //@ts-ignore\n        state.removeValue(props.value);\n      }\n\n      if (props.onChange) {\n        props.onChange(isSelected);\n      }\n    },\n  });\n\n  let { inputProps } = useCheckbox(\n    {\n      ...props,\n      isReadOnly: props.isReadOnly || state.isReadOnly,\n      isDisabled: props.isDisabled || state.isDisabled,\n    },\n    toggleState,\n    inputRef\n  );\n\n  return { inputProps };\n}\n"]}