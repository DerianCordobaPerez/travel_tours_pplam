"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.setSplashInfoPlist = exports.withIosSplashInfoPlist = void 0;
const config_plugins_1 = require("@expo/config-plugins");
const debug_1 = __importDefault(require("debug"));
const debug = debug_1.default('expo:prebuild-config:expo-splash-screen:ios:infoPlist');
const withIosSplashInfoPlist = (config, splash) => {
    return config_plugins_1.withInfoPlist(config, config => {
        config.modResults = setSplashInfoPlist(config, config.modResults, splash);
        return config;
    });
};
exports.withIosSplashInfoPlist = withIosSplashInfoPlist;
function setSplashInfoPlist(config, infoPlist, splash) {
    var _a, _b, _c, _d, _e, _f;
    const isDarkModeEnabled = !!(((_a = splash === null || splash === void 0 ? void 0 : splash.dark) === null || _a === void 0 ? void 0 : _a.image) ||
        ((_b = splash === null || splash === void 0 ? void 0 : splash.dark) === null || _b === void 0 ? void 0 : _b.tabletImage) ||
        ((_c = splash === null || splash === void 0 ? void 0 : splash.dark) === null || _c === void 0 ? void 0 : _c.backgroundColor) ||
        ((_d = splash === null || splash === void 0 ? void 0 : splash.dark) === null || _d === void 0 ? void 0 : _d.tabletBackgroundColor));
    debug(`isDarkModeEnabled: `, isDarkModeEnabled);
    if (isDarkModeEnabled) {
        // IOSConfig.UserInterfaceStyle.getUserInterfaceStyle(config);
        // Determine if the user manually defined the userInterfaceStyle incorrectly
        const existing = (_f = (_e = config.ios) === null || _e === void 0 ? void 0 : _e.userInterfaceStyle) !== null && _f !== void 0 ? _f : config.userInterfaceStyle;
        // Add a warning to prevent the dark mode splash screen from not being shown -- this was learned the hard way.
        if (existing && existing !== 'automatic') {
            config_plugins_1.WarningAggregator.addWarningIOS('splash', 'The existing `userInterfaceStyle` property is preventing splash screen from working properly. Please remove it or disable dark mode splash screens.');
        }
        // assigning it to auto anyways, but this is fragile because the order of operations matter now
        infoPlist.UIUserInterfaceStyle = 'Automatic';
    }
    else {
        delete infoPlist.UIUserInterfaceStyle;
    }
    if (splash) {
        // TODO: What to do here ??
        infoPlist.UILaunchStoryboardName = 'SplashScreen';
    }
    else {
        debug(`Disabling UILaunchStoryboardName`);
        delete infoPlist.UILaunchStoryboardName;
    }
    return infoPlist;
}
exports.setSplashInfoPlist = setSplashInfoPlist;
//# sourceMappingURL=withIosSplashInfoPlist.js.map