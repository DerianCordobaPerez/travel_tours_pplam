{"version":3,"file":"getIosSplashConfig.js","sourceRoot":"","sources":["../../../../src/plugins/unversioned/expo-splash-screen/getIosSplashConfig.ts"],"names":[],"mappings":";;;AAAA,yDAAyD;AAKzD,MAAM,iBAAiB,GAAG,SAAS,CAAC;AACpC,MAAM,sBAAsB,GAAG,SAAS,CAAC;AAkBzC,uHAAuH;AACvH,SAAgB,kBAAkB,CAAC,MAAkB;;IACnD,+FAA+F;IAC/F,qFAAqF;IACrF,IAAI,MAAA,MAAM,CAAC,GAAG,0CAAE,MAAM,EAAE;QACtB,MAAM,MAAM,GAAG,MAAA,MAAM,CAAC,GAAG,0CAAE,MAAM,CAAC;QAClC,MAAM,KAAK,GAAG,MAAA,MAAM,CAAC,KAAK,mCAAI,IAAI,CAAC;QACnC,OAAO;YACL,KAAK;YACL,UAAU,EAAE,MAAA,MAAM,CAAC,UAAU,mCAAI,iBAAiB;YAClD,eAAe,EAAE,MAAA,MAAM,CAAC,eAAe,mCAAI,sBAAsB;YACjE,WAAW,EAAE,MAAA,MAAM,CAAC,WAAW,mCAAI,IAAI;YACvC,qBAAqB,EAAE,MAAM,CAAC,qBAAqB;YACnD,IAAI,EAAE;gBACJ,KAAK,EAAE,MAAA,MAAA,MAAM,CAAC,IAAI,0CAAE,KAAK,mCAAI,IAAI;gBACjC,eAAe,EAAE,MAAA,MAAM,CAAC,IAAI,0CAAE,eAAe;gBAC7C,WAAW,EAAE,MAAA,MAAA,MAAM,CAAC,IAAI,0CAAE,WAAW,mCAAI,IAAI;gBAC7C,qBAAqB,EAAE,MAAA,MAAM,CAAC,IAAI,0CAAE,qBAAqB;aAC1D;SACF,CAAC;KACH;IAED,IAAI,MAAM,CAAC,MAAM,EAAE;QACjB,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC7B,MAAM,KAAK,GAAG,MAAA,MAAM,CAAC,KAAK,mCAAI,IAAI,CAAC;QACnC,OAAO;YACL,KAAK;YACL,UAAU,EAAE,MAAA,MAAM,CAAC,UAAU,mCAAI,iBAAiB;YAClD,eAAe,EAAE,MAAA,MAAM,CAAC,eAAe,mCAAI,sBAAsB;YACjE,WAAW,EAAE,IAAI;YACjB,qBAAqB,EAAE,IAAI;YAC3B,IAAI,EAAE;gBACJ,KAAK,EAAE,IAAI;gBACX,eAAe,EAAE,IAAI;gBACrB,WAAW,EAAE,IAAI;gBACjB,qBAAqB,EAAE,IAAI;aAC5B;SACF,CAAC;KACH;IAED,OAAO;QACL,eAAe,EAAE,SAAS;QAC1B,UAAU,EAAE,SAAS;QACrB,WAAW,EAAE,IAAI;QACjB,qBAAqB,EAAE,IAAI;KAC5B,CAAC;AACJ,CAAC;AA7CD,gDA6CC;AAED,SAAgB,+BAA+B,CAAC,MAAkB;;IAChE,IAAI,MAAA,MAAA,MAAM,CAAC,GAAG,0CAAE,MAAM,0CAAE,GAAG,EAAE;QAC3B,kCAAiB,CAAC,aAAa,CAC7B,QAAQ,EACR,mFAAmF,CACpF,CAAC;KACH;AACH,CAAC;AAPD,0EAOC","sourcesContent":["import { WarningAggregator } from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\n\ntype ExpoConfigIosSplash = NonNullable<NonNullable<ExpoConfig['ios']>['splash']>;\n\nconst defaultResizeMode = 'contain';\nconst defaultBackgroundColor = '#ffffff';\n\nexport interface IOSSplashConfig {\n  image?: string | null;\n  // tabletImage: string | null;\n  backgroundColor: string;\n  resizeMode: NonNullable<ExpoConfigIosSplash['resizeMode']>;\n  tabletImage: string | null;\n  // TODO: These are here just to test the functionality, the API should be more robust and account for tablet images.\n  tabletBackgroundColor: string | null;\n  dark?: {\n    image?: string | null;\n    backgroundColor?: string | null;\n    tabletImage?: string | null;\n    tabletBackgroundColor?: string | null;\n  };\n}\n\n// TODO: Maybe use an array on splash with theme value. Then remove the array in serialization for legacy and manifest.\nexport function getIosSplashConfig(config: ExpoConfig): IOSSplashConfig | null {\n  // Respect the splash screen object, don't mix and match across different splash screen objects\n  // in case the user wants the top level splash to apply to every platform except iOS.\n  if (config.ios?.splash) {\n    const splash = config.ios?.splash;\n    const image = splash.image ?? null;\n    return {\n      image,\n      resizeMode: splash.resizeMode ?? defaultResizeMode,\n      backgroundColor: splash.backgroundColor ?? defaultBackgroundColor,\n      tabletImage: splash.tabletImage ?? null,\n      tabletBackgroundColor: splash.tabletBackgroundColor,\n      dark: {\n        image: splash.dark?.image ?? null,\n        backgroundColor: splash.dark?.backgroundColor,\n        tabletImage: splash.dark?.tabletImage ?? null,\n        tabletBackgroundColor: splash.dark?.tabletBackgroundColor,\n      },\n    };\n  }\n\n  if (config.splash) {\n    const splash = config.splash;\n    const image = splash.image ?? null;\n    return {\n      image,\n      resizeMode: splash.resizeMode ?? defaultResizeMode,\n      backgroundColor: splash.backgroundColor ?? defaultBackgroundColor,\n      tabletImage: null,\n      tabletBackgroundColor: null,\n      dark: {\n        image: null,\n        backgroundColor: null,\n        tabletImage: null,\n        tabletBackgroundColor: null,\n      },\n    };\n  }\n\n  return {\n    backgroundColor: '#ffffff',\n    resizeMode: 'contain',\n    tabletImage: null,\n    tabletBackgroundColor: null,\n  };\n}\n\nexport function warnUnsupportedSplashProperties(config: ExpoConfig) {\n  if (config.ios?.splash?.xib) {\n    WarningAggregator.addWarningIOS(\n      'splash',\n      'ios.splash.xib is not supported in prebuild. Please use ios.splash.image instead.'\n    );\n  }\n}\n"]}