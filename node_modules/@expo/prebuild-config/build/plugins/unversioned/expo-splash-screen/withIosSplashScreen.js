"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.withIosSplashScreen = void 0;
const config_plugins_1 = require("@expo/config-plugins");
const debug_1 = __importDefault(require("debug"));
const getIosSplashConfig_1 = require("./getIosSplashConfig");
const withIosSplashAssets_1 = require("./withIosSplashAssets");
const withIosSplashInfoPlist_1 = require("./withIosSplashInfoPlist");
const withIosSplashXcodeProject_1 = require("./withIosSplashXcodeProject");
const debug = debug_1.default('expo:prebuild-config:expo-splash-screen:ios');
const withIosSplashScreen = (config, splash) => {
    // only warn once
    getIosSplashConfig_1.warnUnsupportedSplashProperties(config);
    // If the user didn't specify a splash object, infer the splash object from the Expo config.
    if (!splash) {
        splash = getIosSplashConfig_1.getIosSplashConfig(config);
    }
    else {
        debug(`custom splash config provided`);
    }
    debug(`config:`, splash);
    return config_plugins_1.withPlugins(config, [
        [withIosSplashInfoPlist_1.withIosSplashInfoPlist, splash],
        [withIosSplashAssets_1.withIosSplashAssets, splash],
        [withIosSplashXcodeProject_1.withIosSplashXcodeProject, splash],
    ]);
};
exports.withIosSplashScreen = withIosSplashScreen;
//# sourceMappingURL=withIosSplashScreen.js.map