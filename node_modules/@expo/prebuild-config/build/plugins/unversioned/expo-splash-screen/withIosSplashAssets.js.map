{"version":3,"file":"withIosSplashAssets.js","sourceRoot":"","sources":["../../../../src/plugins/unversioned/expo-splash-screen/withIosSplashAssets.ts"],"names":[],"mappings":"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","sourcesContent":["import { ConfigPlugin, IOSConfig, withDangerousMod } from '@expo/config-plugins';\nimport Debug from 'debug';\nimport fs from 'fs-extra';\nimport Jimp from 'jimp/es';\nimport * as path from 'path';\n\nimport {\n  ContentsJsonImage,\n  ContentsJsonImageAppearance,\n  createContentsJsonItem,\n  writeContentsJsonAsync,\n} from '../../icons/AssetContents';\nimport { IOSSplashConfig } from './getIosSplashConfig';\n\nconst debug = Debug('expo:prebuild-config:expo-splash-screen:ios:assets');\n\nconst IMAGESET_PATH = 'Images.xcassets/SplashScreen.imageset';\nconst BACKGROUND_IMAGESET_PATH = 'Images.xcassets/SplashScreenBackground.imageset';\nconst PNG_FILENAME = 'image.png';\nconst DARK_PNG_FILENAME = 'dark_image.png';\nconst TABLET_PNG_FILENAME = 'tablet_image.png';\nconst DARK_TABLET_PNG_FILENAME = 'dark_tablet_image.png';\n\nexport const withIosSplashAssets: ConfigPlugin<IOSSplashConfig> = (config, splash) => {\n  if (!splash) {\n    return config;\n  }\n  return withDangerousMod(config, [\n    'ios',\n    async config => {\n      const projectPath = IOSConfig.Paths.getSourceRoot(config.modRequest.projectRoot);\n\n      await createSplashScreenBackgroundImageAsync({\n        iosNamedProjectRoot: projectPath,\n        splash,\n      });\n\n      await configureImageAssets({\n        projectPath,\n        image: splash.image,\n        darkImage: splash.dark?.image,\n        tabletImage: splash.tabletImage,\n        darkTabletImage: splash.dark?.tabletImage,\n      });\n\n      return config;\n    },\n  ]);\n};\n\n/**\n * Creates imageset containing image for Splash/Launch Screen.\n */\nasync function configureImageAssets({\n  projectPath,\n  image,\n  darkImage,\n  tabletImage,\n  darkTabletImage,\n}: {\n  projectPath: string;\n  image?: string | null;\n  darkImage?: string | null;\n  tabletImage: string | null;\n  darkTabletImage?: string | null;\n}) {\n  const imageSetPath = path.resolve(projectPath, IMAGESET_PATH);\n\n  // ensure old SplashScreen imageSet is removed\n  await fs.remove(imageSetPath);\n\n  if (!image) {\n    return;\n  }\n\n  await writeContentsJsonFileAsync({\n    assetPath: imageSetPath,\n    image: PNG_FILENAME,\n    darkImage: darkImage ? DARK_PNG_FILENAME : null,\n    tabletImage: tabletImage ? TABLET_PNG_FILENAME : null,\n    darkTabletImage: darkTabletImage ? DARK_TABLET_PNG_FILENAME : null,\n  });\n\n  await copyImageFiles({ projectPath, image, darkImage, tabletImage, darkTabletImage });\n}\n\nasync function createPngFileAsync(color: string, filePath: string) {\n  const png = new Jimp(1, 1, color);\n  return png.writeAsync(filePath);\n}\n\nasync function createBackgroundImagesAsync({\n  projectPath,\n  color,\n  darkColor,\n  tabletColor,\n  darkTabletColor,\n}: {\n  projectPath: string;\n  color: string;\n  darkColor: string | null;\n  tabletColor: string | null;\n  darkTabletColor: string | null;\n}) {\n  await generateImagesAssetsAsync({\n    async generateImageAsset(item, fileName) {\n      await createPngFileAsync(item, path.resolve(projectPath, BACKGROUND_IMAGESET_PATH, fileName));\n    },\n    anyItem: color,\n    darkItem: darkColor,\n    tabletItem: tabletColor,\n    darkTabletItem: darkTabletColor,\n  });\n}\n\nasync function copyImageFiles({\n  projectPath,\n  image,\n  darkImage,\n  tabletImage,\n  darkTabletImage,\n}: {\n  projectPath: string;\n  image: string;\n  darkImage?: string | null;\n  tabletImage?: string | null;\n  darkTabletImage?: string | null;\n}) {\n  await generateImagesAssetsAsync({\n    async generateImageAsset(item, fileName) {\n      await fs.copyFile(item, path.resolve(projectPath, IMAGESET_PATH, fileName));\n    },\n    anyItem: image,\n    darkItem: darkImage,\n    tabletItem: tabletImage,\n    darkTabletItem: darkTabletImage,\n  });\n}\n\nasync function generateImagesAssetsAsync({\n  generateImageAsset,\n  anyItem,\n  darkItem,\n  tabletItem,\n  darkTabletItem,\n}: {\n  generateImageAsset: (item: string, fileName: string) => Promise<void>;\n  anyItem: string;\n  darkItem?: string | null;\n  tabletItem?: string | null;\n  darkTabletItem?: string | null;\n}) {\n  const items = ([\n    [anyItem, PNG_FILENAME],\n    [darkItem, DARK_PNG_FILENAME],\n    [tabletItem, TABLET_PNG_FILENAME],\n    [darkTabletItem, DARK_TABLET_PNG_FILENAME],\n  ].filter(([item]) => !!item) as unknown) as [string, string];\n\n  await Promise.all(items.map(([item, fileName]) => generateImageAsset(item, fileName)));\n}\n\nasync function createSplashScreenBackgroundImageAsync({\n  iosNamedProjectRoot,\n  splash,\n}: {\n  // Something like projectRoot/ios/MyApp/\n  iosNamedProjectRoot: string;\n  splash: IOSSplashConfig;\n}) {\n  const color = splash.backgroundColor;\n  const darkColor = splash.dark?.backgroundColor;\n  const tabletColor = splash.tabletBackgroundColor;\n  const darkTabletColor = splash.dark?.tabletBackgroundColor;\n\n  const imagesetPath = path.join(iosNamedProjectRoot, BACKGROUND_IMAGESET_PATH);\n  // Ensure the Images.xcassets/... path exists\n  await fs.remove(imagesetPath);\n  await fs.ensureDir(imagesetPath);\n\n  await createBackgroundImagesAsync({\n    projectPath: iosNamedProjectRoot,\n    color,\n    darkColor: darkColor ? darkColor : null,\n    tabletColor: tabletColor ? tabletColor : null,\n    darkTabletColor: darkTabletColor ? darkTabletColor : null,\n  });\n\n  await writeContentsJsonFileAsync({\n    assetPath: path.resolve(iosNamedProjectRoot, BACKGROUND_IMAGESET_PATH),\n    image: PNG_FILENAME,\n    darkImage: darkColor ? DARK_PNG_FILENAME : null,\n    tabletImage: tabletColor ? TABLET_PNG_FILENAME : null,\n    darkTabletImage: darkTabletColor ? DARK_TABLET_PNG_FILENAME : null,\n  });\n}\n\nconst darkAppearances: ContentsJsonImageAppearance[] = [\n  {\n    appearance: 'luminosity',\n    value: 'dark',\n  } as ContentsJsonImageAppearance,\n];\n\nexport function buildContentsJsonImages({\n  image,\n  darkImage,\n  tabletImage,\n  darkTabletImage,\n}: {\n  image: string;\n  tabletImage: string | null;\n  darkImage: string | null;\n  darkTabletImage: string | null;\n}): ContentsJsonImage[] {\n  return [\n    // Phone light\n    createContentsJsonItem({\n      idiom: 'universal',\n      filename: image,\n      scale: '1x',\n    }),\n    createContentsJsonItem({\n      idiom: 'universal',\n      scale: '2x',\n    }),\n    createContentsJsonItem({\n      idiom: 'universal',\n      scale: '3x',\n    }),\n    // Phone dark\n    darkImage &&\n      createContentsJsonItem({\n        idiom: 'universal',\n        appearances: darkAppearances,\n        filename: darkImage,\n        scale: '1x',\n      }),\n    darkImage &&\n      createContentsJsonItem({\n        idiom: 'universal',\n        appearances: darkAppearances,\n        scale: '2x',\n      }),\n    darkImage &&\n      createContentsJsonItem({\n        idiom: 'universal',\n        appearances: darkAppearances,\n        scale: '3x',\n      }),\n    // Tablet light\n    tabletImage &&\n      createContentsJsonItem({\n        idiom: 'ipad',\n        filename: tabletImage,\n        scale: '1x',\n      }),\n    tabletImage &&\n      createContentsJsonItem({\n        idiom: 'ipad',\n        scale: '2x',\n      }),\n    // Phone dark\n    darkTabletImage &&\n      createContentsJsonItem({\n        idiom: 'ipad',\n        appearances: darkAppearances,\n        filename: darkTabletImage ?? undefined,\n        scale: '1x',\n      }),\n    darkTabletImage &&\n      createContentsJsonItem({\n        idiom: 'ipad',\n        appearances: darkAppearances,\n        scale: '2x',\n      }),\n  ].filter(Boolean) as ContentsJsonImage[];\n}\n\nasync function writeContentsJsonFileAsync({\n  assetPath,\n  image,\n  darkImage,\n  tabletImage,\n  darkTabletImage,\n}: {\n  assetPath: string;\n  image: string;\n  darkImage: string | null;\n  tabletImage: string | null;\n  darkTabletImage: string | null;\n}) {\n  const images = buildContentsJsonImages({ image, darkImage, tabletImage, darkTabletImage });\n\n  debug(`create contents.json:`, assetPath);\n  debug(`use images:`, images);\n  await writeContentsJsonAsync(assetPath, { images });\n}\n"]}