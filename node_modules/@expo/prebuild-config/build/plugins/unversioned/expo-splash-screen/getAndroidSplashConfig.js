"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAndroidDarkSplashConfig = exports.getAndroidSplashConfig = void 0;
const defaultResizeMode = 'contain';
function getAndroidSplashConfig(config) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w;
    // Respect the splash screen object, don't mix and match across different splash screen objects
    // in case the user wants the top level splash to apply to every platform except android.
    if ((_a = config.android) === null || _a === void 0 ? void 0 : _a.splash) {
        const splash = (_b = config.android) === null || _b === void 0 ? void 0 : _b.splash;
        return {
            xxxhdpi: (_d = (_c = splash.xxxhdpi) !== null && _c !== void 0 ? _c : splash.image) !== null && _d !== void 0 ? _d : null,
            xxhdpi: (_f = (_e = splash.xxhdpi) !== null && _e !== void 0 ? _e : splash.image) !== null && _f !== void 0 ? _f : null,
            xhdpi: (_h = (_g = splash.xhdpi) !== null && _g !== void 0 ? _g : splash.image) !== null && _h !== void 0 ? _h : null,
            hdpi: (_k = (_j = splash.hdpi) !== null && _j !== void 0 ? _j : splash.image) !== null && _k !== void 0 ? _k : null,
            mdpi: (_m = (_l = splash.mdpi) !== null && _l !== void 0 ? _l : splash.image) !== null && _m !== void 0 ? _m : null,
            backgroundColor: (_o = splash.backgroundColor) !== null && _o !== void 0 ? _o : null,
            resizeMode: (_p = splash.resizeMode) !== null && _p !== void 0 ? _p : defaultResizeMode,
        };
    }
    if (config.splash) {
        const splash = config.splash;
        return {
            xxxhdpi: (_q = splash.image) !== null && _q !== void 0 ? _q : null,
            xxhdpi: (_r = splash.image) !== null && _r !== void 0 ? _r : null,
            xhdpi: (_s = splash.image) !== null && _s !== void 0 ? _s : null,
            hdpi: (_t = splash.image) !== null && _t !== void 0 ? _t : null,
            mdpi: (_u = splash.image) !== null && _u !== void 0 ? _u : null,
            backgroundColor: (_v = splash.backgroundColor) !== null && _v !== void 0 ? _v : null,
            resizeMode: (_w = splash.resizeMode) !== null && _w !== void 0 ? _w : defaultResizeMode,
        };
    }
    return null;
}
exports.getAndroidSplashConfig = getAndroidSplashConfig;
// TODO: dark isn't supported in the Expo config spec yet.
function getAndroidDarkSplashConfig(config) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;
    // Respect the splash screen object, don't mix and match across different splash screen objects
    // in case the user wants the top level splash to apply to every platform except android.
    if ((_b = (_a = config.android) === null || _a === void 0 ? void 0 : _a.splash) === null || _b === void 0 ? void 0 : _b.dark) {
        const splash = (_d = (_c = config.android) === null || _c === void 0 ? void 0 : _c.splash) === null || _d === void 0 ? void 0 : _d.dark;
        const lightTheme = getAndroidSplashConfig(config);
        return {
            xxxhdpi: (_f = (_e = splash.xxxhdpi) !== null && _e !== void 0 ? _e : splash.image) !== null && _f !== void 0 ? _f : null,
            xxhdpi: (_h = (_g = splash.xxhdpi) !== null && _g !== void 0 ? _g : splash.image) !== null && _h !== void 0 ? _h : null,
            xhdpi: (_k = (_j = splash.xhdpi) !== null && _j !== void 0 ? _j : splash.image) !== null && _k !== void 0 ? _k : null,
            hdpi: (_m = (_l = splash.hdpi) !== null && _l !== void 0 ? _l : splash.image) !== null && _m !== void 0 ? _m : null,
            mdpi: (_p = (_o = splash.mdpi) !== null && _o !== void 0 ? _o : splash.image) !== null && _p !== void 0 ? _p : null,
            backgroundColor: (_q = splash.backgroundColor) !== null && _q !== void 0 ? _q : null,
            // Can't support dark resizeMode because the resize mode is hardcoded into the MainActivity.java
            resizeMode: (_r = lightTheme === null || lightTheme === void 0 ? void 0 : lightTheme.resizeMode) !== null && _r !== void 0 ? _r : defaultResizeMode,
        };
    }
    return null;
}
exports.getAndroidDarkSplashConfig = getAndroidDarkSplashConfig;
//# sourceMappingURL=getAndroidSplashConfig.js.map