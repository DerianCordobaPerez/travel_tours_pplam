"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_plugins_1 = require("@expo/config-plugins");
const createLegacyPlugin_1 = require("./createLegacyPlugin");
const withAppleSignInEntitlement = config => {
    return config_plugins_1.withEntitlementsPlist(config, config => {
        config.modResults = setAppleSignInEntitlement(config, config.modResults);
        return config;
    });
};
function setAppleSignInEntitlement(config, entitlementsPlist) {
    var _a;
    if ((_a = config.ios) === null || _a === void 0 ? void 0 : _a.usesAppleSignIn) {
        return {
            ...entitlementsPlist,
            'com.apple.developer.applesignin': ['Default'],
        };
    }
    return entitlementsPlist;
}
exports.default = createLegacyPlugin_1.createLegacyPlugin({
    packageName: 'expo-apple-authentication',
    fallback: withAppleSignInEntitlement,
});
//# sourceMappingURL=expo-apple-authentication.js.map