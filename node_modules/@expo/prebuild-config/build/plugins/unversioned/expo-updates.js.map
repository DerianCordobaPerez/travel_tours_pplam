{"version":3,"file":"expo-updates.js","sourceRoot":"","sources":["../../../src/plugins/unversioned/expo-updates.ts"],"names":[],"mappings":";;;AAAA,yDAM8B;AAE9B,mCAAmC;AAEnC,MAAM,WAAW,GAAG,cAAc,CAAC;AAE5B,MAAM,eAAe,GAA2C,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;IACvF,OAAO,iCAAgB,CAAC,MAAM,EAAE;QAC9B,eAAe,EAAE,IAAI;QACrB,gDAAgD;QAChD,MAAM,EAAE,CAAC,WAAW,EAAE,KAAK,CAAC;QAC5B,6DAA6D;QAC7D,QAAQ,EAAE,oCAAmB,CAAC,MAAM,CAAC,EAAE,CAAC,sBAAsB,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,WAAW,CAAC;KAC5F,CAAC,CAAC;AACL,CAAC,CAAC;AARW,QAAA,eAAe,mBAQ1B;AAEF,MAAM,sBAAsB,GAA2C,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;IACvF,MAAM,GAAG,8BAAa,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC1D,MAAM,GAAG,0BAAS,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IACtD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,kBAAe,uBAAe,CAAC","sourcesContent":["import {\n  AndroidConfig,\n  ConfigPlugin,\n  createRunOncePlugin,\n  IOSConfig,\n  withStaticPlugin,\n} from '@expo/config-plugins';\n\n// Local unversioned updates plugin\n\nconst packageName = 'expo-updates';\n\nexport const withExpoUpdates: ConfigPlugin<{ expoUsername: string }> = (config, props) => {\n  return withStaticPlugin(config, {\n    _isLegacyPlugin: true,\n    // Pass props to the static plugin if it exists.\n    plugin: [packageName, props],\n    // If the static plugin isn't found, use the unversioned one.\n    fallback: createRunOncePlugin(config => withUnversionedUpdates(config, props), packageName),\n  });\n};\n\nconst withUnversionedUpdates: ConfigPlugin<{ expoUsername: string }> = (config, props) => {\n  config = AndroidConfig.Updates.withUpdates(config, props);\n  config = IOSConfig.Updates.withUpdates(config, props);\n  return config;\n};\n\nexport default withExpoUpdates;\n"]}