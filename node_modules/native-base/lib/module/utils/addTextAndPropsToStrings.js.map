{"version":3,"sources":["addTextAndPropsToStrings.tsx"],"names":["addTextAndPropsToStrings","children","props","childArray","React","Children","map","child","cloneElement"],"mappings":"oQAAA,oDACA,2E,8HAEO,GAAMA,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,QAAD,CAAgBC,KAAhB,CAA+B,CACrE,GAAMC,CAAAA,UAAU,CAAGC,eAAMC,QAAN,CAAeC,GAAf,CAAmBL,QAAnB,CAA6B,SAACM,KAAD,CAAW,CACzD,GAAI,MAAOA,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAC7B,MAAO,8BAAC,aAAD,0BAAUL,KAAV,+EAAkBK,KAAlB,CAAP,CACD,CAFD,IAEO,CACL,GAAI,CAACA,KAAL,CAAY,CACV,MAAO,KAAP,CACD,CACD,MAAOH,gBAAMI,YAAN,CAAmBD,KAAnB,0BACFL,KADE,CAEFK,KAAK,CAACL,KAFJ,EAAP,CAID,CACF,CAZkB,CAAnB,CAaA,MAAOC,CAAAA,UAAP,CACD,CAfM,C","sourcesContent":["import React from 'react';\nimport Text from '../components/primitives/Text';\n\nexport const addTextAndPropsToStrings = (children: any, props: any) => {\n  const childArray = React.Children.map(children, (child) => {\n    if (typeof child === 'string') {\n      return <Text {...props}>{child}</Text>;\n    } else {\n      if (!child) {\n        return null;\n      }\n      return React.cloneElement(child, {\n        ...props,\n        ...child.props,\n      });\n    }\n  });\n  return childArray;\n};\n"]}