{"version":3,"sources":["filterShadowProps.ts"],"names":["filterShadowProps","props","ignoredProps","OS","style","shadowProps","remainingProps"],"mappings":"yVAAA,wCACA,8DAEO,GAAMA,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAC/BC,KAD+B,CAE/BC,YAF+B,CAG/BC,EAH+B,CAI5B,yBACH,GAAIA,EAAE,GAAK,KAAX,CAAkB,CAChB,+BAAYD,YAAZ,CAA6BD,KAA7B,EACD,CACD,GAAIG,CAAAA,KAAK,sBAAGF,YAAY,CAACE,KAAhB,4BAAyB,EAAlC,CAJG,qBAKiC,2BAAgBH,KAAhB,CAAuB,CACzD,aADyD,CAEzD,cAFyD,CAGzD,eAHyD,CAIzD,cAJyD,CAAvB,CALjC,mEAKEI,WALF,sBAKeC,cALf,sBAWH,GAAI,CAAC,oBAAQD,WAAR,CAAL,CAA2B,CACzBD,KAAK,0BAAQA,KAAR,CAAkBC,WAAlB,CAAL,CACD,CACD,+BAAYC,cAAZ,CAA+BJ,YAA/B,EAA6CE,KAAK,CAALA,KAA7C,GACD,CAnBM,C","sourcesContent":["import { extractInObject } from './../theme/tools/';\nimport isEmpty from 'lodash.isempty';\n\nexport const filterShadowProps = (\n  props: any,\n  ignoredProps: any,\n  OS: string\n) => {\n  if (OS !== 'web') {\n    return { ...ignoredProps, ...props };\n  }\n  let style = ignoredProps.style ?? {};\n  let [shadowProps, remainingProps] = extractInObject(props, [\n    'shadowColor',\n    'shadowOffset',\n    'shadowOpacity',\n    'shadowRadius',\n  ]);\n  if (!isEmpty(shadowProps)) {\n    style = { ...style, ...shadowProps };\n  }\n  return { ...remainingProps, ...ignoredProps, style };\n};\n"]}