{"version":3,"sources":["component.tsx"],"names":["Component","componentTheme","React","forwardRef","ref","children","props","StyledComponent","color","background","padding","margin","space","layout","flexbox","border","position","typography","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customTypography","customLayout","calculatedProps"],"mappings":"qWAAA,oDAEA,wEACA,6FAEA,2CAYA,iD,sGAYe,kBACbA,SADa,CAEbC,cAFa,CAGb,gBACA,MAAOC,gBAAMC,UAAN,CACL,cAAoDC,GAApD,CAAiE,IAA9DC,CAAAA,QAA8D,MAA9DA,QAA8D,CAAjDC,KAAiD,0DAC/D,GAAMC,CAAAA,eAAe,CAAG,oBAAOP,SAAP,EACtBQ,mBADsB,CAEtBC,wBAFsB,CAGtBC,qBAHsB,CAItBC,oBAJsB,CAKtBC,mBALsB,CAMtBC,oBANsB,CAOtBC,qBAPsB,CAQtBC,oBARsB,CAStBC,sBATsB,CAUtBC,wBAVsB,CAWtBC,2BAXsB,CAYtBC,yBAZsB,CAatBC,6BAbsB,CActBC,0BAdsB,CAetBC,yBAfsB,CAgBtBC,wBAhBsB,CAiBtBC,6BAjBsB,CAkBtBC,yBAlBsB,CAAxB,CAoBA,GAAMC,CAAAA,eAAe,CAAG,2DAA2BzB,cAA3B,CAA2CK,KAA3C,CAAxB,CACA,MACE,8BAAC,eAAD,0BAAsBoB,eAAtB,EAA6C,GAAG,CAAEtB,GAAlD,8EACGC,QADH,CADF,CAKD,CA5BI,CAAP,CA8BD","sourcesContent":["import React from 'react';\nimport type { AnyStyledComponent } from 'styled-components';\nimport styled from 'styled-components/native';\nimport { usePropsWithComponentTheme } from '../hooks/useThemeProps/usePropsWithComponentTheme';\nimport type { ComponentTheme } from '../theme';\nimport {\n  background,\n  border,\n  color,\n  flexbox,\n  layout,\n  margin,\n  padding,\n  position,\n  space,\n  typography,\n} from 'styled-system';\nimport {\n  customBackground,\n  customBorder,\n  customExtra,\n  customLayout,\n  customOutline,\n  customPosition,\n  customShadow,\n  customTypography,\n} from '../utils/customProps';\nimport type { FactoryComponentProps } from './types';\n\nexport default function <P>(\n  Component: React.ComponentType<P>,\n  componentTheme?: ComponentTheme\n) {\n  return React.forwardRef(\n    ({ children, ...props }: P & FactoryComponentProps, ref: any) => {\n      const StyledComponent = styled(Component as AnyStyledComponent)(\n        color,\n        background,\n        padding,\n        margin,\n        space,\n        layout,\n        flexbox,\n        border,\n        position,\n        typography,\n        customPosition,\n        customBorder,\n        customBackground,\n        customOutline,\n        customShadow,\n        customExtra,\n        customTypography,\n        customLayout\n      );\n      const calculatedProps = usePropsWithComponentTheme(componentTheme, props);\n      return (\n        <StyledComponent {...(calculatedProps as P)} ref={ref}>\n          {children}\n        </StyledComponent>\n      );\n    }\n  );\n}\n"]}