{"version":3,"sources":["useThemeProps.test.tsx"],"names":["describe","wrapper","children","frame","x","y","width","height","insets","top","left","right","bottom","test","result","expect","current","toEqual","_text","color","fontSize","fontWeight","textTransform","px","py","borderRadius","bg","borderWidth","borderColor"],"mappings":"mFAAA,oDACA,0DACA,iEACA,wD,8HAEAA,QAAQ,CAAC,eAAD,CAAkB,UAAM,CAC9B,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,UAAGC,CAAAA,QAAH,MAAGA,QAAH,OACd,8BAAC,sCAAD,EACE,oBAAoB,CAAE,CACpBC,KAAK,CAAE,CAAEC,CAAC,CAAE,CAAL,CAAQC,CAAC,CAAE,CAAX,CAAcC,KAAK,CAAE,CAArB,CAAwBC,MAAM,CAAE,CAAhC,CADa,CAEpBC,MAAM,CAAE,CAAEC,GAAG,CAAE,CAAP,CAAUC,IAAI,CAAE,CAAhB,CAAmBC,KAAK,CAAE,CAA1B,CAA6BC,MAAM,CAAE,CAArC,CAFY,CADxB,4EAMGV,QANH,CADc,EAAhB,CAUAW,IAAI,CAAC,0BAAD,CAA6B,UAAM,iBAClB,2BAAW,iBAAM,iCAAc,KAAd,CAAqB,EAArB,CAAN,EAAX,CAA2C,CAAEZ,OAAO,CAAPA,OAAF,CAA3C,CADkB,CAC7Ba,MAD6B,aAC7BA,MAD6B,CAErCC,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CAA+B,EAA/B,EACD,CAHG,CAAJ,CAKAJ,IAAI,CAAC,4BAAD,CAA+B,UAAM,kBACpB,2BAAW,iBAAM,iCAAc,OAAd,CAAuB,EAAvB,CAAN,EAAX,CAA6C,CAC9DZ,OAAO,CAAPA,OAD8D,CAA7C,CADoB,CAC/Ba,MAD+B,cAC/BA,MAD+B,CAIvCC,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CAA+B,CAC7BC,KAAK,CAAE,CACLC,KAAK,CAAE,WADF,CAELC,QAAQ,CAAE,IAFL,CAGLC,UAAU,CAAE,MAHP,CAILC,aAAa,CAAE,WAJV,CADsB,CAO7BC,EAAE,CAAE,CAPyB,CAQ7BC,EAAE,CAAE,CARyB,CAS7BC,YAAY,CAAE,MATe,CAU7BC,EAAE,CAAE,WAVyB,CAW7BC,WAAW,CAAE,CAXgB,CAY7BC,WAAW,CAAE,aAZgB,CAA/B,EAcD,CAlBG,CAAJ,CAoBAf,IAAI,CAAC,oBAAD,CAAuB,UAAM,kBACZ,2BAAW,iBAAM,iCAAc,OAAd,CAAuB,CAAEW,EAAE,CAAE,CAAN,CAAvB,CAAN,EAAX,CAAoD,CACrEvB,OAAO,CAAPA,OADqE,CAApD,CADY,CACvBa,MADuB,cACvBA,MADuB,CAI/BC,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CAA+B,CAC7BC,KAAK,CAAE,CACLC,KAAK,CAAE,WADF,CAELC,QAAQ,CAAE,IAFL,CAGLC,UAAU,CAAE,MAHP,CAILC,aAAa,CAAE,WAJV,CADsB,CAO7BC,EAAE,CAAE,CAPyB,CAQ7BC,EAAE,CAAE,CARyB,CAS7BC,YAAY,CAAE,MATe,CAU7BC,EAAE,CAAE,WAVyB,CAW7BC,WAAW,CAAE,CAXgB,CAY7BC,WAAW,CAAE,aAZgB,CAA/B,EAcD,CAlBG,CAAJ,CAmBD,CAvDO,CAAR","sourcesContent":["import React from 'react';\nimport { useThemeProps } from './../../hooks/useThemeProps';\nimport { NativeBaseProvider } from '../../core/NativeBaseProvider';\nimport { renderHook } from '@testing-library/react-hooks';\n\ndescribe('useThemeProps', () => {\n  const wrapper = ({ children }: any) => (\n    <NativeBaseProvider\n      initialWindowMetrics={{\n        frame: { x: 0, y: 0, width: 0, height: 0 },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n      }}\n    >\n      {children}\n    </NativeBaseProvider>\n  );\n  test('Box component + no props', () => {\n    const { result } = renderHook(() => useThemeProps('Box', {}), { wrapper });\n    expect(result.current).toEqual({});\n  });\n\n  test('Badge Component + no props', () => {\n    const { result } = renderHook(() => useThemeProps('Badge', {}), {\n      wrapper,\n    });\n    expect(result.current).toEqual({\n      _text: {\n        color: 'muted.900',\n        fontSize: 'xs',\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n      },\n      px: 3,\n      py: 1,\n      borderRadius: 'pill',\n      bg: 'muted.300',\n      borderWidth: 1,\n      borderColor: 'transparent',\n    });\n  });\n\n  test('Badge + some props', () => {\n    const { result } = renderHook(() => useThemeProps('Badge', { py: 3 }), {\n      wrapper,\n    });\n    expect(result.current).toEqual({\n      _text: {\n        color: 'muted.900',\n        fontSize: 'xs',\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n      },\n      px: 3,\n      py: 3,\n      borderRadius: 'pill',\n      bg: 'muted.300',\n      borderWidth: 1,\n      borderColor: 'transparent',\n    });\n  });\n});\n"]}