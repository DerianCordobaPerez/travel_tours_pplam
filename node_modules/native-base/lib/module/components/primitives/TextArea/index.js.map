{"version":3,"sources":["index.tsx"],"names":["TextArea","ref","wrapperRef","props","totalLines","newProps"],"mappings":"wbAAA,qDACA,+BACA,2D,oIAQA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA2CC,GAA3C,CAAwD,IAArDC,CAAAA,UAAqD,MAArDA,UAAqD,CAAtCC,KAAsC,oFACnC,sCAAmB,UAAnB,CAA+BA,KAA/B,CADmC,CAC/DC,UAD+D,qBAC/DA,UAD+D,CAChDC,QADgD,2EAEvE,MACE,8BAAC,YAAD,0BACMA,QADN,EAEE,aAAa,CAAED,UAFjB,CAGE,UAAU,CAAEF,UAHd,CAIE,GAAG,CAAED,GAJP,8EADF,CAQD,CAVD,C,aAYe,gBAAK,sBAAWD,QAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Input, IInputProps } from '../Input';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nexport interface ITextAreaProps extends IInputProps {\n  /**\n   * Maps to react-native TextInput's numberOfLines.\n   */\n  totalLines?: number;\n}\n\nconst TextArea = ({ wrapperRef, ...props }: ITextAreaProps, ref: any) => {\n  const { totalLines, ...newProps } = usePropsResolution('TextArea', props);\n  return (\n    <Input\n      {...newProps}\n      numberOfLines={totalLines}\n      wrapperRef={wrapperRef}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(TextArea));\n"]}