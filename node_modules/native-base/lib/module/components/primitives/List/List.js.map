{"version":3,"sources":["List.tsx"],"names":["List","ref","children","divider","props","_text","_hover","_focus","_pressed","newProps","React","Children","map","child","ind","cloneElement","index"],"mappings":"wbAAA,qDACA,+BAEA,2D,+HAEA,GAAMA,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAA8CC,GAA9C,CAA4D,IAAzDC,CAAAA,QAAyD,MAAzDA,QAAyD,CAA/CC,OAA+C,MAA/CA,OAA+C,CAAnCC,KAAmC,4FACd,sCACvD,MADuD,CAEvDA,KAFuD,CADc,CAC/DC,KAD+D,qBAC/DA,KAD+D,CACxDC,MADwD,qBACxDA,MADwD,CAChDC,MADgD,qBAChDA,MADgD,CACxCC,QADwC,qBACxCA,QADwC,CAC3BC,QAD2B,mGAMvEP,QAAQ,CAAGQ,eAAMC,QAAN,CAAeC,GAAf,CAAmBV,QAAnB,CAA6B,SAACW,KAAD,CAAaC,GAAb,CAA6B,4DACnE,MAAOJ,gBAAMK,YAAN,CAAmBF,KAAnB,CAA0B,CAC/BG,KAAK,CAAEF,GADwB,CAE/BT,KAAK,0BAAOA,KAAP,eAAiBQ,KAAK,CAACT,KAAvB,eAAiB,aAAaC,KAA9B,CAF0B,CAG/BC,MAAM,0BAAOA,MAAP,gBAAkBO,KAAK,CAACT,KAAxB,eAAkB,cAAaE,MAA/B,CAHyB,CAI/BC,MAAM,0BAAOA,MAAP,gBAAkBM,KAAK,CAACT,KAAxB,eAAkB,cAAaG,MAA/B,CAJyB,CAK/BC,QAAQ,0BAAOA,QAAP,gBAAoBK,KAAK,CAACT,KAA1B,eAAoB,cAAaI,QAAjC,CALuB,CAA1B,CAAP,CAOD,CARU,CAAX,CAUA,MACE,8BAAC,aAAD,wBAAQ,OAAO,CAAEL,OAAjB,CAA0B,GAAG,CAAEF,GAA/B,EAAwCQ,QAAxC,+EACGP,QADH,CADF,CAKD,CArBD,C,aAwBe,gBAAK,sBAAWF,IAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { VStack } from '../Stack';\nimport type { IListProps, IListItemProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\n\nconst List = ({ children, divider, ...props }: IListProps, ref?: any) => {\n  const { _text, _hover, _focus, _pressed, ...newProps } = usePropsResolution(\n    'List',\n    props\n  );\n  // add props to children\n  children = React.Children.map(children, (child: any, ind: number) => {\n    return React.cloneElement(child, {\n      index: ind,\n      _text: { ..._text, ...child.props?._text },\n      _hover: { ..._hover, ...child.props?._hover },\n      _focus: { ..._focus, ...child.props?._focus },\n      _pressed: { ..._pressed, ...child.props?._pressed },\n    });\n  });\n\n  return (\n    <VStack divider={divider} ref={ref} {...newProps}>\n      {children}\n    </VStack>\n  );\n};\n\nexport type { IListProps, IListItemProps };\nexport default memo(forwardRef(List));\n"]}