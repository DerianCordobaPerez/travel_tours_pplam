{"version":3,"sources":["ListItem.tsx"],"names":["ListItem","ref","children","props","index","start","unordered","ul","ordered","ol","_text","borderTopWidth","_hover","_focus","_pressed","newProps","_ref","React","useRef","isHovered","pressableProps","remainingProps","Object","keys","length","isPressed","isFocusVisible","focusTextProps","hoverTextProps","pressedTextProps","transform","scale","fontWeight"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../Box';\nimport type { IListItemProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs } from '../../../utils';\nimport { Pressable } from '../Pressable';\nimport { useHover } from '@react-native-aria/interactions';\nimport { extractInObject } from '../../../theme/tools';\n\nconst ListItem = ({ children, ...props }: IListItemProps, ref: any) => {\n  const {\n    index,\n    start,\n    unordered,\n    ul,\n    ordered,\n    ol,\n    _text,\n    borderTopWidth,\n    _hover,\n    _focus,\n    _pressed,\n    ...newProps\n  } = usePropsResolution('ListItem', props);\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  // Extracting Pressable Props from newProps\n  const [pressableProps, remainingProps] = extractInObject(newProps, [\n    'onPress',\n    'unstable_pressDelay',\n    'android_ripple',\n    'android_disableSound',\n    'delayLongPress',\n    'hitSlop',\n    'disabled',\n    'onLongPress',\n    'onPressIn',\n    'onPressOut',\n    'pressRetentionOffset',\n    'testOnly_pressed',\n    'onHoverIn',\n    'onHoverOut',\n    'onFocus',\n    'onBlur',\n    '_pressed',\n    '_focus',\n  ]);\n\n  return Object.keys(pressableProps).length !== 0 ? (\n    // Checking if any Pressable Props present\n    <Pressable\n      accessibilityRole=\"button\"\n      accessibilityLabel={`List-Item-${index + start}`}\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      {...pressableProps}\n      {...remainingProps}\n      borderTopWidth={index ? borderTopWidth : 0}\n      ref={ref}\n      _hover={_hover}\n      _focus={_focus}\n      _pressed={_pressed}\n    >\n      {({ isPressed, isHovered, isFocusVisible }: any) => {\n        const focusTextProps = isFocusVisible &&\n          _focus?._text && { ..._focus._text };\n        const hoverTextProps = isHovered &&\n          _hover?._text && { ..._hover._text };\n        const pressedTextProps = isPressed &&\n          _pressed?._text && { ..._pressed._text };\n        return (\n          <>\n            <Box flexDirection=\"row\" alignItems=\"center\" pl={2}>\n              {ul || unordered ? ( //Adding disc in front of ListItem\n                <Box\n                  style={{ transform: [{ scale: 1.5 }] }}\n                  mr={2}\n                  _text={{\n                    fontWeight: 'bold',\n                    ..._text,\n                    ...hoverTextProps,\n                    ...focusTextProps,\n                    ...pressedTextProps,\n                  }}\n                >\n                  •\n                </Box>\n              ) : null}\n              {ol || ordered ? ( //Adding index number in front of ListItem\n                <Box\n                  mr={2}\n                  _text={{\n                    fontWeight: 'bold',\n                    ..._text,\n                    ...hoverTextProps,\n                    ...focusTextProps,\n                    ...pressedTextProps,\n                  }}\n                >\n                  {index + start + '.'}\n                </Box>\n              ) : null}\n            </Box>\n            <Box\n              flexDirection=\"row\"\n              alignItems=\"center\"\n              _text={{\n                ..._text,\n                ...hoverTextProps,\n                ...focusTextProps,\n                ...pressedTextProps,\n              }}\n            >\n              {children}\n            </Box>\n          </>\n        );\n      }}\n    </Pressable>\n  ) : (\n    // If no Pressable Props passed by user render Box instead of Pressable\n    <Box\n      accessibilityRole=\"text\"\n      accessibilityLabel={`List-Item-${index + start}`}\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      {...remainingProps}\n      borderTopWidth={index ? borderTopWidth : 0}\n      ref={mergeRefs([ref, _ref])}\n      {...(isHovered && _hover)}\n    >\n      <Box flexDirection=\"row\" alignItems=\"center\" pl={2}>\n        {ul || unordered ? ( //Adding disc in front of ListItem\n          <Box\n            style={{ transform: [{ scale: 1.5 }] }}\n            mr={2}\n            _text={{ fontWeight: 'bold', ..._text }}\n          >\n            •\n          </Box>\n        ) : null}\n        {ol || ordered ? ( //Adding index number in front of ListItem\n          <Box mr={2} _text={{ fontWeight: 'bold', ..._text }}>\n            {index + start + '.'}\n          </Box>\n        ) : null}\n      </Box>\n      <Box\n        flex={1}\n        flexDirection=\"row\"\n        alignItems=\"center\"\n        _text={{\n          ..._text,\n          ...(isHovered && _hover?._text && { ..._hover._text }),\n        }}\n      >\n        {children}\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(ListItem));\n"]}