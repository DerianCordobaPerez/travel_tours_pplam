{"version":3,"sources":["index.tsx"],"names":["StyledSpinner","ActivityIndicator","color","space","position","Spinner","props","ref","resolvedProps","resolvedColor"],"mappings":"wbAAA,qDACA,yCACA,wEACA,2CACA,2DACA,qC,mIAGA,GAAMA,CAAAA,aAAa,CAAG,oBAAOC,8BAAP,EACpBC,mBADoB,CAEpBC,mBAFoB,CAGpBC,sBAHoB,CAAtB,CAKA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAuBC,GAAvB,CAAoC,yBACd,sCAAmB,SAAnB,CAA8BD,KAA9B,CADc,CAC1CJ,KAD0C,qBAC1CA,KAD0C,CAChCM,aADgC,sEAElD,GAAMC,CAAAA,aAAa,CAAG,oBAAS,QAAT,CAAmBP,KAAnB,CAAtB,CAEA,MACE,8BAAC,aAAD,wBACE,UAAU,KADZ,CAEE,kBAAkB,CAAC,SAFrB,EAGMM,aAHN,EAKE,KAAK,CAAEC,aALT,CAME,GAAG,CAAEF,GANP,8EADF,CAUD,CAdD,C,aAgBe,gBAAK,sBAAWF,OAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ActivityIndicator } from 'react-native';\nimport styled from 'styled-components/native';\nimport { color, space, position } from 'styled-system';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useToken } from '../../../hooks';\nimport type { ISpinnerProps } from './types';\n\nconst StyledSpinner = styled(ActivityIndicator)<ISpinnerProps>(\n  color,\n  space,\n  position\n);\nconst Spinner = (props: ISpinnerProps, ref: any) => {\n  const { color, ...resolvedProps } = usePropsResolution('Spinner', props);\n  const resolvedColor = useToken('colors', color);\n\n  return (\n    <StyledSpinner\n      accessible\n      accessibilityLabel=\"loading\"\n      {...resolvedProps}\n      // TODO: Fix color resolution issue in styled component.\n      color={resolvedColor}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(Spinner));\nexport type { ISpinnerProps };\n"]}