{"version":3,"sources":["Icon.tsx"],"names":["Icon","ref","as","props","size","resolvedProps","tokenizedFontSize","isJSX","React","isValidElement","StyledAs","cloneElement"],"mappings":"wbAAA,qDACA,qCAEA,0DACA,yC,+HAEA,GAAMA,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAA+BC,GAA/B,CAA6C,IAA1CC,CAAAA,EAA0C,MAA1CA,EAA0C,CAAnCC,KAAmC,4EACrB,8BAAmB,MAAnB,CAA2BA,KAA3B,CADqB,CAChDC,IADgD,qBAChDA,IADgD,CACvCC,aADuC,qEAExD,GAAMC,CAAAA,iBAAiB,CAAG,oBAAS,OAAT,CAAkBF,IAAlB,CAA1B,CAEA,GAAI,CAACF,EAAL,CAAS,CACP,MAAO,8BAAC,gBAAD,wBAAS,IAAI,CAAEE,IAAf,EAAyBC,aAAzB,EAAwC,GAAG,CAAEJ,GAA7C,+EAAP,CACD,CACD,GAAMM,CAAAA,KAAK,CAAGC,eAAMC,cAAN,CAAqBP,EAArB,CAAd,CACA,GAAMQ,CAAAA,QAAQ,CAAG,qBACfH,KAAK,CACD,SAACF,aAAD,QACEG,gBAAMG,YAAN,CAAmBT,EAAnB,0BACKG,aADL,CAEKH,EAAE,CAACC,KAFR,EADF,EADC,CAMDD,EAPW,CAAjB,CAUA,MACE,8BAAC,QAAD,0BACMG,aADN,EAEE,QAAQ,CAAEC,iBAFZ,CAGE,UAAU,CAAEA,iBAHd,CAIE,IAAI,CAAEF,IAJR,CAKE,GAAG,CAAEH,GALP,8EADF,CASD,CA3BD,C,aA6Be,gBAAK,sBAAWD,IAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { useToken, usePropsResolution } from '../../../hooks';\nimport type { IIconProps } from './types';\nimport SVGIcon from './SVGIcon';\nimport { Factory } from '../../../factory';\n\nconst Icon = ({ as, ...props }: IIconProps, ref?: any) => {\n  const { size, ...resolvedProps } = usePropsResolution('Icon', props);\n  const tokenizedFontSize = useToken('space', size);\n\n  if (!as) {\n    return <SVGIcon size={size} {...resolvedProps} ref={ref} />;\n  }\n  const isJSX = React.isValidElement(as);\n  const StyledAs = Factory(\n    isJSX\n      ? (resolvedProps) =>\n          React.cloneElement(as, {\n            ...resolvedProps,\n            ...as.props,\n          })\n      : as\n  );\n\n  return (\n    <StyledAs\n      {...resolvedProps}\n      fontSize={tokenizedFontSize}\n      lineHeight={tokenizedFontSize}\n      size={size}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(Icon));\n"]}