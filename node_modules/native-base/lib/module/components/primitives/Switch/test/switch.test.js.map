{"version":3,"sources":["switch.test.tsx"],"names":["jest","useFakeTimers","describe","it","frame","x","y","width","height","insets","top","left","right","bottom","getAllByRole","switches","expect","props","value","toBe","disabled"],"mappings":"mFAAA,oDACA,0DACA,uEAEA,uD,6IAEAA,IAAI,CAACC,aAAL,GACAC,QAAQ,CAAC,QAAD,CAAW,UAAM,CACvBC,EAAE,CAAC,wBAAD,CAA2B,UAAM,aACV,wBACrB,6BAAC,sCAAD,EACE,oBAAoB,CAAE,CACpBC,KAAK,CAAE,CAAEC,CAAC,CAAE,CAAL,CAAQC,CAAC,CAAE,CAAX,CAAcC,KAAK,CAAE,CAArB,CAAwBC,MAAM,CAAE,CAAhC,CADa,CAEpBC,MAAM,CAAE,CAAEC,GAAG,CAAE,CAAP,CAAUC,IAAI,CAAE,CAAhB,CAAmBC,KAAK,CAAE,CAA1B,CAA6BC,MAAM,CAAE,CAArC,CAFY,CADxB,6EAME,6BAAC,cAAD,EAAQ,gBAAgB,KAAxB,6EANF,CADqB,CADU,CAC3BC,YAD2B,SAC3BA,YAD2B,CAWjC,GAAIC,CAAAA,QAAQ,CAAGD,YAAY,CAAC,QAAD,CAA3B,CACAE,MAAM,CAACD,QAAQ,CAAC,CAAD,CAAR,CAAYE,KAAZ,CAAkBC,KAAnB,CAAN,CAAgCC,IAAhC,CAAqC,IAArC,EACD,CAbC,CAAF,CAeAhB,EAAE,CAAC,iBAAD,CAAoB,UAAM,cACH,wBACrB,6BAAC,sCAAD,EACE,oBAAoB,CAAE,CACpBC,KAAK,CAAE,CAAEC,CAAC,CAAE,CAAL,CAAQC,CAAC,CAAE,CAAX,CAAcC,KAAK,CAAE,CAArB,CAAwBC,MAAM,CAAE,CAAhC,CADa,CAEpBC,MAAM,CAAE,CAAEC,GAAG,CAAE,CAAP,CAAUC,IAAI,CAAE,CAAhB,CAAmBC,KAAK,CAAE,CAA1B,CAA6BC,MAAM,CAAE,CAArC,CAFY,CADxB,6EAME,6BAAC,cAAD,EAAQ,UAAU,KAAlB,6EANF,CADqB,CADG,CACpBC,YADoB,UACpBA,YADoB,CAW1B,GAAIC,CAAAA,QAAQ,CAAGD,YAAY,CAAC,QAAD,CAA3B,CACAE,MAAM,CAACD,QAAQ,CAAC,CAAD,CAAR,CAAYE,KAAZ,CAAkBG,QAAnB,CAAN,CAAmCD,IAAnC,CAAwC,IAAxC,EACD,CAbC,CAAF,CAcD,CA9BO,CAAR","sourcesContent":["import React from 'react';\nimport { render } from '@testing-library/react-native';\nimport { NativeBaseProvider } from '../../../../core/NativeBaseProvider';\n\nimport Switch from '../index';\n\njest.useFakeTimers();\ndescribe('Switch', () => {\n  it('can be default checked', () => {\n    let { getAllByRole } = render(\n      <NativeBaseProvider\n        initialWindowMetrics={{\n          frame: { x: 0, y: 0, width: 0, height: 0 },\n          insets: { top: 0, left: 0, right: 0, bottom: 0 },\n        }}\n      >\n        <Switch defaultIsChecked />\n      </NativeBaseProvider>\n    );\n    let switches = getAllByRole('switch');\n    expect(switches[0].props.value).toBe(true);\n  });\n\n  it('can be disabled', () => {\n    let { getAllByRole } = render(\n      <NativeBaseProvider\n        initialWindowMetrics={{\n          frame: { x: 0, y: 0, width: 0, height: 0 },\n          insets: { top: 0, left: 0, right: 0, bottom: 0 },\n        }}\n      >\n        <Switch isDisabled />\n      </NativeBaseProvider>\n    );\n    let switches = getAllByRole('switch');\n    expect(switches[0].props.disabled).toBe(true);\n  });\n});\n"]}