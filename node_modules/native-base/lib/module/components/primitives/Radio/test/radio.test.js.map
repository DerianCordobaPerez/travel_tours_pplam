{"version":3,"sources":["radio.test.tsx"],"names":["RadiosGroup","React","useState","setValue","nextValue","describe","it","frame","x","y","width","height","insets","top","left","right","bottom","getAllByRole","getByText","radios","expect","length","toBe","props","accessibilityState","checked","second","fireEvent","press","disabled"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { fireEvent, render } from '@testing-library/react-native';\nimport { Radio } from '..';\nimport { Text } from '../..';\nimport { NativeBaseProvider } from '../../../../core/NativeBaseProvider';\nfunction RadiosGroup() {\n  const [, setValue] = React.useState<any>('one');\n  return (\n    <Radio.Group\n      defaultValue=\"1\"\n      name=\"myRadioGroup\"\n      onChange={(nextValue: any) => {\n        setValue(nextValue);\n      }}\n    >\n      <Radio value=\"1\">\n        <Text mx={2}>First</Text>\n      </Radio>\n      <Radio value=\"2\">\n        <Text mx={2}>Second</Text>\n      </Radio>\n      <Radio value=\"3\">\n        <Text mx={2}>Third</Text>\n      </Radio>\n    </Radio.Group>\n  );\n}\ndescribe('RadioGroup', () => {\n  it('onChange and default on RadioGroup', () => {\n    let { getAllByRole, getByText } = render(\n      <NativeBaseProvider\n        initialWindowMetrics={{\n          frame: { x: 0, y: 0, width: 0, height: 0 },\n          insets: { top: 0, left: 0, right: 0, bottom: 0 },\n        }}\n      >\n        <RadiosGroup />\n      </NativeBaseProvider>\n    );\n    let radios = getAllByRole('radio');\n    expect(radios.length).toBe(3);\n    expect(radios[0].props.accessibilityState.checked).toBe(true);\n    expect(radios[1].props.accessibilityState.checked).toBe(false);\n    expect(radios[2].props.accessibilityState.checked).toBe(false);\n    let second = getByText('Second');\n    fireEvent.press(second);\n    expect(radios[0].props.accessibilityState.checked).toBe(false);\n  });\n\n  it('can be disabled', () => {\n    let { getAllByRole } = render(\n      <NativeBaseProvider\n        initialWindowMetrics={{\n          frame: { x: 0, y: 0, width: 0, height: 0 },\n          insets: { top: 0, left: 0, right: 0, bottom: 0 },\n        }}\n      >\n        <Radio.Group defaultValue=\"1\" name=\"myRadioGroup\">\n          <Radio value=\"1\">\n            <Text mx={2}>First</Text>\n          </Radio>\n          <Radio value=\"2\" isDisabled>\n            <Text mx={2}>Second</Text>\n          </Radio>\n          <Radio value=\"3\">\n            <Text mx={2}>Third</Text>\n          </Radio>\n        </Radio.Group>\n      </NativeBaseProvider>\n    );\n    let second = getAllByRole('radio');\n    expect(second[1].props.accessibilityState.disabled).toBe(true);\n  });\n});\n"]}