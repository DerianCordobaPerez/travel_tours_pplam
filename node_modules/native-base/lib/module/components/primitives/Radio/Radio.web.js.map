{"version":3,"sources":["Radio.web.tsx"],"names":["Radio","ref","icon","children","wrapperRef","props","contextState","React","useContext","RadioContext","_interactionBox","_iterationBoxHover","_hover","_iterationBoxFocus","_focus","_iterationBoxDisabled","_disabled","_radio","_radioChecked","_checked","_radioDisabled","_radioInvalid","_invalid","_icon","isInvalid","themedProps","inputRef","useRef","accessibilityLabel","state","inputProps","disabled","checked","_ref","isHovered","mergedRefs","focusProps","isFocusVisible","sizedIcon","cloneElement","component","transition"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../Box';\nimport { Center } from '../../composites/Center';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IRadioProps } from './types';\nimport { mergeRefs } from './../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useRadio } from '@react-native-aria/radio';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { RadioContext } from './RadioGroup';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { CircleIcon } from '../Icon/Icons';\n\nconst Radio = (\n  { icon, children, wrapperRef, ...props }: IRadioProps,\n  ref: any\n) => {\n  const contextState = React.useContext(RadioContext);\n  const {\n    _interactionBox: {\n      _hover: _iterationBoxHover,\n      _focus: _iterationBoxFocus,\n      _disabled: _iterationBoxDisabled,\n      ..._interactionBox\n    },\n    _radio: {\n      _checked: _radioChecked,\n      _disabled: _radioDisabled,\n      _invalid: _radioInvalid,\n      ..._radio\n    },\n    _icon,\n    isInvalid,\n    ...themedProps\n  } = usePropsResolution('Radio', {\n    ...contextState,\n    ...props,\n  });\n\n  const inputRef = React.useRef(null);\n  const { inputProps } = useRadio(\n    { ...props, 'aria-label': props.accessibilityLabel, children },\n    contextState.state,\n    inputRef\n  );\n  const { disabled, checked } = inputProps;\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n  const mergedRefs = mergeRefs([_ref, wrapperRef]);\n  const { focusProps, isFocusVisible } = useFocusRing();\n\n  // only calling below function when icon exist.\n  const sizedIcon = () =>\n    //@ts-ignore\n    React.cloneElement(icon, {\n      ..._icon,\n    });\n\n  const component = (\n    <Box\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      {...themedProps}\n      opacity={disabled ? 0.4 : 1}\n      cursor={disabled ? 'not-allowed' : 'pointer'}\n    >\n      <Center>\n        {/* Interaction Box */}\n        <Box\n          {..._interactionBox}\n          {...(isFocusVisible && _iterationBoxFocus)}\n          {...(isHovered && _iterationBoxHover)}\n          {...(disabled && _iterationBoxDisabled)}\n          style={{\n            // @ts-ignore - only for web\"\n            transition: 'height 200ms, width 200ms',\n          }}\n          h={isFocusVisible || isHovered ? '200%' : '100%'}\n          w={isFocusVisible || isHovered ? '200%' : '100%'}\n        />\n        {/* Radio */}\n        <Center\n          {..._radio}\n          {...(checked && _radioChecked)}\n          {...(disabled && _radioDisabled)}\n          {...(isInvalid && _radioInvalid)}\n        >\n          {icon && sizedIcon && checked ? (\n            sizedIcon()\n          ) : (\n            <CircleIcon {..._icon} opacity={checked ? 1 : 0} />\n          )}\n        </Center>\n      </Center>\n      {children}\n    </Box>\n  );\n\n  return (\n    <Box\n      // @ts-ignore - RN web supports accessibilityRole=\"label\"\n      accessibilityRole=\"label\"\n      ref={mergedRefs}\n    >\n      <VisuallyHidden>\n        <input {...inputProps} ref={ref} {...focusProps} />\n      </VisuallyHidden>\n      {component}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Radio));\n"]}