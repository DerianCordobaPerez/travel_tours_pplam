{"version":3,"sources":["FlatList.tsx"],"names":["StyledFlatList","RNFlatList","FlatList","props","ref","ignoreProps","resolvedProps"],"mappings":"yUAAA,qDACA,yCACA,qCACA,6C,kIAGA,GAAMA,CAAAA,cAAmB,CAAG,0BAAcC,qBAAd,CAA5B,CAEO,GAAMC,CAAAA,QAAQ,CAAG,sBAAW,SAACC,KAAD,CAAwBC,GAAxB,CAAqC,yBACzC,8BAAmB,UAAnB,CAA+BD,KAA/B,CAAsC,CACjEE,WAAW,CAAE,CAAC,MAAD,CAAS,YAAT,CAAuB,cAAvB,CADoD,CAAtC,CADyC,CAC3DC,aAD2D,+CAKtE,MAAO,8BAAC,cAAD,0BAAoBA,aAApB,EAAmC,GAAG,CAAEF,GAAxC,+EAAP,CACD,CANuB,CAAjB,C","sourcesContent":["import React, { forwardRef } from 'react';\nimport { FlatList as RNFlatList } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledBox } from '../../../utils/styled';\nimport type { IFlatListProps } from './types';\n\nconst StyledFlatList: any = makeStyledBox(RNFlatList);\n\nexport const FlatList = forwardRef((props: IFlatListProps, ref: any) => {\n  const { ...resolvedProps } = usePropsResolution('FlatList', props, {\n    ignoreProps: ['data', 'renderItem', 'keyExtractor'],\n  });\n\n  return <StyledFlatList {...resolvedProps} ref={ref} />;\n});\n"]}