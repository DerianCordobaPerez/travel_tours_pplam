{"version":3,"sources":["TextField.tsx"],"names":["TextField","mainProps","ref","children","helperText","errorMessage","InputLeftElement","InputRightElement","dropdownIcon","props","divider","themedProps","_errorMessageProps","_helperTextProps","component","platformProps","stylingProps","margin","layout","flexbox","position","layoutProps","componentProps","activeComponent","isInvalid","React","memo","forwardRef"],"mappings":"miBAAA,oDACA,qCAEA,6CACA,6CACA,mEACA,iDACA,uEACA,2E,yIAEA,GAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,SAAD,CAA6BC,GAA7B,CAA2C,IAGzDC,CAAAA,QAHyD,CAUlDF,SAVkD,CAGzDE,QAHyD,CAIzDC,UAJyD,CAUlDH,SAVkD,CAIzDG,UAJyD,CAKzDC,YALyD,CAUlDJ,SAVkD,CAKzDI,YALyD,CAMzDC,gBANyD,CAUlDL,SAVkD,CAMzDK,gBANyD,CAOzDC,iBAPyD,CAUlDN,SAVkD,CAOzDM,iBAPyD,CAQzDC,YARyD,CAUlDP,SAVkD,CAQzDO,YARyD,CAStDC,KATsD,uCAUlDR,SAVkD,oHAYvB,yBAAc,WAAd,CAA2BQ,KAA3B,CAZuB,CAYnDC,OAZmD,gBAYnDA,OAZmD,CAYvCC,WAZuC,yFAoBvD,4BAAiBA,WAAjB,CApBuD,CAgBzDC,kBAhByD,mBAgBzDA,kBAhByD,CAiBzDC,gBAjByD,mBAiBzDA,gBAjByD,CAkBzDC,SAlByD,mBAkBzDA,SAlByD,CAmBtDC,aAnBsD,qIAsBrB,2BAAgBA,aAAhB,EACpC,OADoC,CAEpC,UAFoC,yCAGjCC,oBAAaC,MAHoB,kCAIjCD,oBAAaE,MAJoB,kCAKjCF,oBAAaG,OALoB,kCAMjCH,oBAAaI,QANoB,GAtBqB,mEAsBpDC,WAtBoD,sBAsBvCC,cAtBuC,sBA+B3D,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5B,OAAQT,SAAR,EACE,IAAK,QAAL,CACE,MACE,8BAAC,eAAD,0BAAYQ,cAAZ,EAA4B,YAAY,CAAEd,YAA1C,+EACGL,QADH,CADF,CAKF,IAAK,UAAL,CACE,MAAO,8BAAC,iBAAD,0BAAcmB,cAAd,EAA8B,GAAG,CAAEpB,GAAnC,+EAAP,CACF,QACE,MACE,8BAAC,YAAD,wBACE,gBAAgB,CAAEI,gBADpB,CAEE,iBAAiB,CAAEC,iBAFrB,EAGMe,cAHN,EAIE,GAAG,CAAEpB,GAJP,+EADF,CAVJ,CAmBD,CApBD,CAsBA,MACE,8BAAC,YAAD,wBAAO,OAAO,CAAEQ,OAAhB,EAA6BW,WAA7B,+EACGE,eAAe,EADlB,CAEGD,cAAc,CAACE,SAAf,EACC,6BAAC,aAAD,0BAAUZ,kBAAV,+EAA+BP,YAA/B,CAHJ,CAKG,CAACiB,cAAc,CAACE,SAAhB,EACC,6BAAC,aAAD,0BAAUX,gBAAV,+EAA6BT,UAA7B,CANJ,CADF,CAWD,CAhED,C,aAkEeqB,eAAMC,IAAN,CAAWD,eAAME,UAAN,CAAiB3B,SAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { useThemeProps, usePlatformProps } from '../../../hooks';\nimport type { ITextFieldProps } from './types';\nimport { Stack } from '../../primitives/Stack';\nimport { Input } from '../../primitives/Input';\nimport Text from '../../primitives/Text';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport Select from '../../primitives/Select';\nimport TextArea from '../../primitives/TextArea';\n\nconst TextField = (mainProps: ITextFieldProps, ref?: any) => {\n  //TODO: Remove `any`\n  const {\n    children,\n    helperText,\n    errorMessage,\n    InputLeftElement,\n    InputRightElement,\n    dropdownIcon,\n    ...props\n  }: any = mainProps;\n\n  const { divider, ...themedProps } = useThemeProps('TextField', props);\n\n  // usePlatformProps is merging Platform specific props to themedProps\n  const {\n    _errorMessageProps,\n    _helperTextProps,\n    component,\n    ...platformProps\n  } = usePlatformProps(themedProps);\n\n  const [layoutProps, componentProps] = extractInObject(platformProps, [\n    'space',\n    'reversed',\n    ...stylingProps.margin,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n  ]);\n\n  const activeComponent = () => {\n    switch (component) {\n      case 'select':\n        return (\n          <Select {...componentProps} dropdownIcon={dropdownIcon}>\n            {children}\n          </Select>\n        );\n      case 'textarea':\n        return <TextArea {...componentProps} ref={ref} />;\n      default:\n        return (\n          <Input\n            InputLeftElement={InputLeftElement}\n            InputRightElement={InputRightElement}\n            {...componentProps}\n            ref={ref}\n          />\n        );\n    }\n  };\n\n  return (\n    <Stack divider={divider} {...layoutProps}>\n      {activeComponent()}\n      {componentProps.isInvalid && (\n        <Text {..._errorMessageProps}>{errorMessage}</Text>\n      )}\n      {!componentProps.isInvalid && (\n        <Text {..._helperTextProps}>{helperText}</Text>\n      )}\n    </Stack>\n  );\n};\n\nexport default React.memo(React.forwardRef(TextField));\n"]}