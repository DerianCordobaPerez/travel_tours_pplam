{"version":3,"sources":["SlideFade.tsx"],"names":["SlideFade","ref","children","props","isDomUsable","animationState","in","duration","offsetX","offsetY","fadeAnim","React","useRef","Animated","Value","current","slideAnimX","slideAnimY","animIn","timing","toValue","useNativeDriver","Platform","OS","start","animOut","opacity","transform","translateX","translateY","memo","forwardRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport { Animated, Platform } from 'react-native';\nimport type { ISlideFadeProps } from './types';\nimport { canUseDom } from '../../../utils';\n\nconst SlideFade = ({ children, ...props }: ISlideFadeProps, ref?: any) => {\n  const isDomUsable = canUseDom();\n\n  const { in: animationState, duration, offsetX, offsetY } = useThemeProps(\n    'SlideFade',\n    props\n  );\n  const fadeAnim = React.useRef(new Animated.Value(0)).current;\n  const slideAnimX = React.useRef(new Animated.Value(0)).current;\n  const slideAnimY = React.useRef(new Animated.Value(0)).current;\n\n  const animIn = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      Animated.timing(slideAnimX, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      Animated.timing(slideAnimY, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n    }\n  };\n  const animOut = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      offsetX &&\n        Animated.timing(slideAnimX, {\n          toValue: offsetX,\n          duration: duration,\n          useNativeDriver: Platform.OS !== 'web',\n        }).start();\n      offsetY &&\n        Animated.timing(slideAnimY, {\n          toValue: offsetY,\n          duration: duration,\n          useNativeDriver: Platform.OS !== 'web',\n        }).start();\n    }\n  };\n  animationState ? animIn() : animOut();\n\n  return (\n    <Animated.View\n      style={[\n        {\n          opacity: fadeAnim,\n          transform: [{ translateX: slideAnimX, translateY: slideAnimY }],\n        },\n      ]}\n      ref={ref}\n    >\n      <Box {...props}>{children}</Box>\n    </Animated.View>\n  );\n};\n\nexport default React.memo(React.forwardRef(SlideFade));\n"]}