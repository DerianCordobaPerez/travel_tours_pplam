{"version":3,"sources":["index.tsx"],"names":["IconButton","ref","icon","props","newProps"],"mappings":"wbAAA,qDACA,+CACA,2D,sIASA,GAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAuCC,GAAvC,CAAoD,IAAjDC,CAAAA,IAAiD,MAAjDA,IAAiD,CAAxCC,KAAwC,sDACrE,GAAMC,CAAAA,QAAQ,CAAG,sCAAmB,YAAnB,CAAiCD,KAAjC,CAAjB,CACA,MACE,8BAAC,cAAD,wBAAQ,GAAG,CAAEF,GAAb,EAAsBG,QAAtB,+EACGF,IADH,CADF,CAKD,CAPD,C,aASe,gBAAK,sBAAWF,UAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Button, IButtonProps } from '../../primitives/Button';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\n\nexport interface IIconButtonProps extends IButtonProps {\n  /**\n   * The icon to be used. Refer to the Icon section of the docs for the available icon options.\n   */\n  icon: JSX.Element;\n}\n\nconst IconButton = ({ icon, ...props }: IIconButtonProps, ref: any) => {\n  const newProps = usePropsResolution('IconButton', props);\n  return (\n    <Button ref={ref} {...newProps}>\n      {icon}\n    </Button>\n  );\n};\n\nexport default memo(forwardRef(IconButton));\n"]}