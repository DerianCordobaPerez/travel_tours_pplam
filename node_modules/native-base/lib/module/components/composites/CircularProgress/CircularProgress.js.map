{"version":3,"sources":["CircularProgress.tsx"],"names":["StyleAnimatedView","Animated","View","color","border","CircularProgress","ref","value","isIndeterminate","max","min","props","theme","isDomUsable","sizeProps","newProps","themeTools","extractInObject","remainingProps","size","height","width","themeHeight","themeWidth","styleSize","parseInt","slice","Length","defaultThickness","thickness","degree","Value","loop","timing","toValue","duration","easing","Easing","linear","useNativeDriver","start","React","useState","viewHeight","setViewHeight","layout","e","nativeEvent","defaultStyling","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","borderLeftWidth","borderBottomWidth","position","borderLeftColor","borderBottomColor","styles","StyleSheet","create","firstProgressLayer","borderTopWidth","borderRightWidth","transform","rotateZ","secondProgressLayer","offsetLayer","borderRadius","animateStyle","interpolate","inputRange","outputRange","halfSide","propStyle","percent","base_degrees","rotateBy","renderThirdLayer","trackColor","firstProgressLayerStyle","now","_text","children","memo","forwardRef"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport React from 'react';\nimport { Animated, Easing, StyleSheet } from 'react-native';\nimport styled from 'styled-components/native';\nimport { border, color } from 'styled-system';\nimport { useTheme, useThemeProps } from '../../../hooks';\nimport { canUseDom } from '../../../utils';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport type { ICircularProgressProps } from './types';\nimport { themeTools } from '../../../theme';\n\nconst StyleAnimatedView = styled(Animated.View)<IBoxProps>(color, border);\n\nconst CircularProgress = (\n  { value, isIndeterminate, max, min, ...props }: ICircularProgressProps,\n  ref: any\n) => {\n  const theme = useTheme();\n\n  const isDomUsable = canUseDom();\n  if (min) {\n    value = value - min;\n  }\n\n  let sizeProps;\n  let newProps = useThemeProps('CircularProgress', props);\n  let [, remainingProps] = themeTools.extractInObject(props, ['size']); // removing size from props so that Box don't accept size passed for CircularProgress\n\n  if (!newProps.size) {\n    sizeProps = {\n      height: newProps.height,\n      width: newProps.width,\n    };\n  } else {\n    sizeProps = { height: newProps.size, width: newProps.size };\n  }\n  // fetching size from theme for passing into style prop\n  const themeHeight = get(theme, 'space.' + sizeProps.height);\n  const themeWidth = get(theme, 'space.' + sizeProps.width);\n\n  const styleSize = {\n    height: themeHeight\n      ? parseInt(themeHeight.slice(themeHeight.Length, -2), 10)\n      : sizeProps.height,\n    width: themeWidth\n      ? parseInt(themeWidth.slice(themeWidth.Length, -2), 10)\n      : sizeProps.width,\n  };\n\n  const defaultThickness = newProps.thickness;\n  const degree: any = new Animated.Value(0);\n  if (isIndeterminate) {\n    if (isDomUsable) {\n      Animated.loop(\n        Animated.timing(degree, {\n          toValue: 1,\n          duration: 600,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        })\n      ).start();\n    }\n  }\n  const [viewHeight, setViewHeight] = React.useState(0);\n  const layout = (e: any) => {\n    let height = e.nativeEvent.layout.height;\n    setViewHeight(height);\n  };\n\n  const defaultStyling: any = {\n    borderBottomLeftRadius: viewHeight / 2,\n    borderBottomRightRadius: viewHeight / 2,\n    borderTopLeftRadius: viewHeight / 2,\n    borderTopRightRadius: viewHeight / 2,\n    borderLeftWidth: defaultThickness,\n    borderBottomWidth: defaultThickness,\n    position: 'absolute',\n    borderLeftColor: 'transparent',\n    borderBottomColor: 'transparent',\n    ...styleSize,\n  };\n  const styles = StyleSheet.create({\n    firstProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    secondProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '45deg' }],\n    },\n    offsetLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      borderRadius: viewHeight / 2,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    animateStyle: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [\n        {\n          rotateZ: degree.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg'],\n          }),\n        },\n      ],\n    },\n  });\n  let halfSide = (max ? (min ? max - min : max) : 100) / 2; // calculating the halfvalue of the progress according to min and max\n\n  const propStyle = (percent: number, base_degrees: number) => {\n    const rotateBy = base_degrees + (percent * 180) / halfSide;\n    return {\n      transform: [{ rotateZ: rotateBy + 'deg' }],\n    };\n  };\n\n  const renderThirdLayer = (percent: number) => {\n    if (percent > halfSide) {\n      return (\n        <Box\n          borderTopColor={newProps.color}\n          borderRightColor={newProps.color}\n          style={[\n            styles.secondProgressLayer,\n            propStyle(percent - halfSide, 45),\n          ]}\n        />\n      );\n    } else {\n      return (\n        <Box\n          borderTopColor={newProps.trackColor}\n          borderRightColor={newProps.trackColor}\n          style={styles.offsetLayer}\n        />\n      );\n    }\n  };\n  let firstProgressLayerStyle;\n  if (value > halfSide) {\n    firstProgressLayerStyle = propStyle(halfSide, -135);\n  } else {\n    firstProgressLayerStyle = propStyle(value, -135);\n  }\n\n  return (\n    <Box\n      {...sizeProps}\n      rounded={viewHeight / 2}\n      borderWidth={defaultThickness}\n      borderColor={newProps.trackColor}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      {...remainingProps}\n      ref={ref}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityValue={{\n        min,\n        max,\n        now: value,\n      }}\n    >\n      {!isIndeterminate ? (\n        <>\n          <Box\n            onLayout={layout}\n            borderTopColor={newProps.color}\n            borderRightColor={newProps.color}\n            style={[styles.firstProgressLayer, firstProgressLayerStyle]}\n          />\n          {renderThirdLayer(value)}\n          <Box _text={newProps._text}>{remainingProps.children}</Box>\n        </>\n      ) : (\n        <StyleAnimatedView\n          onLayout={layout}\n          borderTopColor={newProps.color}\n          borderRightColor={newProps.color}\n          style={styles.animateStyle}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(CircularProgress));\n"]}