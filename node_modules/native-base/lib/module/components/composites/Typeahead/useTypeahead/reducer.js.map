{"version":3,"sources":["reducer.tsx"],"names":["useTypeaheadReducer","state","action","type","props","changes","stateChangeTypes","ItemClick","isOpen","selectedItem","items","index","inputValue","itemToString","InputBlur","InputChange","ToggleButtonClick","FunctionToggleMenu","FunctionOpenMenu","FunctionCloseMenu","FunctionSelectItem","ControlledPropUpdatedSelectedItem","FunctionSetInputValue","FunctionReset","Error"],"mappings":"iWAAA,iEACA,8BAQO,QAASA,CAAAA,mBAAT,CAA6BC,KAA7B,CAA4CC,MAA5C,CAAyD,IACtDC,CAAAA,IADsD,CACtCD,MADsC,CACtDC,IADsD,CAChDC,KADgD,CACtCF,MADsC,CAChDE,KADgD,CAE9D,GAAIC,CAAAA,OAAJ,CAEA,OAAQF,IAAR,EACE,IAAKG,CAAAA,gBAAgB,CAACC,SAAtB,CACEF,OAAO,CAAG,CACRG,MAAM,CAAE,2BAAgBJ,KAAhB,CAAuB,QAAvB,CADA,CAERK,YAAY,CAAEL,KAAK,CAACM,KAAN,CAAYR,MAAM,CAACS,KAAnB,CAFN,CAGRC,UAAU,CAAER,KAAK,CAACS,YAAN,CAAmBT,KAAK,CAACM,KAAN,CAAYR,MAAM,CAACS,KAAnB,CAAnB,CAHJ,CAAV,CAKA,MACF,IAAKL,CAAAA,gBAAgB,CAACQ,SAAtB,CACE,GAAIb,KAAK,CAACO,MAAV,CAAkB,CAChBH,OAAO,CAAG,CACRG,MAAM,CAAE,KADA,CAAV,CAGD,CACD,MACF,IAAKF,CAAAA,gBAAgB,CAACS,WAAtB,CACEV,OAAO,CAAG,CACRG,MAAM,CAAE,IADA,CAERI,UAAU,CAAEV,MAAM,CAACU,UAFX,CAAV,CAIA,MAEF,IAAKN,CAAAA,gBAAgB,CAACU,iBAAtB,CACA,IAAKV,CAAAA,gBAAgB,CAACW,kBAAtB,CACEZ,OAAO,CAAG,CACRG,MAAM,CAAE,CAACP,KAAK,CAACO,MADP,CAAV,CAGA,MACF,IAAKF,CAAAA,gBAAgB,CAACY,gBAAtB,CACEb,OAAO,CAAG,CACRG,MAAM,CAAE,IADA,CAAV,CAGA,MACF,IAAKF,CAAAA,gBAAgB,CAACa,iBAAtB,CACEd,OAAO,CAAG,CACRG,MAAM,CAAE,KADA,CAAV,CAGA,MAEF,IAAKF,CAAAA,gBAAgB,CAACc,kBAAtB,CACEf,OAAO,CAAG,CACRI,YAAY,CAAEP,MAAM,CAACO,YADb,CAERG,UAAU,CAAER,KAAK,CAACS,YAAN,CAAmBX,MAAM,CAACO,YAA1B,CAFJ,CAAV,CAIA,MACF,IAAKH,CAAAA,gBAAgB,CAACe,iCAAtB,CACA,IAAKf,CAAAA,gBAAgB,CAACgB,qBAAtB,CACEjB,OAAO,CAAG,CACRO,UAAU,CAAEV,MAAM,CAACU,UADX,CAAV,CAGA,MACF,IAAKN,CAAAA,gBAAgB,CAACiB,aAAtB,CACElB,OAAO,CAAG,CACRG,MAAM,CAAE,2BAAgBJ,KAAhB,CAAuB,QAAvB,CADA,CAERK,YAAY,CAAE,2BAAgBL,KAAhB,CAAuB,cAAvB,CAFN,CAGRQ,UAAU,CAAE,2BAAgBR,KAAhB,CAAuB,YAAvB,CAHJ,CAAV,CAKA,MACF,QACE,KAAM,IAAIoB,CAAAA,KAAJ,CAAU,4CAAV,CAAN,CA3DJ,CA8DA,+BACKvB,KADL,CAEKI,OAFL,EAID","sourcesContent":["import * as stateChangeTypes from './types';\nimport { getDefaultValue } from './utils';\n\ntype IState = {\n  isOpen: boolean;\n  selectedItem: any;\n  inputValue: string;\n};\n\nexport function useTypeaheadReducer(state: IState, action: any) {\n  const { type, props } = action;\n  let changes;\n\n  switch (type) {\n    case stateChangeTypes.ItemClick:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index]),\n      };\n      break;\n    case stateChangeTypes.InputBlur:\n      if (state.isOpen) {\n        changes = {\n          isOpen: false,\n        };\n      }\n      break;\n    case stateChangeTypes.InputChange:\n      changes = {\n        isOpen: true,\n        inputValue: action.inputValue,\n      };\n      break;\n\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen,\n      };\n      break;\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true,\n      };\n      break;\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false,\n      };\n      break;\n\n    case stateChangeTypes.FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem),\n      };\n      break;\n    case stateChangeTypes.ControlledPropUpdatedSelectedItem:\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue,\n      };\n      break;\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: getDefaultValue(props, 'selectedItem'),\n        inputValue: getDefaultValue(props, 'inputValue'),\n      };\n      break;\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return {\n    ...state,\n    ...changes,\n  };\n}\n"]}