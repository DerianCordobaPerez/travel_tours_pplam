{"version":3,"sources":["PinInputField.tsx"],"names":["PinInputFiled","ref","fieldIndex","pDefaultValue","defaultValue","props","React","useContext","PinInputContext","handleChange","cValue","value","setRefList","cDefaultValue","handleMultiValueChange","context","keyPressHandler","event","Platform","OS","nativeEvent","key","textChangeHandler","myRef","useRef","useEffect","memo","forwardRef"],"mappings":"mWAAA,oDACA,6CAEA,kCACA,yCACA,qC,4IAEA,GAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAMpBC,GANoB,CAOjB,0BALDC,UAKC,CALDA,UAKC,0BALY,CAKZ,iBAJaC,aAIb,MAJDC,YAIC,CAHEC,KAGF,iGAQmBC,eAAMC,UAAN,CAAiBC,wBAAjB,CARnB,CAEDC,YAFC,mBAEDA,YAFC,CAGMC,MAHN,mBAGDC,KAHC,CAIDC,UAJC,mBAIDA,UAJC,CAKaC,aALb,mBAKDT,YALC,CAMDU,sBANC,mBAMDA,sBANC,CAOEC,OAPF,wIASHF,aAAa,CAAGA,aAAa,EAAIA,aAAa,CAACX,UAAD,CAA9C,CACA,GAAIE,CAAAA,YAAY,CAAGD,aAAa,EAAIU,aAApC,CACA,GAAIF,CAAAA,KAAK,CAAGD,MAAM,EAAIA,MAAM,CAACR,UAAD,CAA5B,CAEA,GAAMc,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAgB,CACtC,GAAIC,sBAASC,EAAT,GAAgB,KAApB,CAA2B,CACzB,GAAIF,KAAK,CAACG,WAAN,CAAkBC,GAAlB,EAAyB,CAAzB,EAA8BJ,KAAK,CAACG,WAAN,CAAkBC,GAAlB,EAAyB,CAA3D,CAA8D,CAC5DZ,YAAY,EAAIA,YAAY,CAACQ,KAAK,CAACG,WAAN,CAAkBC,GAAnB,CAAwBnB,UAAxB,CAA5B,CACD,CAFD,IAEO,IAAIe,KAAK,CAACG,WAAN,CAAkBC,GAAlB,GAA0B,WAA9B,CAA2C,CAChDZ,YAAY,EAAIA,YAAY,CAAC,EAAD,CAAKP,UAAL,CAA5B,CACD,CACF,CACF,CARD,CASA,GAAMoB,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACX,KAAD,CAAgB,CAExCG,sBAAsB,EAAIA,sBAAsB,CAACH,KAAD,CAAQT,UAAR,CAAhD,CACD,CAHD,CAIA,GAAMqB,CAAAA,KAAK,CAAGjB,eAAMkB,MAAN,CAAa,IAAb,CAAd,CACAlB,eAAMmB,SAAN,CAAgB,UAAM,CACpBb,UAAU,EAAIA,UAAU,CAACW,KAAD,CAAQrB,UAAR,CAAxB,CACD,CAFD,CAEG,CAACqB,KAAD,CAAQrB,UAAR,CAAoBU,UAApB,CAFH,EAIA,MACE,8BAAC,YAAD,wBACE,GAAG,CAAE,qBAAU,CAACW,KAAD,CAAQtB,GAAR,CAAV,CADP,EAEMc,OAFN,CAGMV,KAHN,EAIE,UAAU,CAAE,oBAACY,KAAD,QAAWD,CAAAA,eAAe,CAACC,KAAD,CAA1B,EAJd,CAKE,YAAY,CAAE,sBAACN,KAAD,QAAWW,CAAAA,iBAAiB,CAACX,KAAD,CAA5B,EALhB,CAME,YAAY,CAAC,SANf,CAOE,YAAY,CAAEP,YAPhB,CAQE,KAAK,CAAEO,KART,8EADF,CAYD,CAlDD,C,aAoDeL,eAAMoB,IAAN,CAAWpB,eAAMqB,UAAN,CAAiB3B,aAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { Input } from '../../primitives/Input';\nimport type { IPinInputFieldProps, IPinInputContext } from './types';\nimport { PinInputContext } from './Context';\nimport { Platform } from 'react-native';\nimport { mergeRefs } from '../../../utils';\n\nconst PinInputFiled = (\n  {\n    fieldIndex = 0,\n    defaultValue: pDefaultValue,\n    ...props\n  }: IPinInputFieldProps,\n  ref?: any\n) => {\n  let {\n    handleChange,\n    value: cValue,\n    setRefList,\n    defaultValue: cDefaultValue,\n    handleMultiValueChange,\n    ...context\n  }: IPinInputContext = React.useContext(PinInputContext);\n  cDefaultValue = cDefaultValue && cDefaultValue[fieldIndex];\n  let defaultValue = pDefaultValue || cDefaultValue;\n  let value = cValue && cValue[fieldIndex];\n\n  const keyPressHandler = (event: any) => {\n    if (Platform.OS !== 'web') {\n      if (event.nativeEvent.key >= 0 && event.nativeEvent.key <= 9) {\n        handleChange && handleChange(event.nativeEvent.key, fieldIndex);\n      } else if (event.nativeEvent.key === 'Backspace') {\n        handleChange && handleChange('', fieldIndex);\n      }\n    }\n  };\n  const textChangeHandler = (value: any) => {\n    // Also used to handle change for Android.\n    handleMultiValueChange && handleMultiValueChange(value, fieldIndex);\n  };\n  const myRef = React.useRef(null);\n  React.useEffect(() => {\n    setRefList && setRefList(myRef, fieldIndex);\n  }, [myRef, fieldIndex, setRefList]);\n\n  return (\n    <Input\n      ref={mergeRefs([myRef, ref])}\n      {...context}\n      {...props}\n      onKeyPress={(event) => keyPressHandler(event)}\n      onChangeText={(value) => textChangeHandler(value)}\n      keyboardType=\"numeric\"\n      defaultValue={defaultValue}\n      value={value}\n    />\n  );\n};\n\nexport default React.memo(React.forwardRef(PinInputFiled));\n"]}