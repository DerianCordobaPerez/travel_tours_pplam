{"version":3,"sources":["index.tsx"],"names":["Drawer","children","isOpen","onClose","placement","placementStyles","React","useMemo","styles","position","top","left","right","width","bottom","height"],"mappings":"mPAAA,qDACA,oDACA,6DACA,iE,kIASA,GAAMA,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAKI,IAJjBC,CAAAA,QAIiB,MAJjBA,QAIiB,CAHjBC,MAGiB,MAHjBA,MAGiB,CAFjBC,OAEiB,MAFjBA,OAEiB,qBADjBC,SACiB,CADjBA,SACiB,yBADL,OACK,gBACjB,GAAIC,CAAAA,eAAe,CAAGC,eAAMC,OAAN,CAAc,UAAM,CACxC,GAAIC,CAAAA,MAAW,CAAG,CAChBC,QAAQ,CAAE,UADM,CAAlB,CAIA,GAAIL,SAAS,GAAK,KAAlB,CAAyB,CACvBI,MAAM,CAACE,GAAP,CAAa,CAAb,CACAF,MAAM,CAACG,IAAP,CAAc,CAAd,CACAH,MAAM,CAACI,KAAP,CAAe,CAAf,CACAJ,MAAM,CAACK,KAAP,CAAe,MAAf,CACD,CALD,IAKO,IAAIT,SAAS,GAAK,QAAlB,CAA4B,CACjCI,MAAM,CAACM,MAAP,CAAgB,CAAhB,CACAN,MAAM,CAACG,IAAP,CAAc,CAAd,CACAH,MAAM,CAACI,KAAP,CAAe,CAAf,CACAJ,MAAM,CAACK,KAAP,CAAe,MAAf,CACD,CALM,IAKA,IAAIT,SAAS,GAAK,OAAlB,CAA2B,CAChCI,MAAM,CAACI,KAAP,CAAe,CAAf,CACAJ,MAAM,CAACE,GAAP,CAAa,CAAb,CACAF,MAAM,CAACM,MAAP,CAAgB,CAAhB,CACAN,MAAM,CAACO,MAAP,CAAgB,MAAhB,CACD,CALM,IAKA,CACLP,MAAM,CAACE,GAAP,CAAa,CAAb,CACAF,MAAM,CAACM,MAAP,CAAgB,CAAhB,CACAN,MAAM,CAACG,IAAP,CAAc,CAAd,CACAH,MAAM,CAACO,MAAP,CAAgB,MAAhB,CACD,CACD,MAAOP,CAAAA,MAAP,CACD,CA3BqB,CA2BnB,CAACJ,SAAD,CA3BmB,CAAtB,CA6BA,GAAI,CAACF,MAAL,CAAa,MAAO,KAAP,CAEb,MACE,8BAAC,0BAAD,8EACE,6BAAC,iBAAD,EAAU,OAAO,CAAEC,OAAO,CAAGA,OAAH,CAAa,UAAM,CAAE,CAA/C,6EADF,CAEE,6BAAC,YAAD,0BAASE,eAAT,EAA0B,OAAO,CAAE,CAAnC,8EACGJ,QADH,CAFF,CADF,CAQD,CA7CD,C,aA+CeD,M","sourcesContent":["import { OverlayContainer } from '@react-native-aria/overlays';\nimport React from 'react';\nimport Backdrop from '../Backdrop';\nimport Box from '../../primitives/Box';\n\ntype DrawerProps = {\n  placement?: 'top' | 'left' | 'right' | 'bottom';\n  children?: any;\n  isOpen: boolean;\n  onClose?: () => void;\n};\n\nconst Drawer = ({\n  children,\n  isOpen,\n  onClose,\n  placement = 'right',\n}: DrawerProps) => {\n  let placementStyles = React.useMemo(() => {\n    let styles: any = {\n      position: 'absolute',\n    };\n\n    if (placement === 'top') {\n      styles.top = 0;\n      styles.left = 0;\n      styles.right = 0;\n      styles.width = '100%';\n    } else if (placement === 'bottom') {\n      styles.bottom = 0;\n      styles.left = 0;\n      styles.right = 0;\n      styles.width = '100%';\n    } else if (placement === 'right') {\n      styles.right = 0;\n      styles.top = 0;\n      styles.bottom = 0;\n      styles.height = '100%';\n    } else {\n      styles.top = 0;\n      styles.bottom = 0;\n      styles.left = 0;\n      styles.height = '100%';\n    }\n    return styles;\n  }, [placement]);\n\n  if (!isOpen) return null;\n\n  return (\n    <OverlayContainer>\n      <Backdrop onPress={onClose ? onClose : () => {}} />\n      <Box {...placementStyles} opacity={1}>\n        {children}\n      </Box>\n    </OverlayContainer>\n  );\n};\n\nexport default Drawer;\n"]}