{"version":3,"sources":["index.tsx"],"names":["Progress","props","ref","min","max","value","isIndeterminate","newProps","innerBg","innerProps","bg","shadow","rounded","height","w","display","alignItems","justifyContent","color","style","now","children"],"mappings":"wbAAA,qDACA,4CACA,2D,oIAmCA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAwBC,GAAxB,CAAsC,yBAYK,sCACxD,UADwD,CAExDD,KAFwD,CAZL,CAY7CE,GAZ6C,qBAY7CA,GAZ6C,CAYxCC,GAZwC,qBAYxCA,GAZwC,CAYnCC,KAZmC,qBAYnCA,KAZmC,CAY5BC,eAZ4B,qBAY5BA,eAZ4B,CAYRC,QAZQ,uGAgB7CC,CAAAA,OAhB6C,CAgBjCD,QAhBiC,CAgB7CC,OAhB6C,CAkBrD,GAAMC,CAAAA,UAAU,CAAG,CACjBC,EAAE,CAAEF,OADa,CAEjBG,MAAM,CAAE,CAFS,CAGjBC,OAAO,CAAEL,QAAQ,CAACK,OAHD,CAIjBC,MAAM,CAAE,MAJS,CAKjBC,CAAC,CACCT,KAAK,CAAGD,GAAR,EAAeC,KAAK,CAAGF,GAAvB,CACK,CAACE,KAAK,CAAGF,GAAT,GAAiBC,GAAG,CAAGD,GAAvB,CAAD,CAAgC,GAAhC,CAAsC,GAD1C,CAEIE,KAAK,CAAGF,GAAR,CACA,MADA,CAEA,IAVW,CAWjBY,OAAO,CAAE,MAXQ,CAYjBC,UAAU,CAAE,QAZK,CAajBC,cAAc,CAAE,QAbC,CAcjBC,KAAK,CAAE,OAdU,CAAnB,CAiBA,MACE,8BAAC,eAAD,0BACMX,QADN,EAEE,KAAK,CAAEA,QAAQ,CAACY,KAFlB,CAGE,GAAG,CAAEjB,GAHP,CAIE,UAAU,KAJZ,CAKE,iBAAiB,CAAC,aALpB,CAME,kBAAkB,CAAE,CAClBC,GAAG,CAAEA,GADa,CAElBC,GAAG,CAAEA,GAFa,CAGlBgB,GAAG,CACDf,KAAK,CAAGD,GAAR,EAAeC,KAAK,CAAGF,GAAvB,CACK,CAACE,KAAK,CAAGF,GAAT,GAAiBC,GAAG,CAAGD,GAAvB,CAAD,CAAgC,GADpC,CAEIE,KAAK,CAAGF,GAAR,CACA,GADA,CAEA,CARY,CANtB,8EAiBGG,eAAe,CAad,6BAAC,eAAD,0BAASG,UAAT,EAAqB,QAAQ,CAAEF,QAAQ,CAACc,QAAxC,+EAbc,CAed,6BAAC,eAAD,0BAASZ,UAAT,EAAqB,QAAQ,CAAEF,QAAQ,CAACc,QAAxC,+EAhCJ,CADF,CAqCD,CAxED,C,aA0Ee,gBAAK,sBAAWrB,QAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Box, IBoxProps } from '../../primitives';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\n\nexport interface IProgressProps extends IBoxProps {\n  /**\n   * Value of Progress.\n   * @default 0\n   */\n  value?: number;\n  /**\n   * Defines height of Progress\n   * @default sm\n   */\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | string;\n  /**\n   * The color scheme of the progress. This should be one of the color keys in the theme (e.g.\"green\", \"red\").\n   * @default primary\n   */\n  colorScheme?: string;\n  /**\n   * Whether progress is indeterminate\n   * @default false\n   */\n  isIndeterminate?: any;\n  /**\n   * Min progress value\n   * @default 0\n   */\n  min?: number;\n  /**\n   * Max progress value\n   * @default 100\n   */\n  max?: number;\n}\n\nconst Progress = (props: IProgressProps, ref?: any) => {\n  // const width = new Animated.Value(0);\n  // useEffect(() => {\n  //   Animated.loop(\n  //     Animated.timing(width, {\n  //       toValue: 270,\n  //       duration: 1000,\n  //       useNativeDriver: true,\n  //     })\n  //   ).start();\n  // });\n\n  const { min, max, value, isIndeterminate, ...newProps } = usePropsResolution(\n    'Progress',\n    props\n  );\n  const { innerBg } = newProps;\n\n  const innerProps = {\n    bg: innerBg,\n    shadow: 0,\n    rounded: newProps.rounded,\n    height: '100%',\n    w:\n      value < max && value > min\n        ? ((value - min) / (max - min)) * 100 + '%'\n        : value > min\n        ? '100%'\n        : '0%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'white',\n  };\n\n  return (\n    <Box\n      {...newProps}\n      style={newProps.style}\n      ref={ref}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityValue={{\n        min: min,\n        max: max,\n        now:\n          value < max && value > min\n            ? ((value - min) / (max - min)) * 100\n            : value > min\n            ? 100\n            : 0,\n      }}\n    >\n      {isIndeterminate ? (\n        // <Animated.View\n        //   style={[\n        //     {\n        //       transform: [\n        //         {\n        //           translateX: width,\n        //         },\n        //       ],\n        //     },\n        //   ]}\n        // >\n        // </Animated.View>\n        <Box {...innerProps} children={newProps.children} />\n      ) : (\n        <Box {...innerProps} children={newProps.children} />\n      )}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Progress));\n"]}