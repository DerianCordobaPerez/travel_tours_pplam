{"version":3,"sources":["FormControlErrorMessage.tsx"],"names":["FormControlErrorMessage","ref","children","_disabled","props","themedProps","formControlContext","React","useEffect","setHasFeedbackText","isInvalid","fontSize","color","helpTextId","isDisabled"],"mappings":"wbAAA,qDACA,iEACA,2DACA,gD,yJAGA,GAAMA,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,MAE9BC,GAF8B,CAG3B,IAFDC,CAAAA,QAEC,MAFDA,QAEC,CAFSC,SAET,MAFSA,SAET,CAFuBC,KAEvB,sEACH,GAAMC,CAAAA,WAAW,CAAG,sCAAmB,yBAAnB,CAA8CD,KAA9C,CAApB,CAEA,GAAME,CAAAA,kBAAkB,CAAG,2CAA3B,CAEAC,eAAMC,SAAN,CAAgB,UAAM,CACpBF,kBAAkB,MAAlB,QAAAA,kBAAkB,CAAEG,kBAApB,CAAuC,IAAvC,EACA,MAAO,WAAM,CACXH,kBAAkB,MAAlB,QAAAA,kBAAkB,CAAEG,kBAApB,CAAuC,KAAvC,EACD,CAFD,CAGD,CALD,EAOA,MAAOH,CAAAA,kBAAkB,MAAlB,EAAAA,kBAAkB,CAAEI,SAApB,CACL,6BAAC,YAAD,wBACE,KAAK,CAAE,CAAEC,QAAQ,CAAE,IAAZ,CAAkBC,KAAK,CAAE,SAAzB,CADT,CAEE,QAAQ,CAAEN,kBAAF,cAAEA,kBAAkB,CAAEO,UAFhC,EAGMR,WAHN,CAIMD,KAJN,CAKO,CAAAE,kBAAkB,MAAlB,QAAAA,kBAAkB,CAAEQ,UAApB,GAAkCX,SALzC,EAME,GAAG,CAAEF,GANP,8EAQGC,QARH,CADK,CAWH,IAXJ,CAYD,CA3BD,C,aA6Be,gBAAK,sBAAWF,uBAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFormControlContext } from './useFormControl';\nimport type { IFormControlErrorMessageProps } from './types';\n\nconst FormControlErrorMessage = (\n  { children, _disabled, ...props }: IFormControlErrorMessageProps,\n  ref: any\n) => {\n  const themedProps = usePropsResolution('FormControlErrorMessage', props);\n\n  const formControlContext = useFormControlContext();\n\n  React.useEffect(() => {\n    formControlContext?.setHasFeedbackText(true);\n    return () => {\n      formControlContext?.setHasFeedbackText(false);\n    };\n  });\n\n  return formControlContext?.isInvalid ? (\n    <Box\n      _text={{ fontSize: 'xs', color: 'red.400' }}\n      nativeID={formControlContext?.helpTextId}\n      {...themedProps}\n      {...props}\n      {...(formControlContext?.isDisabled && _disabled)}\n      ref={ref}\n    >\n      {children}\n    </Box>\n  ) : null;\n};\n\nexport default memo(forwardRef(FormControlErrorMessage));\n"]}