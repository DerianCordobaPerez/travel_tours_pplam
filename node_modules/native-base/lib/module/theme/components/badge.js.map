{"version":3,"sources":["badge.ts"],"names":["baseStyle","px","_text","fontSize","fontWeight","variantSolid","props","colorScheme","bg","borderWidth","borderColor","variantSubtle","color","variantOutline","variants","solid","subtle","outline","defaultProps","variant"],"mappings":"gFAAA,+BAEA,GAAMA,CAAAA,SAAS,CAAG,CAChBC,EAAE,CAAE,CADY,CAEhBC,KAAK,CAAE,CAAEC,QAAQ,CAAE,IAAZ,CAAkBC,UAAU,CAAE,MAA9B,CAFS,CAAlB,CAKA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAAkD,CAChD,GAAIC,CAAAA,WAAW,CAAG,0BAAeD,KAAf,CAAlB,CACA,MAAO,CACLE,EAAE,CAAE,gBAAQD,WAAR,QAA8BA,WAA9B,SAAiDD,KAAjD,CADC,CAELG,WAAW,CAAE,CAFR,CAGLC,WAAW,CAAE,aAHR,CAAP,CAKD,CAED,QAASC,CAAAA,aAAT,CAAuBL,KAAvB,CAAmD,CACjD,GAAIC,CAAAA,WAAW,CAAG,0BAAeD,KAAf,CAAlB,CACA,MAAO,CACLE,EAAE,CAAE,gBAAQD,WAAR,QAA8BA,WAA9B,SAAiDD,KAAjD,CADC,CAELJ,KAAK,CAAE,CAAEU,KAAK,CAAE,gBAAQL,WAAR,QAA8BA,WAA9B,SAAiDD,KAAjD,CAAT,CAFF,CAGLG,WAAW,CAAE,CAHR,CAILC,WAAW,CAAE,aAJR,CAAP,CAMD,CAED,QAASG,CAAAA,cAAT,CAAwBP,KAAxB,CAAoD,CAClD,GAAIC,CAAAA,WAAW,CAAG,0BAAeD,KAAf,CAAlB,CACA,MAAO,CACLI,WAAW,CAAE,gBAAQH,WAAR,QAA8BA,WAA9B,SAAiDD,KAAjD,CADR,CAELJ,KAAK,CAAE,CAAEU,KAAK,CAAE,gBAAQL,WAAR,QAA8BA,WAA9B,SAAiDD,KAAjD,CAAT,CAFF,CAGLG,WAAW,CAAE,CAHR,CAAP,CAKD,CAED,GAAMK,CAAAA,QAAQ,CAAG,CACfC,KAAK,CAAEV,YADQ,CAEfW,MAAM,CAAEL,aAFO,CAGfM,OAAO,CAAEJ,cAHM,CAAjB,CAMA,GAAMK,CAAAA,YAAY,CAAG,CACnBC,OAAO,CAAE,QADU,CAEnBZ,WAAW,CAAE,OAFM,CAArB,C,aAKe,CACbP,SAAS,CAATA,SADa,CAEbc,QAAQ,CAARA,QAFa,CAGbI,YAAY,CAAZA,YAHa,C","sourcesContent":["import { mode, getColorScheme } from '../tools';\n\nconst baseStyle = {\n  px: 1,\n  _text: { fontSize: 'xs', fontWeight: 'bold' },\n};\n\nfunction variantSolid(props: Record<string, any>) {\n  let colorScheme = getColorScheme(props);\n  return {\n    bg: mode(`${colorScheme}.500`, `${colorScheme}.200`)(props),\n    borderWidth: 1,\n    borderColor: 'transparent',\n  };\n}\n\nfunction variantSubtle(props: Record<string, any>) {\n  let colorScheme = getColorScheme(props);\n  return {\n    bg: mode(`${colorScheme}.300`, `${colorScheme}.600`)(props),\n    _text: { color: mode(`${colorScheme}.900`, `${colorScheme}.100`)(props) },\n    borderWidth: 1,\n    borderColor: 'transparent',\n  };\n}\n\nfunction variantOutline(props: Record<string, any>) {\n  let colorScheme = getColorScheme(props);\n  return {\n    borderColor: mode(`${colorScheme}.500`, `${colorScheme}.400`)(props),\n    _text: { color: mode(`${colorScheme}.500`, `${colorScheme}.400`)(props) },\n    borderWidth: 1,\n  };\n}\n\nconst variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline,\n};\n\nconst defaultProps = {\n  variant: 'subtle',\n  colorScheme: 'muted',\n};\n\nexport default {\n  baseStyle,\n  variants,\n  defaultProps,\n};\n"]}