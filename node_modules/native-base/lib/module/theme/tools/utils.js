var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.omitUndefined=omitUndefined;exports.getRandomString=getRandomString;exports.orderedExtractInObject=orderedExtractInObject;exports.extractInObject=extractInObject;exports.getColorFormColorScheme=getColorFormColorScheme;exports.getColorScheme=getColorScheme;exports.hasValidBreakpointFormat=hasValidBreakpointFormat;exports.findLastValidBreakpoint=findLastValidBreakpoint;exports.getClosestBreakpoint=getClosestBreakpoint;exports.inValidBreakpointProps=exports.breakpoints=exports.stylingProps=void 0;var _lodash=_interopRequireDefault(require("lodash.omitby"));var _lodash2=_interopRequireDefault(require("lodash.isnil"));var _lodash3=_interopRequireDefault(require("lodash.pick"));var _lodash4=_interopRequireDefault(require("lodash.omit"));var stylingProps={margin:['margin','m','marginTop','mt','marginRight','mr','marginBottom','mb','marginLeft','ml','marginX','mx','marginY','my'],padding:['padding','p','paddingTop','pt','paddingRight','pr','paddingBottom','pb','paddingLeft','pl','paddingX','px','paddingY','py'],border:['border','borderWidth','borderStyle','borderColor','borderRadius','borderTop','borderTopWidth','borderTopStyle','borderTopColor','borderTopLeftRadius','borderTopRightRadius','borderRight','borderRightWidth','borderRightStyle','borderRightColor','borderBottom','borderBottomWidth','borderBottomStyle','borderBottomColor','borderBottomLeftRadius','borderBottomRightRadius','borderLeft','borderLeftWidth','borderLeftStyle','borderLeftColor','borderX','borderY'],layout:['width','w','height','h','display','minWidth','minW','minH','minHeight','maxWidth','maxW','maxHeight','maxH','size','verticalAlign','overflow','overflowX','overflowY'],flexbox:['alignItems','alignContent','justifyItems','justifyContent','flexWrap','flexDirection','flex','flexGrow','flexShrink','flexBasis','justifySelf','alignSelf','order'],position:['position','zIndex','top','right','bottom','left'],background:['bg','backgroundColor']};exports.stylingProps=stylingProps;function omitUndefined(obj){return(0,_lodash.default)(obj,_lodash2.default);}function getRandomString(length){var result='';var characters='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';var charactersLength=characters.length;for(var i=0;i<length;i++){result+=characters.charAt(Math.floor(Math.random()*charactersLength));}return result;}function orderedPick(obj,values){var ret={};Object.keys(obj).forEach(function(key){if(values.includes(key)){ret[key]=obj[key];}});return ret;}function orderedExtractInObject(parent,values){return[omitUndefined(orderedPick(parent,values)),omitUndefined((0,_lodash4.default)(parent,values))];}function extractInObject(parent,values){return[omitUndefined((0,_lodash3.default)(parent,values)),omitUndefined((0,_lodash4.default)(parent,values))];}function getColorFormColorScheme(props){var theme=props.theme,colorScheme=props.colorScheme,isDisabled=props.isDisabled;var simpleColorScheme=colorScheme.split('.')[0];if(isDisabled)return'gray.300';else if(simpleColorScheme in theme.colors){return theme.colors[simpleColorScheme][0]==='#'?simpleColorScheme:theme.colors[simpleColorScheme][400]||theme.colors[simpleColorScheme][200];}else return'primary.200';}function getColorScheme(props,customColorScheme){var theme=props.theme,colorScheme=props.colorScheme;colorScheme=customColorScheme||colorScheme;if(!(colorScheme in theme.colors))return'primary';else{if(typeof theme.colors[colorScheme]==='object')return colorScheme;}}var breakpoints=Object.freeze(['base','sm','md','lg','xl']);exports.breakpoints=breakpoints;var inValidBreakpointProps=['style','children','shadowOffset'];exports.inValidBreakpointProps=inValidBreakpointProps;function hasValidBreakpointFormat(breaks,property){if(property&&inValidBreakpointProps.indexOf(property)!==-1){return false;}else if(Array.isArray(breaks)){return breaks.length?true:false;}else if(typeof breaks==='object'){var keys=Object.keys(breaks);for(var i=0;i<keys.length;i++){if(breakpoints.indexOf(keys[i])===-1){return false;}}return true;}else{return false;}}function findLastValidBreakpoint(values,currentBreakpoint){var _valArray$currentBrea;var valArray=Array.isArray(values)?values:breakpoints.map(function(bPoint){return values[bPoint];});return(_valArray$currentBrea=valArray[currentBreakpoint])!=null?_valArray$currentBrea:valArray.slice(0,currentBreakpoint+1).filter(function(v){return!(0,_lodash2.default)(v);}).pop();}function getClosestBreakpoint(values,point){var dimValues=Object.values(values);var index=-1;for(var i=0;i<dimValues.length;i++){if(dimValues[i]===point){index=i;break;}else if(dimValues[i]>point&&i!==0){index=i-1;break;}else if(dimValues[i]<point&&i===dimValues.length-1){index=i;break;}}return index;}
//# sourceMappingURL=utils.js.map