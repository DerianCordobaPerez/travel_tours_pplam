import React from 'react';
import type { IFormControlProps } from './types';
export declare type IFormControlContext = Omit<ReturnType<typeof useFormControlProvider>, 'htmlProps'>;
export declare const FormControlContext: React.Context<{}>;
export declare function useFormControlProvider(props: IFormControlProps): {
    isRequired: boolean;
    isInvalid: boolean;
    isReadOnly: boolean;
    isDisabled: boolean;
    hasFeedbackText: boolean;
    setHasFeedbackText: React.Dispatch<React.SetStateAction<boolean>>;
    hasHelpText: boolean;
    setHasHelpText: React.Dispatch<React.SetStateAction<boolean>>;
    nativeID: string;
    labelId: string;
    feedbackId: string;
    helpTextId: string;
    htmlProps: {
        children?: any;
        shadow?: number | undefined;
        _text?: import("../../primitives").ITextProps | undefined;
        bg?: string | import("../../primitives/Box/types").ILinearGradientProps | undefined;
        background?: string | import("../../primitives/Box/types").ILinearGradientProps | undefined;
        bgColor?: string | import("../../primitives/Box/types").ILinearGradientProps | undefined;
        backgroundColor?: string | import("../../primitives/Box/types").ILinearGradientProps | undefined;
        hitSlop?: import("react-native").Insets | undefined;
        onLayout?: ((event: import("react-native").LayoutChangeEvent) => void) | undefined;
        pointerEvents?: "none" | "auto" | "box-none" | "box-only" | undefined;
        removeClippedSubviews?: boolean | undefined;
        style?: import("react-native").StyleProp<import("react-native").ViewStyle>;
        testID?: string | undefined;
        collapsable?: boolean | undefined;
        needsOffscreenAlphaCompositing?: boolean | undefined;
        renderToHardwareTextureAndroid?: boolean | undefined;
        focusable?: boolean | undefined;
        shouldRasterizeIOS?: boolean | undefined;
        isTVSelectable?: boolean | undefined;
        hasTVPreferredFocus?: boolean | undefined;
        tvParallaxProperties?: import("react-native").TVParallaxProperties | undefined;
        tvParallaxShiftDistanceX?: number | undefined;
        tvParallaxShiftDistanceY?: number | undefined;
        tvParallaxTiltAngle?: number | undefined;
        tvParallaxMagnification?: number | undefined;
        onStartShouldSetResponder?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
        onMoveShouldSetResponder?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
        onResponderEnd?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderGrant?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderReject?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderMove?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderRelease?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderStart?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderTerminationRequest?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
        onResponderTerminate?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onStartShouldSetResponderCapture?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
        onMoveShouldSetResponderCapture?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
        onTouchStart?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onTouchMove?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onTouchEnd?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onTouchCancel?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onTouchEndCapture?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        accessible?: boolean | undefined;
        accessibilityActions?: readonly Readonly<{
            name: string;
            label?: string | undefined;
        }>[] | undefined;
        accessibilityLabel?: string | undefined;
        accessibilityRole?: "button" | "header" | "link" | "menu" | "menuitem" | "summary" | "image" | "switch" | "text" | "none" | "checkbox" | "radio" | "search" | "keyboardkey" | "adjustable" | "imagebutton" | "alert" | "combobox" | "menubar" | "progressbar" | "radiogroup" | "scrollbar" | "spinbutton" | "tab" | "tablist" | "timer" | "toolbar" | undefined;
        accessibilityState?: import("react-native").AccessibilityState | undefined;
        accessibilityHint?: string | undefined;
        accessibilityValue?: import("react-native").AccessibilityValue | undefined;
        onAccessibilityAction?: ((event: import("react-native").AccessibilityActionEvent) => void) | undefined;
        accessibilityLiveRegion?: "none" | "polite" | "assertive" | undefined;
        importantForAccessibility?: "auto" | "no" | "yes" | "no-hide-descendants" | undefined;
        accessibilityElementsHidden?: boolean | undefined;
        accessibilityViewIsModal?: boolean | undefined;
        onAccessibilityEscape?: (() => void) | undefined;
        onAccessibilityTap?: (() => void) | undefined;
        onMagicTap?: (() => void) | undefined;
        accessibilityIgnoresInvertColors?: boolean | undefined;
        opacity?: (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | ((string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | null)[] | {
            [x: string]: (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
            [x: number]: (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
        } | null | undefined;
        textColor?: "white" | "transparent" | "black" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "aliceblue" | "antiquewhite" | "aqua" | "aquamarine" | "azure" | "beige" | "bisque" | "blanchedalmond" | "blue" | "blueviolet" | "brown" | "burlywood" | "cadetblue" | "chartreuse" | "chocolate" | "coral" | "cornflowerblue" | "cornsilk" | "crimson" | "cyan" | "darkblue" | "darkcyan" | "darkgoldenrod" | "darkgray" | "darkgreen" | "darkgrey" | "darkkhaki" | "darkmagenta" | "darkolivegreen" | "darkorange" | "darkorchid" | "darkred" | "darksalmon" | "darkseagreen" | "darkslateblue" | "darkslategray" | "darkslategrey" | "darkturquoise" | "darkviolet" | "deeppink" | "deepskyblue" | "dimgray" | "dimgrey" | "dodgerblue" | "firebrick" | "floralwhite" | "forestgreen" | "fuchsia" | "gainsboro" | "ghostwhite" | "gold" | "goldenrod" | "gray" | "green" | "greenyellow" | "grey" | "honeydew" | "hotpink" | "indianred" | "indigo" | "ivory" | "khaki" | "lavender" | "lavenderblush" | "lawngreen" | "lemonchiffon" | "lightblue" | "lightcoral" | "lightcyan" | "lightgoldenrodyellow" | "lightgray" | "lightgreen" | "lightgrey" | "lightpink" | "lightsalmon" | "lightseagreen" | "lightskyblue" | "lightslategray" | "lightslategrey" | "lightsteelblue" | "lightyellow" | "lime" | "limegreen" | "linen" | "magenta" | "maroon" | "mediumaquamarine" | "mediumblue" | "mediumorchid" | "mediumpurple" | "mediumseagreen" | "mediumslateblue" | "mediumspringgreen" | "mediumturquoise" | "mediumvioletred" | "midnightblue" | "mintcream" | "mistyrose" | "moccasin" | "navajowhite" | "navy" | "oldlace" | "olive" | "olivedrab" | "orange" | "orangered" | "orchid" | "palegoldenrod" | "palegreen" | "paleturquoise" | "palevioletred" | "papayawhip" | "peachpuff" | "peru" | "pink" | "plum" | "powderblue" | "purple" | "rebeccapurple" | "red" | "rosybrown" | "royalblue" | "saddlebrown" | "salmon" | "sandybrown" | "seagreen" | "seashell" | "sienna" | "silver" | "skyblue" | "slateblue" | "slategray" | "slategrey" | "snow" | "springgreen" | "steelblue" | "tan" | "teal" | "thistle" | "tomato" | "turquoise" | "violet" | "wheat" | "whitesmoke" | "yellow" | "yellowgreen" | "ActiveBorder" | "ActiveCaption" | "AppWorkspace" | "Background" | "ButtonFace" | "ButtonHighlight" | "ButtonShadow" | "ButtonText" | "CaptionText" | "GrayText" | "Highlight" | "HighlightText" | "InactiveBorder" | "InactiveCaption" | "InactiveCaptionText" | "InfoBackground" | "InfoText" | "Menu" | "MenuText" | "Scrollbar" | "ThreeDDarkShadow" | "ThreeDFace" | "ThreeDHighlight" | "ThreeDLightShadow" | "ThreeDShadow" | "Window" | "WindowFrame" | "WindowText" | "currentcolor" | undefined;
        m?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        margin?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        mt?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        marginTop?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        mr?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        marginRight?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        mb?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        marginBottom?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        ml?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        marginLeft?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        mx?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        marginX?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        my?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        marginY?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        p?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        padding?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        pt?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        paddingTop?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        pr?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        paddingRight?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        pb?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        paddingBottom?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        pl?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        paddingLeft?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        px?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        paddingX?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        py?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        paddingY?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        d?: import("../../types").ResponsiveValue<import("csstype").Property.Display>;
        w?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        boxSize?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        maxW?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        minW?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        h?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        maxH?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        minH?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        boxSizing?: import("../../types").ResponsiveValue<import("csstype").Property.BoxSizing>;
        width?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        height?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        minWidth?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        minHeight?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        maxWidth?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        maxHeight?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        display?: "ruby" | "table" | "flex" | "none" | (string & {}) | "grid" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "block" | "inline" | "contents" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | ("ruby" | "table" | "flex" | "none" | (string & {}) | "grid" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "block" | "inline" | "contents" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | null)[] | {
            [x: string]: "ruby" | "table" | "flex" | "none" | (string & {}) | "grid" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "block" | "inline" | "contents" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | undefined;
            [x: number]: "ruby" | "table" | "flex" | "none" | (string & {}) | "grid" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "block" | "inline" | "contents" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | undefined;
        } | null | undefined;
        verticalAlign?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        size?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        overflow?: "auto" | "hidden" | (string & {}) | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | ("auto" | "hidden" | (string & {}) | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | null)[] | {
            [x: string]: "auto" | "hidden" | (string & {}) | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
            [x: number]: "auto" | "hidden" | (string & {}) | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
        } | null | undefined;
        overflowX?: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | ("auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | null)[] | {
            [x: string]: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
            [x: number]: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
        } | null | undefined;
        overflowY?: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | ("auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | null)[] | {
            [x: string]: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
            [x: number]: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
        } | null | undefined;
        flexDir?: import("../../types").ResponsiveValue<import("csstype").Property.FlexDirection>;
        alignItems?: "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | ("center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | null)[] | {
            [x: string]: "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
            [x: number]: "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
        } | null | undefined;
        alignContent?: "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "baseline" | "stretch" | "space-around" | "space-evenly" | ("center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "baseline" | "stretch" | "space-around" | "space-evenly" | null)[] | {
            [x: string]: "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "baseline" | "stretch" | "space-around" | "space-evenly" | undefined;
            [x: number]: "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "baseline" | "stretch" | "space-around" | "space-evenly" | undefined;
        } | null | undefined;
        justifyItems?: "right" | "left" | "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | "legacy" | ("right" | "left" | "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | "legacy" | null)[] | {
            [x: string]: "right" | "left" | "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | "legacy" | undefined;
            [x: number]: "right" | "left" | "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | "legacy" | undefined;
        } | null | undefined;
        justifyContent?: "right" | "left" | "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "stretch" | "space-around" | "space-evenly" | ("right" | "left" | "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "stretch" | "space-around" | "space-evenly" | null)[] | {
            [x: string]: "right" | "left" | "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "stretch" | "space-around" | "space-evenly" | undefined;
            [x: number]: "right" | "left" | "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "stretch" | "space-around" | "space-evenly" | undefined;
        } | null | undefined;
        flexWrap?: "wrap" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "nowrap" | "wrap-reverse" | ("wrap" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "nowrap" | "wrap-reverse" | null)[] | {
            [x: string]: "wrap" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "nowrap" | "wrap-reverse" | undefined;
            [x: number]: "wrap" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "nowrap" | "wrap-reverse" | undefined;
        } | null | undefined;
        flexDirection?: "row" | "column" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "column-reverse" | "row-reverse" | ("row" | "column" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "column-reverse" | "row-reverse" | null)[] | {
            [x: string]: "row" | "column" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "column-reverse" | "row-reverse" | undefined;
            [x: number]: "row" | "column" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "column-reverse" | "row-reverse" | undefined;
        } | null | undefined;
        flex?: string | number | (string & {}) | (number & {}) | (string | number | (string & {}) | (number & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | (number & {}) | undefined;
            [x: number]: string | number | (string & {}) | (number & {}) | undefined;
        } | null | undefined;
        flexGrow?: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | ("-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | null)[] | {
            [x: string]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
            [x: number]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
        } | null | undefined;
        flexShrink?: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | ("-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | null)[] | {
            [x: string]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
            [x: number]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
        } | null | undefined;
        flexBasis?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        justifySelf?: "right" | "left" | "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | ("right" | "left" | "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | null)[] | {
            [x: string]: "right" | "left" | "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
            [x: number]: "right" | "left" | "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
        } | null | undefined;
        alignSelf?: "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | ("center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | null)[] | {
            [x: string]: "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
            [x: number]: "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
        } | null | undefined;
        order?: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | ("-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | null)[] | {
            [x: string]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
            [x: number]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
        } | null | undefined;
        inset?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        insetX?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        insetY?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        pos?: import("../../types").ResponsiveValue<import("csstype").Property.Position>;
        position?: "relative" | "absolute" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "-webkit-sticky" | "static" | "sticky" | ("relative" | "absolute" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "-webkit-sticky" | "static" | "sticky" | null)[] | {
            [x: string]: "relative" | "absolute" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "-webkit-sticky" | "static" | "sticky" | undefined;
            [x: number]: "relative" | "absolute" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "-webkit-sticky" | "static" | "sticky" | undefined;
        } | null | undefined;
        zIndex?: "auto" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | ("auto" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | null)[] | {
            [x: string]: "auto" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
            [x: number]: "auto" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
        } | null | undefined;
        top?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        right?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        bottom?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        left?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        rounded?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedTopLeft?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedTopRight?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderTopLeftRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderTopRightRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedBottomLeft?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedBottomRight?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderBottomLeftRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderBottomRightRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderTopRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedTop?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderBottomRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedBottom?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderLeftRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedLeft?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderRightRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedRight?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        border?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        borderX?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        borderY?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        borderWidth?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderTopWidth?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderBottomWidth?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderLeftWidth?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderRightWidth?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderStyle?: "none" | "solid" | "hidden" | (string & {}) | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | ("none" | "solid" | "hidden" | (string & {}) | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | null)[] | {
            [x: string]: "none" | "solid" | "hidden" | (string & {}) | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
            [x: number]: "none" | "solid" | "hidden" | (string & {}) | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
        } | null | undefined;
        borderTopStyle?: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | ("none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | null)[] | {
            [x: string]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
            [x: number]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
        } | null | undefined;
        borderBottomStyle?: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | ("none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | null)[] | {
            [x: string]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
            [x: number]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
        } | null | undefined;
        borderLeftStyle?: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | ("none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | null)[] | {
            [x: string]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
            [x: number]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
        } | null | undefined;
        borderRightStyle?: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | ("none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | null)[] | {
            [x: string]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
            [x: number]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
        } | null | undefined;
        borderColor?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderTopColor?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderBottomColor?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderLeftColor?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderRightColor?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderRadius?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderTop?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        borderRight?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        borderBottom?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        borderLeft?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        animation?: import("../../types").ResponsiveValue<import("csstype").Property.Animation<string & {}>>;
        appearance?: import("../../types").ResponsiveValue<import("csstype").Property.Appearance>;
        visibility?: import("../../types").ResponsiveValue<import("csstype").Property.Visibility>;
        userSelect?: import("../../types").ResponsiveValue<import("csstype").Property.UserSelect>;
        cursor?: import("../../types").ResponsiveValue<import("csstype").Property.Cursor>;
        resize?: import("../../types").ResponsiveValue<import("csstype").Property.Resize>;
        objectFit?: import("../../types").ResponsiveValue<import("csstype").Property.ObjectFit>;
        objectPosition?: import("../../types").ResponsiveValue<import("csstype").Property.ObjectPosition<0 | (string & {})>>;
        float?: import("../../types").ResponsiveValue<import("csstype").Property.Float>;
        willChange?: import("../../types").ResponsiveValue<import("csstype").Property.WillChange>;
        outline?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        outlineOffset?: import("../../types").ResponsiveValue<React.ReactText>;
        outlineColor?: import("../../types").ResponsiveValue<import("csstype").Property.OutlineColor>;
        outlineWidth?: import("../../types").ResponsiveValue<React.ReactText>;
        outlineStyle?: import("../../types").ResponsiveValue<import("csstype").Property.OutlineStyle>;
        backgroundAttachment?: (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "local" | "scroll" | undefined;
        backgroundBlendMode?: "screen" | "normal" | (string & {}) | "color" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "color-burn" | "color-dodge" | "darken" | "difference" | "exclusion" | "hard-light" | "hue" | "lighten" | "luminosity" | "multiply" | "overlay" | "saturation" | "soft-light" | undefined;
        backgroundImage?: "none" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        backgroundPosition?: 0 | "top" | "right" | "bottom" | "left" | "center" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        backgroundRepeat?: "space" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "no-repeat" | "repeat" | "repeat-x" | "repeat-y" | "round" | undefined;
        backgroundSize?: 0 | "auto" | (string & {}) | "contain" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "cover" | undefined;
        bgImage?: "none" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        bgImg?: "none" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        bgBlendMode?: "screen" | "normal" | (string & {}) | "color" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "color-burn" | "color-dodge" | "darken" | "difference" | "exclusion" | "hard-light" | "hue" | "lighten" | "luminosity" | "multiply" | "overlay" | "saturation" | "soft-light" | undefined;
        bgSize?: 0 | "auto" | (string & {}) | "contain" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "cover" | undefined;
        bgPosition?: 0 | "top" | "right" | "bottom" | "left" | "center" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        bgPos?: 0 | "top" | "right" | "bottom" | "left" | "center" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        bgRepeat?: "space" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "no-repeat" | "repeat" | "repeat-x" | "repeat-y" | "round" | undefined;
        bgAttachment?: (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "local" | "scroll" | undefined;
        safeArea?: number | boolean | undefined;
        safeAreaX?: number | boolean | undefined;
        safeAreaY?: number | boolean | undefined;
        safeAreaTop?: number | boolean | undefined;
        safeAreaBottom?: number | boolean | undefined;
        safeAreaLeft?: number | boolean | undefined;
        safeAreaRight?: number | boolean | undefined;
        transform?: "none" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        transformOrigin?: 0 | "top" | "right" | "bottom" | "left" | "center" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        _web?: any;
        _ios?: any;
        _android?: any;
        _light?: any;
        _dark?: any;
    };
};
/**
 * React hook that provides the props that should be spread on to
 * input fields (`input`, `select`, `textarea`, etc.).
 *
 * It provides a convenient way to control a form fields, validation
 * and helper text.
 */
export declare function useFormControl(props: IFormControlProps): {
    nativeID: string;
    disabled: boolean;
    readOnly: boolean;
    required: boolean;
    accessibilityInvalid: boolean | undefined;
    accessibilityRequired: boolean | undefined;
    accessibilityReadOnly: boolean | undefined;
    accessibilityDescribedBy: string | undefined;
    children?: any;
    p?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    style?: import("react-native").StyleProp<import("react-native").ViewStyle>;
    margin?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    m?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    marginTop?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    mt?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    marginRight?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    mr?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    marginBottom?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    mb?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    marginLeft?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    ml?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    marginX?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    mx?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    marginY?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    my?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    padding?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    paddingTop?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    pt?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    paddingRight?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    pr?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    paddingBottom?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    pb?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    paddingLeft?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    pl?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    paddingX?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    px?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    paddingY?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    py?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    border?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    borderWidth?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    borderStyle?: "none" | "solid" | "hidden" | (string & {}) | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | ("none" | "solid" | "hidden" | (string & {}) | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | null)[] | {
        [x: string]: "none" | "solid" | "hidden" | (string & {}) | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
        [x: number]: "none" | "solid" | "hidden" | (string & {}) | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
    } | null | undefined;
    borderColor?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    borderRadius?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    borderTop?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    borderTopWidth?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    borderTopStyle?: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | ("none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | null)[] | {
        [x: string]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
        [x: number]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
    } | null | undefined;
    borderTopColor?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    borderTopLeftRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    borderTopRightRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    borderRight?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    borderRightWidth?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    borderRightStyle?: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | ("none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | null)[] | {
        [x: string]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
        [x: number]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
    } | null | undefined;
    borderRightColor?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    borderBottom?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    borderBottomWidth?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    borderBottomStyle?: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | ("none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | null)[] | {
        [x: string]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
        [x: number]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
    } | null | undefined;
    borderBottomColor?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    borderBottomLeftRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    borderBottomRightRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    borderLeft?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    borderLeftWidth?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    borderLeftStyle?: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | ("none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | null)[] | {
        [x: string]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
        [x: number]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
    } | null | undefined;
    borderLeftColor?: string | number | symbol | (string | number | symbol | null)[] | {
        [x: string]: string | number | symbol | undefined;
        [x: number]: string | number | symbol | undefined;
    } | null | undefined;
    borderX?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    borderY?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    width?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    w?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    height?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    h?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    display?: "ruby" | "table" | "flex" | "none" | (string & {}) | "grid" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "block" | "inline" | "contents" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | ("ruby" | "table" | "flex" | "none" | (string & {}) | "grid" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "block" | "inline" | "contents" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | null)[] | {
        [x: string]: "ruby" | "table" | "flex" | "none" | (string & {}) | "grid" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "block" | "inline" | "contents" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | undefined;
        [x: number]: "ruby" | "table" | "flex" | "none" | (string & {}) | "grid" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "block" | "inline" | "contents" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | undefined;
    } | null | undefined;
    minWidth?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    minW?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    minH?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    minHeight?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    maxWidth?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    maxW?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    maxHeight?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    maxH?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    size?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    verticalAlign?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    overflow?: "auto" | "hidden" | (string & {}) | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | ("auto" | "hidden" | (string & {}) | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | null)[] | {
        [x: string]: "auto" | "hidden" | (string & {}) | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
        [x: number]: "auto" | "hidden" | (string & {}) | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
    } | null | undefined;
    overflowX?: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | ("auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | null)[] | {
        [x: string]: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
        [x: number]: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
    } | null | undefined;
    overflowY?: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | ("auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | null)[] | {
        [x: string]: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
        [x: number]: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
    } | null | undefined;
    alignItems?: "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | ("center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | null)[] | {
        [x: string]: "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
        [x: number]: "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
    } | null | undefined;
    alignContent?: "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "baseline" | "stretch" | "space-around" | "space-evenly" | ("center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "baseline" | "stretch" | "space-around" | "space-evenly" | null)[] | {
        [x: string]: "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "baseline" | "stretch" | "space-around" | "space-evenly" | undefined;
        [x: number]: "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "baseline" | "stretch" | "space-around" | "space-evenly" | undefined;
    } | null | undefined;
    justifyItems?: "right" | "left" | "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | "legacy" | ("right" | "left" | "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | "legacy" | null)[] | {
        [x: string]: "right" | "left" | "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | "legacy" | undefined;
        [x: number]: "right" | "left" | "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | "legacy" | undefined;
    } | null | undefined;
    justifyContent?: "right" | "left" | "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "stretch" | "space-around" | "space-evenly" | ("right" | "left" | "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "stretch" | "space-around" | "space-evenly" | null)[] | {
        [x: string]: "right" | "left" | "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "stretch" | "space-around" | "space-evenly" | undefined;
        [x: number]: "right" | "left" | "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "stretch" | "space-around" | "space-evenly" | undefined;
    } | null | undefined;
    flexWrap?: "wrap" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "nowrap" | "wrap-reverse" | ("wrap" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "nowrap" | "wrap-reverse" | null)[] | {
        [x: string]: "wrap" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "nowrap" | "wrap-reverse" | undefined;
        [x: number]: "wrap" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "nowrap" | "wrap-reverse" | undefined;
    } | null | undefined;
    flexDirection?: "row" | "column" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "column-reverse" | "row-reverse" | ("row" | "column" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "column-reverse" | "row-reverse" | null)[] | {
        [x: string]: "row" | "column" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "column-reverse" | "row-reverse" | undefined;
        [x: number]: "row" | "column" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "column-reverse" | "row-reverse" | undefined;
    } | null | undefined;
    flex?: string | number | (string & {}) | (number & {}) | (string | number | (string & {}) | (number & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | (number & {}) | undefined;
        [x: number]: string | number | (string & {}) | (number & {}) | undefined;
    } | null | undefined;
    flexGrow?: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | ("-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | null)[] | {
        [x: string]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
        [x: number]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
    } | null | undefined;
    flexShrink?: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | ("-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | null)[] | {
        [x: string]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
        [x: number]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
    } | null | undefined;
    flexBasis?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    justifySelf?: "right" | "left" | "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | ("right" | "left" | "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | null)[] | {
        [x: string]: "right" | "left" | "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
        [x: number]: "right" | "left" | "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
    } | null | undefined;
    alignSelf?: "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | ("center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | null)[] | {
        [x: string]: "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
        [x: number]: "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
    } | null | undefined;
    order?: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | ("-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | null)[] | {
        [x: string]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
        [x: number]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
    } | null | undefined;
    position?: "relative" | "absolute" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "-webkit-sticky" | "static" | "sticky" | ("relative" | "absolute" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "-webkit-sticky" | "static" | "sticky" | null)[] | {
        [x: string]: "relative" | "absolute" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "-webkit-sticky" | "static" | "sticky" | undefined;
        [x: number]: "relative" | "absolute" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "-webkit-sticky" | "static" | "sticky" | undefined;
    } | null | undefined;
    zIndex?: "auto" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | ("auto" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | null)[] | {
        [x: string]: "auto" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
        [x: number]: "auto" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
    } | null | undefined;
    top?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    right?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    bottom?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    left?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
        [x: string]: string | number | (string & {}) | undefined;
        [x: number]: string | number | (string & {}) | undefined;
    } | null | undefined;
    bg?: string | import("../../primitives/Box/types").ILinearGradientProps | undefined;
    backgroundColor?: string | import("../../primitives/Box/types").ILinearGradientProps | undefined;
    outline?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    _web?: any;
    _ios?: any;
    _android?: any;
    appearance?: import("../../types").ResponsiveValue<import("csstype").Property.Appearance>;
    backgroundAttachment?: (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "local" | "scroll" | undefined;
    backgroundBlendMode?: "screen" | "normal" | (string & {}) | "color" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "color-burn" | "color-dodge" | "darken" | "difference" | "exclusion" | "hard-light" | "hue" | "lighten" | "luminosity" | "multiply" | "overlay" | "saturation" | "soft-light" | undefined;
    backgroundImage?: "none" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
    backgroundPosition?: 0 | "top" | "right" | "bottom" | "left" | "center" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
    backgroundRepeat?: "space" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "no-repeat" | "repeat" | "repeat-x" | "repeat-y" | "round" | undefined;
    backgroundSize?: 0 | "auto" | (string & {}) | "contain" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "cover" | undefined;
    boxSizing?: import("../../types").ResponsiveValue<import("csstype").Property.BoxSizing>;
    cursor?: import("../../types").ResponsiveValue<import("csstype").Property.Cursor>;
    float?: import("../../types").ResponsiveValue<import("csstype").Property.Float>;
    inset?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    objectFit?: import("../../types").ResponsiveValue<import("csstype").Property.ObjectFit>;
    objectPosition?: import("../../types").ResponsiveValue<import("csstype").Property.ObjectPosition<0 | (string & {})>>;
    opacity?: (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | ((string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | null)[] | {
        [x: string]: (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
        [x: number]: (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
    } | null | undefined;
    outlineColor?: import("../../types").ResponsiveValue<import("csstype").Property.OutlineColor>;
    outlineOffset?: import("../../types").ResponsiveValue<React.ReactText>;
    outlineStyle?: import("../../types").ResponsiveValue<import("csstype").Property.OutlineStyle>;
    outlineWidth?: import("../../types").ResponsiveValue<React.ReactText>;
    pointerEvents?: "none" | "auto" | "box-none" | "box-only" | undefined;
    resize?: import("../../types").ResponsiveValue<import("csstype").Property.Resize>;
    transform?: "none" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
    transformOrigin?: 0 | "top" | "right" | "bottom" | "left" | "center" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
    userSelect?: import("../../types").ResponsiveValue<import("csstype").Property.UserSelect>;
    visibility?: import("../../types").ResponsiveValue<import("csstype").Property.Visibility>;
    willChange?: import("../../types").ResponsiveValue<import("csstype").Property.WillChange>;
    animation?: import("../../types").ResponsiveValue<import("csstype").Property.Animation<string & {}>>;
    background?: string | import("../../primitives/Box/types").ILinearGradientProps | undefined;
    shadow?: number | undefined;
    _light?: any;
    _dark?: any;
    bgColor?: string | import("../../primitives/Box/types").ILinearGradientProps | undefined;
    safeArea?: number | boolean | undefined;
    safeAreaY?: number | boolean | undefined;
    safeAreaTop?: number | boolean | undefined;
    safeAreaBottom?: number | boolean | undefined;
    safeAreaLeft?: number | boolean | undefined;
    safeAreaX?: number | boolean | undefined;
    safeAreaRight?: number | boolean | undefined;
    testID?: string | undefined;
    textColor?: "white" | "transparent" | "black" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "aliceblue" | "antiquewhite" | "aqua" | "aquamarine" | "azure" | "beige" | "bisque" | "blanchedalmond" | "blue" | "blueviolet" | "brown" | "burlywood" | "cadetblue" | "chartreuse" | "chocolate" | "coral" | "cornflowerblue" | "cornsilk" | "crimson" | "cyan" | "darkblue" | "darkcyan" | "darkgoldenrod" | "darkgray" | "darkgreen" | "darkgrey" | "darkkhaki" | "darkmagenta" | "darkolivegreen" | "darkorange" | "darkorchid" | "darkred" | "darksalmon" | "darkseagreen" | "darkslateblue" | "darkslategray" | "darkslategrey" | "darkturquoise" | "darkviolet" | "deeppink" | "deepskyblue" | "dimgray" | "dimgrey" | "dodgerblue" | "firebrick" | "floralwhite" | "forestgreen" | "fuchsia" | "gainsboro" | "ghostwhite" | "gold" | "goldenrod" | "gray" | "green" | "greenyellow" | "grey" | "honeydew" | "hotpink" | "indianred" | "indigo" | "ivory" | "khaki" | "lavender" | "lavenderblush" | "lawngreen" | "lemonchiffon" | "lightblue" | "lightcoral" | "lightcyan" | "lightgoldenrodyellow" | "lightgray" | "lightgreen" | "lightgrey" | "lightpink" | "lightsalmon" | "lightseagreen" | "lightskyblue" | "lightslategray" | "lightslategrey" | "lightsteelblue" | "lightyellow" | "lime" | "limegreen" | "linen" | "magenta" | "maroon" | "mediumaquamarine" | "mediumblue" | "mediumorchid" | "mediumpurple" | "mediumseagreen" | "mediumslateblue" | "mediumspringgreen" | "mediumturquoise" | "mediumvioletred" | "midnightblue" | "mintcream" | "mistyrose" | "moccasin" | "navajowhite" | "navy" | "oldlace" | "olive" | "olivedrab" | "orange" | "orangered" | "orchid" | "palegoldenrod" | "palegreen" | "paleturquoise" | "palevioletred" | "papayawhip" | "peachpuff" | "peru" | "pink" | "plum" | "powderblue" | "purple" | "rebeccapurple" | "red" | "rosybrown" | "royalblue" | "saddlebrown" | "salmon" | "sandybrown" | "seagreen" | "seashell" | "sienna" | "silver" | "skyblue" | "slateblue" | "slategray" | "slategrey" | "snow" | "springgreen" | "steelblue" | "tan" | "teal" | "thistle" | "tomato" | "turquoise" | "violet" | "wheat" | "whitesmoke" | "yellow" | "yellowgreen" | "ActiveBorder" | "ActiveCaption" | "AppWorkspace" | "Background" | "ButtonFace" | "ButtonHighlight" | "ButtonShadow" | "ButtonText" | "CaptionText" | "GrayText" | "Highlight" | "HighlightText" | "InactiveBorder" | "InactiveCaption" | "InactiveCaptionText" | "InfoBackground" | "InfoText" | "Menu" | "MenuText" | "Scrollbar" | "ThreeDDarkShadow" | "ThreeDFace" | "ThreeDHighlight" | "ThreeDLightShadow" | "ThreeDShadow" | "Window" | "WindowFrame" | "WindowText" | "currentcolor" | undefined;
    onLayout?: ((event: import("react-native").LayoutChangeEvent) => void) | undefined;
    accessible?: boolean | undefined;
    accessibilityActions?: readonly Readonly<{
        name: string;
        label?: string | undefined;
    }>[] | undefined;
    accessibilityLabel?: string | undefined;
    accessibilityRole?: "button" | "header" | "link" | "menu" | "menuitem" | "summary" | "image" | "switch" | "text" | "none" | "checkbox" | "radio" | "search" | "keyboardkey" | "adjustable" | "imagebutton" | "alert" | "combobox" | "menubar" | "progressbar" | "radiogroup" | "scrollbar" | "spinbutton" | "tab" | "tablist" | "timer" | "toolbar" | undefined;
    accessibilityState?: import("react-native").AccessibilityState | undefined;
    accessibilityHint?: string | undefined;
    accessibilityValue?: import("react-native").AccessibilityValue | undefined;
    onAccessibilityAction?: ((event: import("react-native").AccessibilityActionEvent) => void) | undefined;
    accessibilityLiveRegion?: "none" | "polite" | "assertive" | undefined;
    importantForAccessibility?: "auto" | "no" | "yes" | "no-hide-descendants" | undefined;
    accessibilityElementsHidden?: boolean | undefined;
    accessibilityViewIsModal?: boolean | undefined;
    onAccessibilityEscape?: (() => void) | undefined;
    onAccessibilityTap?: (() => void) | undefined;
    onMagicTap?: (() => void) | undefined;
    accessibilityIgnoresInvertColors?: boolean | undefined;
    rounded?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    roundedTopLeft?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    roundedTopRight?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    roundedBottomLeft?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    roundedBottomRight?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    borderTopRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    roundedTop?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    borderBottomRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    roundedBottom?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    borderLeftRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    roundedLeft?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    borderRightRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    roundedRight?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    bgImage?: "none" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
    bgImg?: "none" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
    bgBlendMode?: "screen" | "normal" | (string & {}) | "color" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "color-burn" | "color-dodge" | "darken" | "difference" | "exclusion" | "hard-light" | "hue" | "lighten" | "luminosity" | "multiply" | "overlay" | "saturation" | "soft-light" | undefined;
    bgSize?: 0 | "auto" | (string & {}) | "contain" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "cover" | undefined;
    bgPosition?: 0 | "top" | "right" | "bottom" | "left" | "center" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
    bgPos?: 0 | "top" | "right" | "bottom" | "left" | "center" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
    bgRepeat?: "space" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "no-repeat" | "repeat" | "repeat-x" | "repeat-y" | "round" | undefined;
    bgAttachment?: (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "local" | "scroll" | undefined;
    insetX?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    insetY?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    pos?: import("../../types").ResponsiveValue<import("csstype").Property.Position>;
    d?: import("../../types").ResponsiveValue<import("csstype").Property.Display>;
    boxSize?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
    flexDir?: import("../../types").ResponsiveValue<import("csstype").Property.FlexDirection>;
    _text?: import("../../primitives").ITextProps | undefined;
    hitSlop?: import("react-native").Insets | undefined;
    removeClippedSubviews?: boolean | undefined;
    collapsable?: boolean | undefined;
    needsOffscreenAlphaCompositing?: boolean | undefined;
    renderToHardwareTextureAndroid?: boolean | undefined;
    focusable?: boolean | undefined;
    shouldRasterizeIOS?: boolean | undefined;
    isTVSelectable?: boolean | undefined;
    hasTVPreferredFocus?: boolean | undefined;
    tvParallaxProperties?: import("react-native").TVParallaxProperties | undefined;
    tvParallaxShiftDistanceX?: number | undefined;
    tvParallaxShiftDistanceY?: number | undefined;
    tvParallaxTiltAngle?: number | undefined;
    tvParallaxMagnification?: number | undefined;
    onStartShouldSetResponder?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
    onMoveShouldSetResponder?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
    onResponderEnd?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onResponderGrant?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onResponderReject?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onResponderMove?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onResponderRelease?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onResponderStart?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onResponderTerminationRequest?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
    onResponderTerminate?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onStartShouldSetResponderCapture?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
    onMoveShouldSetResponderCapture?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
    onTouchStart?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onTouchMove?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onTouchEnd?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onTouchCancel?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onTouchEndCapture?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
};
export declare const useFormControlContext: () => Pick<{
    isRequired: boolean;
    isInvalid: boolean;
    isReadOnly: boolean;
    isDisabled: boolean;
    hasFeedbackText: boolean;
    setHasFeedbackText: React.Dispatch<React.SetStateAction<boolean>>;
    hasHelpText: boolean;
    setHasHelpText: React.Dispatch<React.SetStateAction<boolean>>;
    nativeID: string;
    labelId: string;
    feedbackId: string;
    helpTextId: string;
    htmlProps: {
        children?: any;
        shadow?: number | undefined;
        _text?: import("../../primitives").ITextProps | undefined;
        bg?: string | import("../../primitives/Box/types").ILinearGradientProps | undefined;
        background?: string | import("../../primitives/Box/types").ILinearGradientProps | undefined;
        bgColor?: string | import("../../primitives/Box/types").ILinearGradientProps | undefined;
        backgroundColor?: string | import("../../primitives/Box/types").ILinearGradientProps | undefined;
        hitSlop?: import("react-native").Insets | undefined;
        onLayout?: ((event: import("react-native").LayoutChangeEvent) => void) | undefined;
        pointerEvents?: "none" | "auto" | "box-none" | "box-only" | undefined;
        removeClippedSubviews?: boolean | undefined;
        style?: import("react-native").StyleProp<import("react-native").ViewStyle>;
        testID?: string | undefined;
        collapsable?: boolean | undefined;
        needsOffscreenAlphaCompositing?: boolean | undefined;
        renderToHardwareTextureAndroid?: boolean | undefined;
        focusable?: boolean | undefined;
        shouldRasterizeIOS?: boolean | undefined;
        isTVSelectable?: boolean | undefined;
        hasTVPreferredFocus?: boolean | undefined;
        tvParallaxProperties?: import("react-native").TVParallaxProperties | undefined;
        tvParallaxShiftDistanceX?: number | undefined;
        tvParallaxShiftDistanceY?: number | undefined;
        tvParallaxTiltAngle?: number | undefined;
        tvParallaxMagnification?: number | undefined;
        onStartShouldSetResponder?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
        onMoveShouldSetResponder?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
        onResponderEnd?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderGrant?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderReject?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderMove?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderRelease?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderStart?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderTerminationRequest?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
        onResponderTerminate?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onStartShouldSetResponderCapture?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
        onMoveShouldSetResponderCapture?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
        onTouchStart?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onTouchMove?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onTouchEnd?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onTouchCancel?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onTouchEndCapture?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        accessible?: boolean | undefined;
        accessibilityActions?: readonly Readonly<{
            name: string;
            label?: string | undefined;
        }>[] | undefined;
        accessibilityLabel?: string | undefined;
        accessibilityRole?: "button" | "header" | "link" | "menu" | "menuitem" | "summary" | "image" | "switch" | "text" | "none" | "checkbox" | "radio" | "search" | "keyboardkey" | "adjustable" | "imagebutton" | "alert" | "combobox" | "menubar" | "progressbar" | "radiogroup" | "scrollbar" | "spinbutton" | "tab" | "tablist" | "timer" | "toolbar" | undefined;
        accessibilityState?: import("react-native").AccessibilityState | undefined;
        accessibilityHint?: string | undefined;
        accessibilityValue?: import("react-native").AccessibilityValue | undefined;
        onAccessibilityAction?: ((event: import("react-native").AccessibilityActionEvent) => void) | undefined;
        accessibilityLiveRegion?: "none" | "polite" | "assertive" | undefined;
        importantForAccessibility?: "auto" | "no" | "yes" | "no-hide-descendants" | undefined;
        accessibilityElementsHidden?: boolean | undefined;
        accessibilityViewIsModal?: boolean | undefined;
        onAccessibilityEscape?: (() => void) | undefined;
        onAccessibilityTap?: (() => void) | undefined;
        onMagicTap?: (() => void) | undefined;
        accessibilityIgnoresInvertColors?: boolean | undefined;
        opacity?: (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | ((string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | null)[] | {
            [x: string]: (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
            [x: number]: (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
        } | null | undefined;
        textColor?: "white" | "transparent" | "black" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "aliceblue" | "antiquewhite" | "aqua" | "aquamarine" | "azure" | "beige" | "bisque" | "blanchedalmond" | "blue" | "blueviolet" | "brown" | "burlywood" | "cadetblue" | "chartreuse" | "chocolate" | "coral" | "cornflowerblue" | "cornsilk" | "crimson" | "cyan" | "darkblue" | "darkcyan" | "darkgoldenrod" | "darkgray" | "darkgreen" | "darkgrey" | "darkkhaki" | "darkmagenta" | "darkolivegreen" | "darkorange" | "darkorchid" | "darkred" | "darksalmon" | "darkseagreen" | "darkslateblue" | "darkslategray" | "darkslategrey" | "darkturquoise" | "darkviolet" | "deeppink" | "deepskyblue" | "dimgray" | "dimgrey" | "dodgerblue" | "firebrick" | "floralwhite" | "forestgreen" | "fuchsia" | "gainsboro" | "ghostwhite" | "gold" | "goldenrod" | "gray" | "green" | "greenyellow" | "grey" | "honeydew" | "hotpink" | "indianred" | "indigo" | "ivory" | "khaki" | "lavender" | "lavenderblush" | "lawngreen" | "lemonchiffon" | "lightblue" | "lightcoral" | "lightcyan" | "lightgoldenrodyellow" | "lightgray" | "lightgreen" | "lightgrey" | "lightpink" | "lightsalmon" | "lightseagreen" | "lightskyblue" | "lightslategray" | "lightslategrey" | "lightsteelblue" | "lightyellow" | "lime" | "limegreen" | "linen" | "magenta" | "maroon" | "mediumaquamarine" | "mediumblue" | "mediumorchid" | "mediumpurple" | "mediumseagreen" | "mediumslateblue" | "mediumspringgreen" | "mediumturquoise" | "mediumvioletred" | "midnightblue" | "mintcream" | "mistyrose" | "moccasin" | "navajowhite" | "navy" | "oldlace" | "olive" | "olivedrab" | "orange" | "orangered" | "orchid" | "palegoldenrod" | "palegreen" | "paleturquoise" | "palevioletred" | "papayawhip" | "peachpuff" | "peru" | "pink" | "plum" | "powderblue" | "purple" | "rebeccapurple" | "red" | "rosybrown" | "royalblue" | "saddlebrown" | "salmon" | "sandybrown" | "seagreen" | "seashell" | "sienna" | "silver" | "skyblue" | "slateblue" | "slategray" | "slategrey" | "snow" | "springgreen" | "steelblue" | "tan" | "teal" | "thistle" | "tomato" | "turquoise" | "violet" | "wheat" | "whitesmoke" | "yellow" | "yellowgreen" | "ActiveBorder" | "ActiveCaption" | "AppWorkspace" | "Background" | "ButtonFace" | "ButtonHighlight" | "ButtonShadow" | "ButtonText" | "CaptionText" | "GrayText" | "Highlight" | "HighlightText" | "InactiveBorder" | "InactiveCaption" | "InactiveCaptionText" | "InfoBackground" | "InfoText" | "Menu" | "MenuText" | "Scrollbar" | "ThreeDDarkShadow" | "ThreeDFace" | "ThreeDHighlight" | "ThreeDLightShadow" | "ThreeDShadow" | "Window" | "WindowFrame" | "WindowText" | "currentcolor" | undefined;
        m?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        margin?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        mt?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        marginTop?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        mr?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        marginRight?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        mb?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        marginBottom?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        ml?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        marginLeft?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        mx?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        marginX?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        my?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        marginY?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        p?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        padding?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        pt?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        paddingTop?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        pr?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        paddingRight?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        pb?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        paddingBottom?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        pl?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        paddingLeft?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        px?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        paddingX?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        py?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        paddingY?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        d?: import("../../types").ResponsiveValue<import("csstype").Property.Display>;
        w?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        boxSize?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        maxW?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        minW?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        h?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        maxH?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        minH?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        boxSizing?: import("../../types").ResponsiveValue<import("csstype").Property.BoxSizing>;
        width?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        height?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        minWidth?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        minHeight?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        maxWidth?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        maxHeight?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        display?: "ruby" | "table" | "flex" | "none" | (string & {}) | "grid" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "block" | "inline" | "contents" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | ("ruby" | "table" | "flex" | "none" | (string & {}) | "grid" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "block" | "inline" | "contents" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | null)[] | {
            [x: string]: "ruby" | "table" | "flex" | "none" | (string & {}) | "grid" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "block" | "inline" | "contents" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | undefined;
            [x: number]: "ruby" | "table" | "flex" | "none" | (string & {}) | "grid" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "block" | "inline" | "contents" | "run-in" | "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flow" | "flow-root" | "ruby-base" | "ruby-base-container" | "ruby-text" | "ruby-text-container" | "table-caption" | "table-cell" | "table-column" | "table-column-group" | "table-footer-group" | "table-header-group" | "table-row" | "table-row-group" | "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table" | "list-item" | undefined;
        } | null | undefined;
        verticalAlign?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        size?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        overflow?: "auto" | "hidden" | (string & {}) | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | ("auto" | "hidden" | (string & {}) | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | null)[] | {
            [x: string]: "auto" | "hidden" | (string & {}) | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
            [x: number]: "auto" | "hidden" | (string & {}) | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
        } | null | undefined;
        overflowX?: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | ("auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | null)[] | {
            [x: string]: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
            [x: number]: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
        } | null | undefined;
        overflowY?: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | ("auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | null)[] | {
            [x: string]: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
            [x: number]: "auto" | "hidden" | "clip" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "visible" | "scroll" | "-moz-hidden-unscrollable" | undefined;
        } | null | undefined;
        flexDir?: import("../../types").ResponsiveValue<import("csstype").Property.FlexDirection>;
        alignItems?: "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | ("center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | null)[] | {
            [x: string]: "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
            [x: number]: "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
        } | null | undefined;
        alignContent?: "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "baseline" | "stretch" | "space-around" | "space-evenly" | ("center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "baseline" | "stretch" | "space-around" | "space-evenly" | null)[] | {
            [x: string]: "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "baseline" | "stretch" | "space-around" | "space-evenly" | undefined;
            [x: number]: "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "baseline" | "stretch" | "space-around" | "space-evenly" | undefined;
        } | null | undefined;
        justifyItems?: "right" | "left" | "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | "legacy" | ("right" | "left" | "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | "legacy" | null)[] | {
            [x: string]: "right" | "left" | "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | "legacy" | undefined;
            [x: number]: "right" | "left" | "center" | "flex-start" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | "legacy" | undefined;
        } | null | undefined;
        justifyContent?: "right" | "left" | "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "stretch" | "space-around" | "space-evenly" | ("right" | "left" | "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "stretch" | "space-around" | "space-evenly" | null)[] | {
            [x: string]: "right" | "left" | "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "stretch" | "space-around" | "space-evenly" | undefined;
            [x: number]: "right" | "left" | "center" | "flex-start" | "flex-end" | "space-between" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "start" | "stretch" | "space-around" | "space-evenly" | undefined;
        } | null | undefined;
        flexWrap?: "wrap" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "nowrap" | "wrap-reverse" | ("wrap" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "nowrap" | "wrap-reverse" | null)[] | {
            [x: string]: "wrap" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "nowrap" | "wrap-reverse" | undefined;
            [x: number]: "wrap" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "nowrap" | "wrap-reverse" | undefined;
        } | null | undefined;
        flexDirection?: "row" | "column" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "column-reverse" | "row-reverse" | ("row" | "column" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "column-reverse" | "row-reverse" | null)[] | {
            [x: string]: "row" | "column" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "column-reverse" | "row-reverse" | undefined;
            [x: number]: "row" | "column" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "column-reverse" | "row-reverse" | undefined;
        } | null | undefined;
        flex?: string | number | (string & {}) | (number & {}) | (string | number | (string & {}) | (number & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | (number & {}) | undefined;
            [x: number]: string | number | (string & {}) | (number & {}) | undefined;
        } | null | undefined;
        flexGrow?: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | ("-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | null)[] | {
            [x: string]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
            [x: number]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
        } | null | undefined;
        flexShrink?: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | ("-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | null)[] | {
            [x: string]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
            [x: number]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
        } | null | undefined;
        flexBasis?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        justifySelf?: "right" | "left" | "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | ("right" | "left" | "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | null)[] | {
            [x: string]: "right" | "left" | "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
            [x: number]: "right" | "left" | "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
        } | null | undefined;
        alignSelf?: "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | ("center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | null)[] | {
            [x: string]: "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
            [x: number]: "center" | "flex-start" | "auto" | "flex-end" | "normal" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "end" | "self-end" | "self-start" | "start" | "baseline" | "stretch" | undefined;
        } | null | undefined;
        order?: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | ("-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | null)[] | {
            [x: string]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
            [x: number]: "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
        } | null | undefined;
        inset?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        insetX?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        insetY?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        pos?: import("../../types").ResponsiveValue<import("csstype").Property.Position>;
        position?: "relative" | "absolute" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "-webkit-sticky" | "static" | "sticky" | ("relative" | "absolute" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "-webkit-sticky" | "static" | "sticky" | null)[] | {
            [x: string]: "relative" | "absolute" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "-webkit-sticky" | "static" | "sticky" | undefined;
            [x: number]: "relative" | "absolute" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "-webkit-sticky" | "static" | "sticky" | undefined;
        } | null | undefined;
        zIndex?: "auto" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | ("auto" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | null)[] | {
            [x: string]: "auto" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
            [x: number]: "auto" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | (number & {}) | undefined;
        } | null | undefined;
        top?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        right?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        bottom?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        left?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        rounded?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedTopLeft?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedTopRight?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderTopLeftRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderTopRightRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedBottomLeft?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedBottomRight?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderBottomLeftRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderBottomRightRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderTopRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedTop?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderBottomRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedBottom?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderLeftRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedLeft?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        borderRightRadius?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        roundedRight?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        border?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        borderX?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        borderY?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        borderWidth?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderTopWidth?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderBottomWidth?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderLeftWidth?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderRightWidth?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderStyle?: "none" | "solid" | "hidden" | (string & {}) | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | ("none" | "solid" | "hidden" | (string & {}) | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | null)[] | {
            [x: string]: "none" | "solid" | "hidden" | (string & {}) | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
            [x: number]: "none" | "solid" | "hidden" | (string & {}) | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
        } | null | undefined;
        borderTopStyle?: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | ("none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | null)[] | {
            [x: string]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
            [x: number]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
        } | null | undefined;
        borderBottomStyle?: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | ("none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | null)[] | {
            [x: string]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
            [x: number]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
        } | null | undefined;
        borderLeftStyle?: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | ("none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | null)[] | {
            [x: string]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
            [x: number]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
        } | null | undefined;
        borderRightStyle?: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | ("none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | null)[] | {
            [x: string]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
            [x: number]: "none" | "solid" | "hidden" | "inset" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "dashed" | "dotted" | "double" | "groove" | "outset" | "ridge" | undefined;
        } | null | undefined;
        borderColor?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderTopColor?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderBottomColor?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderLeftColor?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderRightColor?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderRadius?: string | number | symbol | (string | number | symbol | null)[] | {
            [x: string]: string | number | symbol | undefined;
            [x: number]: string | number | symbol | undefined;
        } | null | undefined;
        borderTop?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        borderRight?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        borderBottom?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        borderLeft?: string | number | (string & {}) | (string | number | (string & {}) | null)[] | {
            [x: string]: string | number | (string & {}) | undefined;
            [x: number]: string | number | (string & {}) | undefined;
        } | null | undefined;
        animation?: import("../../types").ResponsiveValue<import("csstype").Property.Animation<string & {}>>;
        appearance?: import("../../types").ResponsiveValue<import("csstype").Property.Appearance>;
        visibility?: import("../../types").ResponsiveValue<import("csstype").Property.Visibility>;
        userSelect?: import("../../types").ResponsiveValue<import("csstype").Property.UserSelect>;
        cursor?: import("../../types").ResponsiveValue<import("csstype").Property.Cursor>;
        resize?: import("../../types").ResponsiveValue<import("csstype").Property.Resize>;
        objectFit?: import("../../types").ResponsiveValue<import("csstype").Property.ObjectFit>;
        objectPosition?: import("../../types").ResponsiveValue<import("csstype").Property.ObjectPosition<0 | (string & {})>>;
        float?: import("../../types").ResponsiveValue<import("csstype").Property.Float>;
        willChange?: import("../../types").ResponsiveValue<import("csstype").Property.WillChange>;
        outline?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<React.ReactText>>;
        outlineOffset?: import("../../types").ResponsiveValue<React.ReactText>;
        outlineColor?: import("../../types").ResponsiveValue<import("csstype").Property.OutlineColor>;
        outlineWidth?: import("../../types").ResponsiveValue<React.ReactText>;
        outlineStyle?: import("../../types").ResponsiveValue<import("csstype").Property.OutlineStyle>;
        backgroundAttachment?: (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "local" | "scroll" | undefined;
        backgroundBlendMode?: "screen" | "normal" | (string & {}) | "color" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "color-burn" | "color-dodge" | "darken" | "difference" | "exclusion" | "hard-light" | "hue" | "lighten" | "luminosity" | "multiply" | "overlay" | "saturation" | "soft-light" | undefined;
        backgroundImage?: "none" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        backgroundPosition?: 0 | "top" | "right" | "bottom" | "left" | "center" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        backgroundRepeat?: "space" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "no-repeat" | "repeat" | "repeat-x" | "repeat-y" | "round" | undefined;
        backgroundSize?: 0 | "auto" | (string & {}) | "contain" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "cover" | undefined;
        bgImage?: "none" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        bgImg?: "none" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        bgBlendMode?: "screen" | "normal" | (string & {}) | "color" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "color-burn" | "color-dodge" | "darken" | "difference" | "exclusion" | "hard-light" | "hue" | "lighten" | "luminosity" | "multiply" | "overlay" | "saturation" | "soft-light" | undefined;
        bgSize?: 0 | "auto" | (string & {}) | "contain" | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "cover" | undefined;
        bgPosition?: 0 | "top" | "right" | "bottom" | "left" | "center" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        bgPos?: 0 | "top" | "right" | "bottom" | "left" | "center" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        bgRepeat?: "space" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "no-repeat" | "repeat" | "repeat-x" | "repeat-y" | "round" | undefined;
        bgAttachment?: (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | "fixed" | "local" | "scroll" | undefined;
        safeArea?: number | boolean | undefined;
        safeAreaX?: number | boolean | undefined;
        safeAreaY?: number | boolean | undefined;
        safeAreaTop?: number | boolean | undefined;
        safeAreaBottom?: number | boolean | undefined;
        safeAreaLeft?: number | boolean | undefined;
        safeAreaRight?: number | boolean | undefined;
        transform?: "none" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        transformOrigin?: 0 | "top" | "right" | "bottom" | "left" | "center" | (string & {}) | "-moz-initial" | "inherit" | "initial" | "revert" | "unset" | undefined;
        _web?: any;
        _ios?: any;
        _android?: any;
        _light?: any;
        _dark?: any;
    };
}, "isDisabled" | "nativeID" | "isInvalid" | "isRequired" | "isReadOnly" | "hasFeedbackText" | "setHasFeedbackText" | "hasHelpText" | "setHasHelpText" | "labelId" | "feedbackId" | "helpTextId">;
