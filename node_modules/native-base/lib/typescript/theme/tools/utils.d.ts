export declare const stylingProps: {
    margin: string[];
    padding: string[];
    border: string[];
    layout: string[];
    flexbox: string[];
    position: string[];
    background: string[];
};
export declare type Dict = Record<string, any>;
export declare function omitUndefined(obj: any): Partial<any>;
export declare function getRandomString(length: number): string;
export declare function orderedExtractInObject(parent: any, values: Array<string>): Partial<any>[];
/**
 *
 * @param parent The object from which data needs to extracted
 * @param values Keys which needs to be extracted
 * @returns [extractedProps, remainingProps]
 */
export declare function extractInObject(parent: any, values: Array<string>): Partial<any>[];
export declare function getColorFormColorScheme(props: Record<string, any>): any;
export declare function getColorScheme(props: Record<string, any>, customColorScheme?: string): any;
export declare const breakpoints: readonly string[];
export declare const inValidBreakpointProps: string[];
export declare function hasValidBreakpointFormat(breaks: any, property?: string): boolean;
export declare function findLastValidBreakpoint(values: any, currentBreakpoint: number): any;
export declare function getClosestBreakpoint(values: Record<string, any>, point: number): number;
