{"version":3,"sources":["checkbox.ts"],"names":["baseStyle","props","colorScheme","theme","_text","ml","_interactionBox","position","borderRadius","_hover","bg","_focus","_disabled","_pressed","_checkbox","borderWidth","borderColor","_checked","opacity","_invalid","_icon","color","sizes","lg","size","fontSize","md","sm","defaultProps","defaultIsChecked"],"mappings":"gFAAA,+BAEA,GAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAgC,IACxCC,CAAAA,WADwC,CACjBD,KADiB,CACxCC,WADwC,CAC3BC,KAD2B,CACjBF,KADiB,CAC3BE,KAD2B,CAEhD,MAAO,CACLC,KAAK,CAAE,CACLC,EAAE,CAAE,CADC,CADF,CAILC,eAAe,CAAE,CACfC,QAAQ,CAAE,UADK,CAEfC,YAAY,CAAE,MAFC,CAGfC,MAAM,CAAE,CACNC,EAAE,CAAE,0BAAe,WAAf,CAA4B,GAA5B,EAAiCP,KAAjC,CADE,CAHO,CAMfQ,MAAM,CAAE,CACND,EAAE,CAAE,0BAAkBR,WAAlB,QAAqC,GAArC,EAA0CC,KAA1C,CADE,CANO,CASfS,SAAS,CAAE,CACTF,EAAE,CAAE,eADK,CATI,CAYfG,QAAQ,CAAE,CACRH,EAAE,CAAE,0BAAkBR,WAAlB,QAAqC,GAArC,EAA0CC,KAA1C,CADI,CAZK,CAJZ,CAoBLW,SAAS,CAAE,CACTC,WAAW,CAAE,CADJ,CAETP,YAAY,CAAE,IAFL,CAGTQ,WAAW,CAAE,gBAAK,WAAL,CAAkB,WAAlB,EAA+Bf,KAA/B,CAHJ,CAITS,EAAE,CAAE,gBAAK,UAAL,CAAiB,WAAjB,EAA8BT,KAA9B,CAJK,CAKTgB,QAAQ,CAAE,CACRD,WAAW,CAAE,gBAAQd,WAAR,QAA8BA,WAA9B,SAAiDD,KAAjD,CADL,CAERS,EAAE,CAAE,gBAAQR,WAAR,QAA8BA,WAA9B,SAAiDD,KAAjD,CAFI,CALD,CASTW,SAAS,CAAE,CACTM,OAAO,CAAE,GADA,CATF,CAYTC,QAAQ,CAAE,CACRH,WAAW,CAAE,gBAAK,WAAL,CAAkB,WAAlB,EAA+Bf,KAA/B,CADL,CAZD,CApBN,CAoCLmB,KAAK,CAAE,CACLC,KAAK,CAAE,wCAA8BpB,KAA9B,CADF,CApCF,CAAP,CAwCD,CA1CD,CA4CA,GAAMqB,CAAAA,KAAK,CAAG,CACZC,EAAE,CAAE,CAAEH,KAAK,CAAE,CAAEI,IAAI,CAAE,CAAR,CAAT,CAAsBpB,KAAK,CAAE,CAAEqB,QAAQ,CAAE,IAAZ,CAA7B,CADQ,CAEZC,EAAE,CAAE,CAAEN,KAAK,CAAE,CAAEI,IAAI,CAAE,CAAR,CAAT,CAAsBpB,KAAK,CAAE,CAAEqB,QAAQ,CAAE,IAAZ,CAA7B,CAFQ,CAGZE,EAAE,CAAE,CAAEP,KAAK,CAAE,CAAEI,IAAI,CAAE,CAAR,CAAT,CAAsBpB,KAAK,CAAE,CAAEqB,QAAQ,CAAE,IAAZ,CAA7B,CAHQ,CAAd,CAMA,GAAMG,CAAAA,YAAY,CAAG,CACnBC,gBAAgB,CAAE,KADC,CAEnBL,IAAI,CAAE,IAFa,CAGnBtB,WAAW,CAAE,SAHM,CAArB,C,aAMe,CACbF,SAAS,CAATA,SADa,CAEbsB,KAAK,CAALA,KAFa,CAGbM,YAAY,CAAZA,YAHa,C","sourcesContent":["import { mode, transparentize } from '../tools';\n\nconst baseStyle = (props: Record<string, any>) => {\n  const { colorScheme, theme } = props;\n  return {\n    _text: {\n      ml: 3,\n    },\n    _interactionBox: {\n      position: 'absolute',\n      borderRadius: 'full',\n      _hover: {\n        bg: transparentize('muted.200', 0.3)(theme),\n      },\n      _focus: {\n        bg: transparentize(`${colorScheme}.200`, 0.5)(theme),\n      },\n      _disabled: {\n        bg: 'transaprarent',\n      },\n      _pressed: {\n        bg: transparentize(`${colorScheme}.200`, 0.5)(theme),\n      },\n    },\n    _checkbox: {\n      borderWidth: 2,\n      borderRadius: 'sm',\n      borderColor: mode('muted.300', 'muted.600')(props),\n      bg: mode('muted.50', 'muted.700')(props), // matching background color\n      _checked: {\n        borderColor: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props),\n        bg: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props),\n      },\n      _disabled: {\n        opacity: 0.4,\n      },\n      _invalid: {\n        borderColor: mode('error.600', 'error.400')(props),\n      },\n    },\n    _icon: {\n      color: mode(`muted.50`, `muted.800`)(props), // matching background color\n    },\n  };\n};\n\nconst sizes = {\n  lg: { _icon: { size: 6 }, _text: { fontSize: 'xl' } },\n  md: { _icon: { size: 5 }, _text: { fontSize: 'lg' } },\n  sm: { _icon: { size: 4 }, _text: { fontSize: 'md' } },\n};\n\nconst defaultProps = {\n  defaultIsChecked: false,\n  size: 'sm',\n  colorScheme: 'primary',\n};\n\nexport default {\n  baseStyle,\n  sizes,\n  defaultProps,\n};\n"]}