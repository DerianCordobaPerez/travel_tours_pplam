{"version":3,"sources":["useKeyboardBottomInset.ts"],"names":["useKeyboardBottomInset","React","useState","bottom","setBottom","subscriptions","useRef","useEffect","onKeyboardChange","e","startCoordinates","endCoordinates","screenY","height","Platform","OS","current","Keyboard","addListener","forEach","subscription","remove"],"mappings":"mWAAA,oDACA,yCAEO,GAAMA,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,qBACdC,KAAK,CAACC,QAAN,CAAe,CAAf,CADc,iEACnCC,MADmC,qBAC3BC,SAD2B,qBAE1C,GAAMC,CAAAA,aAAa,CAAGJ,KAAK,CAACK,MAAN,CAAoB,EAApB,CAAtB,CAEAL,KAAK,CAACM,SAAN,CAAgB,UAAM,CACpB,QAASC,CAAAA,gBAAT,CAA0BC,CAA1B,CAA4C,CAC1C,GACEA,CAAC,CAACC,gBAAF,EACAD,CAAC,CAACE,cAAF,CAAiBC,OAAjB,CAA2BH,CAAC,CAACC,gBAAF,CAAmBE,OAFhD,CAIER,SAAS,CAACK,CAAC,CAACE,cAAF,CAAiBE,MAAjB,CAA0B,CAA3B,CAAT,CAJF,IAKKT,CAAAA,SAAS,CAAC,CAAD,CAAT,CACN,CAED,GAAIU,sBAASC,EAAT,GAAgB,KAApB,CAA2B,CACzBV,aAAa,CAACW,OAAd,CAAwB,CACtBC,sBAASC,WAAT,CAAqB,yBAArB,CAAgDV,gBAAhD,CADsB,CAAxB,CAGD,CAJD,IAIO,CACLH,aAAa,CAACW,OAAd,CAAwB,CACtBC,sBAASC,WAAT,CAAqB,iBAArB,CAAwCV,gBAAxC,CADsB,CAEtBS,sBAASC,WAAT,CAAqB,iBAArB,CAAwCV,gBAAxC,CAFsB,CAAxB,CAID,CACD,MAAO,WAAM,CACXH,aAAa,CAACW,OAAd,CAAsBG,OAAtB,CAA8B,SAACC,YAAD,CAAkB,CAC9CA,YAAY,CAACC,MAAb,GACD,CAFD,EAGD,CAJD,CAKD,CAzBD,CAyBG,CAACjB,SAAD,CAAYC,aAAZ,CAzBH,EA2BA,MAAOF,CAAAA,MAAP,CACD,CAhCM,C","sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform, KeyboardEvent } from 'react-native';\n\nexport const useKeyboardBottomInset = () => {\n  const [bottom, setBottom] = React.useState(0);\n  const subscriptions = React.useRef<any[]>([]);\n\n  React.useEffect(() => {\n    function onKeyboardChange(e: KeyboardEvent) {\n      if (\n        e.startCoordinates &&\n        e.endCoordinates.screenY < e.startCoordinates.screenY\n      )\n        setBottom(e.endCoordinates.height / 2);\n      else setBottom(0);\n    }\n\n    if (Platform.OS === 'ios') {\n      subscriptions.current = [\n        Keyboard.addListener('keyboardWillChangeFrame', onKeyboardChange),\n      ];\n    } else {\n      subscriptions.current = [\n        Keyboard.addListener('keyboardDidHide', onKeyboardChange),\n        Keyboard.addListener('keyboardDidShow', onKeyboardChange),\n      ];\n    }\n    return () => {\n      subscriptions.current.forEach((subscription) => {\n        subscription.remove();\n      });\n    };\n  }, [setBottom, subscriptions]);\n\n  return bottom;\n};\n"]}