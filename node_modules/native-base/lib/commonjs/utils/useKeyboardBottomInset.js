var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.useKeyboardBottomInset=void 0;var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var useKeyboardBottomInset=function useKeyboardBottomInset(){var _React$useState=React.useState(0),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),bottom=_React$useState2[0],setBottom=_React$useState2[1];var subscriptions=React.useRef([]);React.useEffect(function(){function onKeyboardChange(e){if(e.startCoordinates&&e.endCoordinates.screenY<e.startCoordinates.screenY)setBottom(e.endCoordinates.height/2);else setBottom(0);}if(_reactNative.Platform.OS==='ios'){subscriptions.current=[_reactNative.Keyboard.addListener('keyboardWillChangeFrame',onKeyboardChange)];}else{subscriptions.current=[_reactNative.Keyboard.addListener('keyboardDidHide',onKeyboardChange),_reactNative.Keyboard.addListener('keyboardDidShow',onKeyboardChange)];}return function(){subscriptions.current.forEach(function(subscription){subscription.remove();});};},[setBottom,subscriptions]);return bottom;};exports.useKeyboardBottomInset=useKeyboardBottomInset;
//# sourceMappingURL=useKeyboardBottomInset.js.map