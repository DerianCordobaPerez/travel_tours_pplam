{"version":3,"sources":["useMediaQuery.ts"],"names":["useMediaQuery","query","dims","height","width","iterateQuery","key","val","queryResults","Array","isArray","forEach","subQuery","Object","keys","values","push","calculateQuery","retval","undefined"],"mappings":"gLAAA,yCACA,4DAcO,QAASA,CAAAA,aAAT,CAAuBC,KAAvB,CAAgD,CACrD,GAAIC,CAAAA,IAAI,CAAG,sCAAX,CACA,GAAMC,CAAAA,MAAM,CAAGD,IAAH,cAAGA,IAAI,CAAEC,MAArB,CACA,GAAMC,CAAAA,KAAK,CAAGF,IAAH,cAAGA,IAAI,CAAEE,KAApB,CACA,MAAOC,CAAAA,YAAY,CAACJ,KAAD,CAAQE,MAAR,CAAgBC,KAAhB,CAAnB,CACD,CAED,QAASC,CAAAA,YAAT,CACEJ,KADF,CAEEE,MAFF,CAGEC,KAHF,CAIE,CACA,GAAIE,CAAAA,GAAJ,CACA,GAAIC,CAAAA,GAAJ,CACA,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CACA,GAAIC,KAAK,CAACC,OAAN,CAAcT,KAAd,CAAJ,CAA0B,CACxBA,KAAK,CAACU,OAAN,CAAc,SAACC,QAAD,CAAwB,CACpCN,GAAG,CAAGO,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsB,CAAtB,CAAN,CACAL,GAAG,CAAGM,MAAM,CAACE,MAAP,CAAcH,QAAd,EAAwB,CAAxB,CAAN,CACAJ,YAAY,CAACQ,IAAb,CAAkBC,cAAc,CAACX,GAAD,CAAMC,GAAN,CAAWJ,MAAX,CAAmBC,KAAnB,CAAhC,EACD,CAJD,EAKD,CAND,IAMO,CACLE,GAAG,CAAGO,MAAM,CAACC,IAAP,CAAYb,KAAZ,EAAmB,CAAnB,CAAN,CACAM,GAAG,CAAGM,MAAM,CAACE,MAAP,CAAcd,KAAd,EAAqB,CAArB,CAAN,CACAO,YAAY,CAACQ,IAAb,CAAkBC,cAAc,CAACX,GAAD,CAAMC,GAAN,CAAWJ,MAAX,CAAmBC,KAAnB,CAAhC,EACD,CACD,MAAOI,CAAAA,YAAP,CACD,CAED,QAASS,CAAAA,cAAT,CACEX,GADF,CAEEC,GAFF,CAGEJ,MAHF,CAIEC,KAJF,CAKE,CACA,GAAIc,CAAAA,MAAJ,CACA,GAAI,oBAAMd,KAAN,GAAgB,oBAAMD,MAAN,CAAhB,EAAiC,oBAAMI,GAAN,CAArC,CAAiD,CAC/C,OACD,CACD,OAAQD,GAAR,EACE,IAAK,UAAL,CACEY,MAAM,CAAG,CAAC,oBAAMX,GAAN,CAAD,CAAcH,KAAK,EAAIG,GAAvB,CAA6BY,SAAtC,CACA,MACF,IAAK,UAAL,CACED,MAAM,CAAG,CAAC,oBAAMX,GAAN,CAAD,CAAcH,KAAK,EAAIG,GAAvB,CAA6BY,SAAtC,CACA,MACF,IAAK,WAAL,CACED,MAAM,CAAG,CAAC,oBAAMX,GAAN,CAAD,CAAcJ,MAAM,EAAII,GAAxB,CAA8BY,SAAvC,CACA,MACF,IAAK,WAAL,CACED,MAAM,CAAG,CAAC,oBAAMX,GAAN,CAAD,CAAcJ,MAAM,EAAII,GAAxB,CAA8BY,SAAvC,CACA,MACF,IAAK,aAAL,CACE,GAAI,CAAC,oBAAMZ,GAAN,CAAL,CAAiB,CACf,GAAIH,KAAK,CAAGD,MAAZ,CAAoB,CAClBe,MAAM,CAAGX,GAAG,GAAK,WAAjB,CACD,CAFD,IAEO,CACLW,MAAM,CAAGX,GAAG,GAAK,UAAjB,CACD,CACF,CACD,MACF,QACE,MAvBJ,CAyBA,MAAOW,CAAAA,MAAP,CACD","sourcesContent":["import { useWindowDimensions } from 'react-native';\nimport isNil from 'lodash.isnil';\n\ntype QueryKeys =\n  | 'maxWidth'\n  | 'minWidth'\n  | 'maxHeight'\n  | 'minHeight'\n  | 'orientation';\n\ntype SubQuery = {\n  [queryKey in QueryKeys]?: number | string;\n};\ntype Query = Array<SubQuery>;\n\nexport function useMediaQuery(query: SubQuery | Query) {\n  let dims = useWindowDimensions();\n  const height = dims?.height;\n  const width = dims?.width;\n  return iterateQuery(query, height, width);\n}\n\nfunction iterateQuery(\n  query: SubQuery | Query,\n  height?: number,\n  width?: number\n) {\n  let key;\n  let val;\n  let queryResults = [];\n  if (Array.isArray(query)) {\n    query.forEach((subQuery: SubQuery) => {\n      key = Object.keys(subQuery)[0];\n      val = Object.values(subQuery)[0];\n      queryResults.push(calculateQuery(key, val, height, width));\n    });\n  } else {\n    key = Object.keys(query)[0];\n    val = Object.values(query)[0];\n    queryResults.push(calculateQuery(key, val, height, width));\n  }\n  return queryResults;\n}\n\nfunction calculateQuery(\n  key: string,\n  val?: number | string,\n  height?: number,\n  width?: number\n) {\n  let retval;\n  if (isNil(width) || isNil(height) || isNil(val)) {\n    return;\n  }\n  switch (key) {\n    case 'maxWidth':\n      retval = !isNil(val) ? width <= val : undefined;\n      break;\n    case 'minWidth':\n      retval = !isNil(val) ? width >= val : undefined;\n      break;\n    case 'maxHeight':\n      retval = !isNil(val) ? height <= val : undefined;\n      break;\n    case 'minHeight':\n      retval = !isNil(val) ? height >= val : undefined;\n      break;\n    case 'orientation':\n      if (!isNil(val)) {\n        if (width > height) {\n          retval = val === 'landscape';\n        } else {\n          retval = val === 'portrait';\n        }\n      }\n      break;\n    default:\n      break;\n  }\n  return retval;\n}\n"]}