{"version":3,"sources":["usePlatformProps.ts"],"names":["usePlatformProps","props","_web","_ios","_android","remainingProps","platformProps","Platform","OS"],"mappings":"4RAAA,4DACA,yCAEO,GAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAgB,IACtCC,CAAAA,IADsC,CACMD,KADN,CACtCC,IADsC,CAChCC,IADgC,CACMF,KADN,CAChCE,IADgC,CAC1BC,QAD0B,CACMH,KADN,CAC1BG,QAD0B,CACbC,cADa,uCACMJ,KADN,6BAE9C,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,OAAQC,sBAASC,EAAjB,EACE,IAAK,KAAL,CACE,MAAON,CAAAA,IAAP,CACF,IAAK,KAAL,CACE,MAAOC,CAAAA,IAAP,CACF,IAAK,SAAL,CACE,MAAOC,CAAAA,QAAP,CACF,QACE,MAAO,EAAP,CARJ,CAUD,CAXD,CAYA,MAAO,oBAAMC,cAAN,CAAsBC,aAAa,EAAnC,CAAP,CACD,CAfM,C","sourcesContent":["import merge from 'lodash.merge';\nimport { Platform } from 'react-native';\n\nexport const usePlatformProps = (props: any) => {\n  const { _web, _ios, _android, ...remainingProps } = props;\n  const platformProps = () => {\n    switch (Platform.OS) {\n      case 'web':\n        return _web;\n      case 'ios':\n        return _ios;\n      case 'android':\n        return _android;\n      default:\n        return {};\n    }\n  };\n  return merge(remainingProps, platformProps());\n};\n"]}