{"version":3,"sources":["index.ts"],"names":["useSafeArea","props","insets","sizes","safeAreaProps","paddingProps","sansPaddingProps","Object","keys","length","calcualtedPaddingProps"],"mappings":"4PAAA,0EACA,8BACA,uCAEO,QAASA,CAAAA,WAAT,CAAqBC,KAArB,CAAiC,CACtC,GAAMC,CAAAA,MAAM,CAAG,mDAAf,CACA,GAAMC,CAAAA,KAAK,CAAG,yBAAWA,KAAzB,CAFsC,oBAGoB,0BACxDF,KADwD,CAHpB,CAG9BG,aAH8B,iBAG9BA,aAH8B,CAGfC,YAHe,iBAGfA,YAHe,CAGDC,gBAHC,iBAGDA,gBAHC,CAMtC,GAAI,CAACC,MAAM,CAACC,IAAP,CAAYJ,aAAZ,EAA2BK,MAAhC,CAAwC,CACtC,MAAOR,CAAAA,KAAP,CACD,CACD,GAAIS,CAAAA,sBAAsB,CAAG,iCAC3BN,aAD2B,CAE3BC,YAF2B,CAG3BH,MAH2B,CAI3BC,KAJ2B,CAA7B,CAMA,+BAAYG,gBAAZ,CAAiCD,YAAjC,CAAkDK,sBAAlD,EACD","sourcesContent":["import { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { getSortedProps, calculatePaddingProps } from './utils';\nimport { useTheme } from './../useTheme';\n\nexport function useSafeArea(props: any) {\n  const insets = useSafeAreaInsets();\n  const sizes = useTheme().sizes;\n  const { safeAreaProps, paddingProps, sansPaddingProps } = getSortedProps(\n    props\n  );\n  if (!Object.keys(safeAreaProps).length) {\n    return props;\n  }\n  let calcualtedPaddingProps = calculatePaddingProps(\n    safeAreaProps,\n    paddingProps,\n    insets,\n    sizes\n  );\n  return { ...sansPaddingProps, ...paddingProps, ...calcualtedPaddingProps };\n}\n"]}