{"version":3,"sources":["useBreakpointValue.test.tsx"],"names":["describe","wrapper","children","frame","x","y","width","height","insets","top","left","right","bottom","test","result","expect","current","toEqual","undefined","base","sm","md"],"mappings":"mFAAA,oDACA,kEACA,iEACA,wD,mIAEAA,QAAQ,CAAC,oBAAD,CAAuB,UAAM,CACnC,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,UAAGC,CAAAA,QAAH,MAAGA,QAAH,OACd,8BAAC,sCAAD,EACE,oBAAoB,CAAE,CACpBC,KAAK,CAAE,CAAEC,CAAC,CAAE,CAAL,CAAQC,CAAC,CAAE,CAAX,CAAcC,KAAK,CAAE,CAArB,CAAwBC,MAAM,CAAE,CAAhC,CADa,CAEpBC,MAAM,CAAE,CAAEC,GAAG,CAAE,CAAP,CAAUC,IAAI,CAAE,CAAhB,CAAmBC,KAAK,CAAE,CAA1B,CAA6BC,MAAM,CAAE,CAArC,CAFY,CADxB,4EAMGV,QANH,CADc,EAAhB,CAUAW,IAAI,CAAC,aAAD,CAAgB,UAAM,iBACL,2BAAW,iBAAM,2CAAmB,EAAnB,CAAN,EAAX,CAAyC,CAC1DZ,OAAO,CAAPA,OAD0D,CAAzC,CADK,CAChBa,MADgB,aAChBA,MADgB,CAIxBC,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CAA+B,EAA/B,EACD,CALG,CAAJ,CAMAJ,IAAI,CAAC,cAAD,CAAiB,UAAM,kBACN,2BAAW,iBAAM,2CAAmB,EAAnB,CAAN,EAAX,CAAyC,CAC1DZ,OAAO,CAAPA,OAD0D,CAAzC,CADM,CACjBa,MADiB,cACjBA,MADiB,CAIzBC,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CAA+BC,SAA/B,EACD,CALG,CAAJ,CAMAL,IAAI,CAAC,aAAD,CAAgB,UAAM,kBACL,2BAAW,iBAAM,2CAAmB,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAnB,CAAN,EAAX,CAAgD,CACjEZ,OAAO,CAAPA,OADiE,CAAhD,CADK,CAChBa,MADgB,cAChBA,MADgB,CAIxBC,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CAA+B,CAA/B,EACD,CALG,CAAJ,CAMAJ,IAAI,CAAC,cAAD,CAAiB,UAAM,kBACN,2BACjB,iBAAM,2CAAmB,CAAEM,IAAI,CAAE,CAAR,CAAWC,EAAE,CAAE,CAAf,CAAkBC,EAAE,CAAE,CAAtB,CAAnB,CAAN,EADiB,CAEjB,CACEpB,OAAO,CAAPA,OADF,CAFiB,CADM,CACjBa,MADiB,cACjBA,MADiB,CAOzBC,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CAA+B,CAA/B,EACD,CARG,CAAJ,CASD,CAtCO,CAAR","sourcesContent":["import React from 'react';\nimport { useBreakpointValue } from '../../hooks/useBreakpointValue';\nimport { NativeBaseProvider } from '../../core/NativeBaseProvider';\nimport { renderHook } from '@testing-library/react-hooks';\n\ndescribe('useBreakpointValue', () => {\n  const wrapper = ({ children }: any) => (\n    <NativeBaseProvider\n      initialWindowMetrics={{\n        frame: { x: 0, y: 0, width: 0, height: 0 },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n      }}\n    >\n      {children}\n    </NativeBaseProvider>\n  );\n  test('Empty array', () => {\n    const { result } = renderHook(() => useBreakpointValue([]), {\n      wrapper,\n    });\n    expect(result.current).toEqual([]);\n  });\n  test('Empty object', () => {\n    const { result } = renderHook(() => useBreakpointValue({}), {\n      wrapper,\n    });\n    expect(result.current).toEqual(undefined);\n  });\n  test('Basic array', () => {\n    const { result } = renderHook(() => useBreakpointValue([1, 2, 3]), {\n      wrapper,\n    });\n    expect(result.current).toEqual(2);\n  });\n  test('Basic Object', () => {\n    const { result } = renderHook(\n      () => useBreakpointValue({ base: 0, sm: 1, md: 2 }),\n      {\n        wrapper,\n      }\n    );\n    expect(result.current).toEqual(1);\n  });\n});\n"]}