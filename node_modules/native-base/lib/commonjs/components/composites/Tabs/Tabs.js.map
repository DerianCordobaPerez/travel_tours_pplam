{"version":3,"sources":["Tabs.tsx"],"names":["getTabsAndBars","children","bars","views","items","React","Children","toArray","tabBarProps","props","ref","undefined","tabViewsProps","forEach","item","type","displayName","concat","convertToCollectionItems","map","bar","index","textValue","accessibilityLabel","__DEV__","console","warn","Tabs","onChange","activeTabStyle","inactiveTabStyle","activeIconProps","inactiveIconProps","tabBarStyle","isFitted","align","newProps","collectionChildren","mappedProps","defaultSelectedKey","defaultIndex","toString","selectedKey","onSelectionChange","e","parseInt","keyboardActivation","state","setAlign","tablistRef","useRef","tabListProps","tabPanelProps","selectedItem","memo","forwardRef"],"mappings":"mWAAA,oDACA,iEAEA,qCACA,kCACA,uDACA,yCACA,4DACA,wDACA,8CACA,qC,+HACA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,QAAD,CAAmB,CACxC,GAAIC,CAAAA,IAAS,CAAG,EAAhB,CACA,GAAIC,CAAAA,KAAU,CAAG,EAAjB,CACA,GAAIC,CAAAA,KAAK,CAAGC,eAAMC,QAAN,CAAeC,OAAf,CAAuBN,QAAvB,CAAZ,CACA,GAAIO,CAAAA,WAAgB,CAAG,CAAEC,KAAK,CAAE,EAAT,CAAaC,GAAG,CAAEC,SAAlB,CAAvB,CACA,GAAIC,CAAAA,aAAa,CAAG,CAAEH,KAAK,CAAE,EAAT,CAAaC,GAAG,CAAEC,SAAlB,CAApB,CACAP,KAAK,CAACS,OAAN,CAAc,SAACC,IAAD,CAAe,CAC3B,GAAIA,IAAI,CAACC,IAAT,CAAe,CACb,GAAID,IAAI,CAACC,IAAL,CAAUC,WAAV,GAA0B,QAA9B,CAAwC,CACtCd,IAAI,CAAGA,IAAI,CAACe,MAAL,CAAYH,IAAI,CAACL,KAAL,CAAWR,QAAvB,CAAP,CACAO,WAAW,CAAG,CAAEC,KAAK,CAAEK,IAAI,CAACL,KAAd,CAAqBC,GAAG,CAAEI,IAAI,CAACJ,GAA/B,CAAd,CACD,CAHD,IAGO,IAAII,IAAI,CAACC,IAAL,CAAUC,WAAV,GAA0B,UAA9B,CAA0C,CAC/Cb,KAAK,CAAGA,KAAK,CAACc,MAAN,CAAaH,IAAI,CAACL,KAAL,CAAWR,QAAxB,CAAR,CACAW,aAAa,CAAG,CAAEH,KAAK,CAAEK,IAAI,CAACL,KAAd,CAAqBC,GAAG,CAAEI,IAAI,CAACJ,GAA/B,CAAhB,CACD,CACF,CACF,CAVD,EAWA,MAAO,CAAEP,KAAK,CAALA,KAAF,CAASD,IAAI,CAAJA,IAAT,CAAeU,aAAa,CAAbA,aAAf,CAA8BJ,WAAW,CAAXA,WAA9B,CAAP,CACD,CAlBD,CAmBA,GAAMU,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACjB,QAAD,CAAmB,qBAC1BD,cAAc,CAACC,QAAD,CADY,CAC1CE,KAD0C,iBAC1CA,KAD0C,CACnCD,IADmC,iBACnCA,IADmC,CAElD,MAAOA,CAAAA,IAAI,CAACiB,GAAL,CAAS,SAACC,GAAD,CAAWC,KAAX,CAA6B,CAC3C,GAAIC,CAAAA,SAAJ,CACA,GAAIF,GAAG,CAACX,KAAJ,CAAUc,kBAAd,CAAkC,CAChCD,SAAS,CAAGF,GAAG,CAACX,KAAJ,CAAUc,kBAAtB,CACD,CAFD,IAEO,IAAI,MAAOH,CAAAA,GAAG,CAACX,KAAJ,CAAUR,QAAjB,GAA8B,QAAlC,CAA4C,CACjDqB,SAAS,CAAGF,GAAG,CAACX,KAAJ,CAAUR,QAAtB,CACD,CAFM,IAEA,IAAIuB,OAAJ,CAAa,CAClBC,OAAO,CAACC,IAAR,CAAa,wDAAb,EACD,CACD,MACE,8BAAC,iBAAD,EAAM,GAAG,CAAEL,KAAX,CAAkB,KAAK,CAAED,GAAzB,CAA8B,SAAS,CAAEE,SAAzC,6EACGnB,KAAK,CAACkB,KAAD,CADR,CADF,CAKD,CAdM,CAAP,CAeD,CAjBD,CAkBA,GAAMM,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAqCjB,GAArC,CAAkD,IAA/CT,CAAAA,QAA+C,MAA/CA,QAA+C,CAAlCQ,KAAkC,6EAWzD,yBAAc,MAAd,CAAsBA,KAAtB,CAXyD,CAE3DmB,QAF2D,gBAE3DA,QAF2D,CAG3DC,cAH2D,gBAG3DA,cAH2D,CAI3DC,gBAJ2D,gBAI3DA,gBAJ2D,CAK3DC,eAL2D,gBAK3DA,eAL2D,CAM3DC,iBAN2D,gBAM3DA,iBAN2D,CAO3DC,WAP2D,gBAO3DA,WAP2D,CAQ3DC,QAR2D,gBAQ3DA,QAR2D,CAS3DC,KAT2D,gBAS3DA,KAT2D,CAUxDC,QAVwD,+KAa7D,GAAMC,CAAAA,kBAAkB,CAAGnB,wBAAwB,CAACjB,QAAD,CAAnD,CAb6D,qBActBD,cAAc,CAACC,QAAD,CAdQ,CAcrDO,WAdqD,kBAcrDA,WAdqD,CAcxCI,aAdwC,kBAcxCA,aAdwC,CAe7D,GAAM0B,CAAAA,WAAW,CAAG,CAClBrC,QAAQ,CAAEoC,kBADQ,CAElBE,kBAAkB,CAChB9B,KAAK,CAAC+B,YAAN,GAAuB7B,SAAvB,CACIF,KAAK,CAAC+B,YAAN,CAAmBC,QAAnB,EADJ,CAEI9B,SALY,CAMlB+B,WAAW,CAAEjC,KAAK,CAACY,KAAN,GAAgBV,SAAhB,CAA4BF,KAAK,CAACY,KAAN,CAAYoB,QAAZ,EAA5B,CAAqD9B,SANhD,CAOlBgC,iBAAiB,CAAE,2BAACC,CAAD,QAAYhB,CAAAA,QAAQ,EAAIA,QAAQ,CAACiB,QAAQ,CAACD,CAAD,CAAT,CAAhC,EAPD,CAQlBE,kBAAkB,CAAErC,KAAK,CAACqC,kBARR,CAApB,CAWA,GAAIC,CAAAA,KAAK,CAAG,uBAAaT,WAAb,CAAZ,CACA,GAAMU,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,OAAQb,KAAR,EACE,IAAK,OAAL,CACE,MAAO,YAAP,CACF,IAAK,KAAL,CACE,MAAO,UAAP,CACF,IAAK,QAAL,CACE,MAAO,QAAP,CACF,QACE,MAAO,YAAP,CARJ,CAUD,CAXD,CAYA,GAAIc,CAAAA,UAAU,CAAG5C,eAAM6C,MAAN,EAAjB,CAvC6D,aAwCvB,mBAAQZ,WAAR,CAAqBS,KAArB,CAA4BE,UAA5B,CAxCuB,CAwCvDE,YAxCuD,UAwCvDA,YAxCuD,CAwCzCC,aAxCyC,UAwCzCA,aAxCyC,CAyC7D,MACE,8BAAC,oBAAD,CAAa,QAAb,EACE,KAAK,CAAE,CACLvB,cAAc,CAAdA,cADK,CAELC,gBAAgB,CAAhBA,gBAFK,CAGLC,eAAe,CAAfA,eAHK,CAILC,iBAAiB,CAAjBA,iBAJK,CAKLC,WAAW,CAAXA,WALK,CAMLC,QAAQ,CAARA,QANK,CAOLC,KAAK,CAAEa,QAAQ,EAPV,CAQLD,KAAK,CAALA,KARK,CADT,6EAYE,6BAAC,YAAD,wBAAK,KAAK,CAAC,MAAX,EAAsBX,QAAtB,EAAgC,GAAG,CAAE1B,GAArC,+EACE,6BAAC,eAAD,wBACE,YAAY,CAAEyC,YADhB,EAEM3C,WAAW,CAACC,KAFlB,EAGE,UAAU,CAAE,qBAAU,CAACwC,UAAD,CAAazC,WAAW,CAACE,GAAzB,CAAV,CAHd,+EADF,CAME,6BAAC,iBAAD,0BACM0C,aADN,CAEMxC,aAAa,CAACH,KAFpB,EAGE,GAAG,CAAEG,aAAa,CAACF,GAHrB,+EAKGqC,KAAK,CAACM,YAAN,EAAsBN,KAAK,CAACM,YAAN,CAAmB5C,KAAnB,CAAyBR,QALlD,CANF,CAZF,CADF,CA6BD,CAtED,C,aAuEeI,eAAMiD,IAAN,CAAWjD,eAAMkD,UAAN,CAAiB5B,IAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport type { ITabsProps } from './types';\nimport { useThemeProps } from '../../../hooks';\nimport { TabsContext } from './Context';\nimport { Item } from '@react-stately/collections';\nimport { useTabsState } from '@react-stately/tabs';\nimport TabViews from './TabViews';\nimport TabBar from './TabBar';\nimport { useTabs } from '@react-native-aria/tabs';\nimport { mergeRefs } from '../../../utils';\nconst getTabsAndBars = (children: any) => {\n  let bars: any = [];\n  let views: any = [];\n  let items = React.Children.toArray(children);\n  let tabBarProps: any = { props: {}, ref: undefined };\n  let tabViewsProps = { props: {}, ref: undefined };\n  items.forEach((item: any) => {\n    if (item.type) {\n      if (item.type.displayName === 'TabBar') {\n        bars = bars.concat(item.props.children);\n        tabBarProps = { props: item.props, ref: item.ref };\n      } else if (item.type.displayName === 'TabViews') {\n        views = views.concat(item.props.children);\n        tabViewsProps = { props: item.props, ref: item.ref };\n      }\n    }\n  });\n  return { views, bars, tabViewsProps, tabBarProps };\n};\nconst convertToCollectionItems = (children: any) => {\n  const { views, bars } = getTabsAndBars(children);\n  return bars.map((bar: any, index: number) => {\n    let textValue;\n    if (bar.props.accessibilityLabel) {\n      textValue = bar.props.accessibilityLabel;\n    } else if (typeof bar.props.children === 'string') {\n      textValue = bar.props.children;\n    } else if (__DEV__) {\n      console.warn('Please pass accessibilityLabel into Tabs.Tab component');\n    }\n    return (\n      <Item key={index} title={bar} textValue={textValue}>\n        {views[index]}\n      </Item>\n    );\n  });\n};\nconst Tabs = ({ children, ...props }: ITabsProps, ref: any) => {\n  const {\n    onChange,\n    activeTabStyle,\n    inactiveTabStyle,\n    activeIconProps,\n    inactiveIconProps,\n    tabBarStyle,\n    isFitted,\n    align,\n    ...newProps\n  } = useThemeProps('Tabs', props);\n  // useTabsState needs collection children.\n  const collectionChildren = convertToCollectionItems(children);\n  const { tabBarProps, tabViewsProps } = getTabsAndBars(children);\n  const mappedProps = {\n    children: collectionChildren,\n    defaultSelectedKey:\n      props.defaultIndex !== undefined\n        ? props.defaultIndex.toString()\n        : undefined,\n    selectedKey: props.index !== undefined ? props.index.toString() : undefined,\n    onSelectionChange: (e: any) => onChange && onChange(parseInt(e)),\n    keyboardActivation: props.keyboardActivation,\n  };\n  // useTabsState needs collection children.\n  let state = useTabsState(mappedProps);\n  const setAlign = () => {\n    switch (align) {\n      case 'start':\n        return 'flex-start';\n      case 'end':\n        return 'flex-end';\n      case 'center':\n        return 'center';\n      default:\n        return 'flex-start';\n    }\n  };\n  let tablistRef = React.useRef<any>();\n  let { tabListProps, tabPanelProps } = useTabs(mappedProps, state, tablistRef);\n  return (\n    <TabsContext.Provider\n      value={{\n        activeTabStyle,\n        inactiveTabStyle,\n        activeIconProps,\n        inactiveIconProps,\n        tabBarStyle,\n        isFitted,\n        align: setAlign(),\n        state,\n      }}\n    >\n      <Box width=\"100%\" {...newProps} ref={ref}>\n        <TabBar\n          tabListProps={tabListProps}\n          {...tabBarProps.props}\n          tablistRef={mergeRefs([tablistRef, tabBarProps.ref])}\n        />\n        <TabViews\n          {...tabPanelProps}\n          {...tabViewsProps.props}\n          ref={tabViewsProps.ref}\n        >\n          {state.selectedItem && state.selectedItem.props.children}\n        </TabViews>\n      </Box>\n    </TabsContext.Provider>\n  );\n};\nexport default React.memo(React.forwardRef(Tabs));\n"]}