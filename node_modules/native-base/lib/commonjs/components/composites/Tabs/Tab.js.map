{"version":3,"sources":["Tab.tsx"],"names":["TabContext","Tab","ref","children","isDisabled","style","_active","_disabled","item","props","newProps","React","useContext","TabsContext","inactiveTabStyle","activeTabStyle","state","isFitted","tabRef","useRef","_ref","isHovered","isSelected","selectedKey","key","tabProps","useEffect","disabledKeys","add","delete","tabStyle","_hover","remainingTabStyle","mergedProps","themeTools","extractInObject","marginalProps","remainingProps","undefined","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { createContext } from 'react';\nimport { Pressable } from '../../primitives/Pressable';\nimport Box from '../../primitives/Box';\nimport { TabsContext } from './Context';\nimport type { ITabProps, ITabsContextProps } from './types';\nimport { omitUndefined } from '../../../theme/tools/utils';\nimport { useTab } from '@react-native-aria/tabs';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\nimport merge from 'lodash.merge';\nimport { themeTools } from '../../../theme';\n\nexport const TabContext = createContext({});\n\nconst Tab = (\n  {\n    children,\n    isDisabled,\n    style,\n    _active,\n    _disabled,\n    item,\n    ...props\n  }: ITabProps,\n  ref?: any\n) => {\n  const newProps = omitUndefined(props);\n  const {\n    inactiveTabStyle,\n    activeTabStyle,\n    state,\n    isFitted,\n  }: ITabsContextProps = React.useContext(TabsContext);\n  let tabRef = React.useRef<any>(null);\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n  let isSelected = state.selectedKey === item.key;\n\n  let { tabProps } = useTab({ item, isDisabled }, state, tabRef);\n\n  React.useEffect(() => {\n    if (isDisabled) {\n      state.disabledKeys.add(item.key);\n    } else {\n      state.disabledKeys.delete(item.key);\n    }\n  }, [isDisabled, item.key, state.disabledKeys]);\n\n  const tabStyle = isSelected ? activeTabStyle : inactiveTabStyle;\n  const { _hover, ...remainingTabStyle } = tabStyle;\n  const mergedProps = merge(remainingTabStyle, newProps);\n  const [\n    marginalProps,\n    remainingProps,\n  ] = themeTools.extractInObject(mergedProps, [\n    'margin',\n    'm',\n    'marginTop',\n    'mt',\n    'marginRight',\n    'mr',\n    'marginBottom',\n    'mb',\n    'marginLeft',\n    'ml',\n    'marginX',\n    'mx',\n    'marginY',\n    'my',\n  ]);\n  return (\n    <TabContext.Provider\n      value={{\n        isSelected,\n      }}\n    >\n      <Pressable\n        disabled={isDisabled}\n        ref={mergeRefs([tabRef, _ref, ref])}\n        flex={isFitted ? 1 : undefined}\n        {...tabProps}\n        {...marginalProps}\n      >\n        <Box\n          {...remainingProps}\n          {...(isHovered && _hover)}\n          style={[style, isSelected && _active, isDisabled && _disabled]}\n        >\n          {children}\n        </Box>\n      </Pressable>\n    </TabContext.Provider>\n  );\n};\n\nexport default React.memo(React.forwardRef(Tab));\n"]}