{"version":3,"sources":["Actionsheet.tsx"],"names":["Actionsheet","ref","children","hideDragIndicator","props","isOpen","disableOverlay","onClose","newProps"],"mappings":"wbAAA,qDACA,6CAEA,qCACA,wD,6IAEA,GAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAElBC,GAFkB,CAGf,IAFDC,CAAAA,QAEC,MAFDA,QAEC,4BAFSC,iBAET,CAFSA,iBAET,gCAF6B,KAE7B,uBAFuCC,KAEvC,sGACsD,8BACvD,aADuD,CAEvDA,KAFuD,CADtD,CACKC,MADL,qBACKA,MADL,CACaC,cADb,qBACaA,cADb,CAC6BC,OAD7B,qBAC6BA,OAD7B,CACyCC,QADzC,kGAMH,MACE,8BAAC,YAAD,wBACE,MAAM,CAAEH,MADV,CAEE,OAAO,CAAEE,OAFX,CAGE,cAAc,CAAC,UAHjB,CAKE,eAAe,CAAC,OALlB,EAMMC,QANN,EAOE,cAAc,CAAEF,cAAc,CAAG,KAAH,CAAW,IAP3C,CAQE,mBAAmB,CAAEA,cAAc,CAAG,KAAH,CAAW,IARhD,CASE,GAAG,CAAEL,GATP,8EAWE,6BAAC,sCAAD,CAAoB,QAApB,EAA6B,KAAK,CAAE,CAAEE,iBAAiB,CAAjBA,iBAAF,CAApC,6EACGD,QADH,CAXF,CADF,CAiBD,CA1BD,C,aA4Be,gBAAK,sBAAWF,WAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Modal } from '../../composites/Modal';\nimport type { IActionsheetProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { ActionSheetContext } from './ActionSheetContext';\n\nconst Actionsheet = (\n  { children, hideDragIndicator = false, ...props }: IActionsheetProps,\n  ref: any\n) => {\n  const { isOpen, disableOverlay, onClose, ...newProps } = usePropsResolution(\n    'Actionsheet',\n    props\n  );\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      justifyContent=\"flex-end\"\n      //@ts-ignore - internal use only\n      animationPreset=\"slide\"\n      {...newProps}\n      overlayVisible={disableOverlay ? false : true}\n      closeOnOverlayClick={disableOverlay ? false : true}\n      ref={ref}\n    >\n      <ActionSheetContext.Provider value={{ hideDragIndicator }}>\n        {children}\n      </ActionSheetContext.Provider>\n    </Modal>\n  );\n};\n\nexport default memo(forwardRef(Actionsheet));\n"]}