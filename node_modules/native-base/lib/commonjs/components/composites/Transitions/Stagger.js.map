{"version":3,"sources":["Stagger.tsx"],"names":["defaultStaggerConfig","offset","reverse","Stagger","children","restProps","React","Children","map","child","index","clonedAnimationConfig","animate","exit","transition","delay","stagger","count","key"],"mappings":"mWAAA,gEACA,oDACA,gF,yIAgCA,GAAMA,CAAAA,oBAAoC,CAAG,CAAEC,MAAM,CAAE,CAAV,CAAaC,OAAO,CAAE,KAAtB,CAA7C,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAA+C,IAA5CC,CAAAA,QAA4C,MAA5CA,QAA4C,CAA/BC,SAA+B,0DAC7D,MAAOC,gBAAMC,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,CAA6B,SAACK,KAAD,CAAQC,KAAR,CAAkB,CACpD,GAAMC,CAAAA,qBAAqB,CAAG,oBAAUN,SAAV,CAA9B,CADoD,GAE5CO,CAAAA,OAF4C,CAE1BD,qBAF0B,CAE5CC,OAF4C,CAEnCC,IAFmC,CAE1BF,qBAF0B,CAEnCE,IAFmC,CAIpD,GAAID,OAAJ,CAAa,iDACX,GAAI,CAACA,OAAO,CAACE,UAAb,CAAyB,CACvBF,OAAO,CAACE,UAAR,CAAqB,EAArB,CACD,CACDF,OAAO,CAACE,UAAR,CAAmBC,KAAnB,wBAA2BH,OAAO,CAACE,UAAR,CAAmBC,KAA9C,8BAAuD,CAAvD,CACA,GAAMC,CAAAA,OAAO,wBAAGJ,OAAO,CAACE,UAAR,CAAmBE,OAAtB,8BAAiChB,oBAA9C,CACA,GAAMC,CAAAA,MAAM,CAAGe,OAAO,CAACd,OAAR,CACX,CAACI,eAAMC,QAAN,CAAeU,KAAf,CAAqBb,QAArB,EAAiC,CAAjC,CAAqCM,KAAtC,EAA+CM,OAAO,CAACf,MAD5C,CAEXS,KAAK,CAAGM,OAAO,CAACf,MAFpB,CAGAW,OAAO,CAACE,UAAR,CAAmBC,KAAnB,CAA2BH,OAAO,CAACE,UAAR,CAAmBC,KAAnB,CAA2Bd,MAAtD,CACD,CAED,GAAIY,IAAJ,CAAU,iDACR,GAAI,CAACA,IAAI,CAACC,UAAV,CAAsB,CACpBD,IAAI,CAACC,UAAL,CAAkB,EAAlB,CACD,CACDD,IAAI,CAACC,UAAL,CAAgBC,KAAhB,wBAAwBF,IAAI,CAACC,UAAL,CAAgBC,KAAxC,8BAAiD,CAAjD,CACA,GAAMC,CAAAA,QAAO,wBAAGH,IAAI,CAACC,UAAL,CAAgBE,OAAnB,8BAA8BhB,oBAA3C,CACA,GAAMC,CAAAA,OAAM,CAAGe,QAAO,CAACd,OAAR,CACX,CAACI,eAAMC,QAAN,CAAeU,KAAf,CAAqBb,QAArB,EAAiC,CAAjC,CAAqCM,KAAtC,EAA+CM,QAAO,CAACf,MAD5C,CAEXS,KAAK,CAAGM,QAAO,CAACf,MAFpB,CAGAY,IAAI,CAACC,UAAL,CAAgBC,KAAhB,CAAwBF,IAAI,CAACC,UAAL,CAAgBC,KAAhB,CAAwBd,OAAhD,CACD,CAED,MACE,8BAAC,2BAAD,wBAAoB,GAAG,CAAEQ,KAAK,CAACS,GAA/B,EAAwCP,qBAAxC,+EACGF,KADH,CADF,CAKD,CAjCM,CAAP,CAkCD,CAnCD,C,aAqCeN,O","sourcesContent":["import cloneDeep from 'lodash.clonedeep';\nimport React from 'react';\nimport PresenceTransition from './PresenceTransition';\nimport type { ISupportedTransitions, ITransitionConfig } from './types';\n\ninterface IStaggerConfig {\n  offset: number;\n  reverse?: boolean;\n}\n\nexport interface IStaggerStyleProps extends ISupportedTransitions {\n  transition?: ITransitionConfig & { stagger?: IStaggerConfig };\n}\n\ninterface IStaggerProps {\n  children: any;\n  /**\n   * Initial styles before the transition starts\n   */\n  initial?: ISupportedTransitions;\n  /**\n   * The styles to which each child should animate to while entering.\n   */\n  animate?: IStaggerStyleProps;\n  /**\n   * The styles to which each child should animate to while exiting.\n   */\n  exit?: IStaggerStyleProps;\n  /**\n   * Determines whether to start the animation\n   */\n  visible?: boolean;\n}\n\nconst defaultStaggerConfig: IStaggerConfig = { offset: 0, reverse: false };\n\nconst Stagger = ({ children, ...restProps }: IStaggerProps) => {\n  return React.Children.map(children, (child, index) => {\n    const clonedAnimationConfig = cloneDeep(restProps);\n    const { animate, exit } = clonedAnimationConfig;\n\n    if (animate) {\n      if (!animate.transition) {\n        animate.transition = {};\n      }\n      animate.transition.delay = animate.transition.delay ?? 0;\n      const stagger = animate.transition.stagger ?? defaultStaggerConfig;\n      const offset = stagger.reverse\n        ? (React.Children.count(children) - 1 - index) * stagger.offset\n        : index * stagger.offset;\n      animate.transition.delay = animate.transition.delay + offset;\n    }\n\n    if (exit) {\n      if (!exit.transition) {\n        exit.transition = {};\n      }\n      exit.transition.delay = exit.transition.delay ?? 0;\n      const stagger = exit.transition.stagger ?? defaultStaggerConfig;\n      const offset = stagger.reverse\n        ? (React.Children.count(children) - 1 - index) * stagger.offset\n        : index * stagger.offset;\n      exit.transition.delay = exit.transition.delay + offset;\n    }\n\n    return (\n      <PresenceTransition key={child.key} {...clonedAnimationConfig}>\n        {child}\n      </PresenceTransition>\n    );\n  });\n};\n\nexport default Stagger;\n"]}