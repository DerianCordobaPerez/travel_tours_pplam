{"version":3,"sources":["Transition.tsx"],"names":["transformStylesMap","translateY","translateX","scale","scaleX","scaleY","rotate","defaultStyles","opacity","getAnimatedStyles","animateValue","initial","to","styles","transform","key","push","interpolate","inputRange","outputRange","defaultTransitionConfig","type","useNativeDriver","duration","delay","Transition","ref","children","onTransitionComplete","visible","animate","exit","style","as","rest","React","useRef","Animated","Value","current","Component","useMemo","createAnimatedComponent","View","useState","animationState","setAnimationState","prevVisible","useEffect","startEntryTransition","entryTransition","transition","sequence","toValue","start","startExitTransition","exitTransition"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { Animated } from 'react-native';\nimport type {\n  ISupportedTransitions,\n  ITransitionConfig,\n  ITransitionProps,\n} from './types';\n\nconst transformStylesMap = {\n  translateY: true,\n  translateX: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  rotate: true,\n};\n\nconst defaultStyles = {\n  opacity: 1,\n  translateY: 0,\n  translateX: 0,\n  scale: 1,\n  scaleX: 1,\n  scaleY: 1,\n  rotate: '0deg',\n};\n\nconst getAnimatedStyles = (animateValue: any) => (\n  initial: ISupportedTransitions,\n  to: ISupportedTransitions\n) => {\n  const styles: any = {\n    transform: [],\n  };\n\n  for (let key in initial) {\n    if (key === 'transition') {\n      continue;\n    }\n\n    if (key in transformStylesMap) {\n      styles.transform?.push({\n        [key]: animateValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [(initial as any)[key], (to as any)[key]],\n        }),\n      } as any);\n    } else {\n      styles[key] = animateValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [(initial as any)[key], (to as any)[key]],\n      });\n    }\n  }\n\n  return styles;\n};\n\nconst defaultTransitionConfig: ITransitionConfig = {\n  type: 'timing',\n  useNativeDriver: true,\n  duration: 250,\n  delay: 0,\n};\n\nexport const Transition = forwardRef(\n  (\n    {\n      children,\n      onTransitionComplete,\n      visible = false,\n      initial,\n      animate,\n      exit,\n      style,\n      as,\n      ...rest\n    }: ITransitionProps,\n    ref: any\n  ) => {\n    const animateValue = React.useRef(new Animated.Value(0)).current;\n\n    const Component = React.useMemo(() => {\n      if (as) {\n        return Animated.createAnimatedComponent(as);\n      }\n      return Animated.View;\n    }, [as]);\n\n    const [animationState, setAnimationState] = React.useState(\n      visible ? 'entering' : 'exited'\n    );\n\n    const prevVisible = React.useRef(visible);\n\n    React.useEffect(\n      function startEntryTransition() {\n        const entryTransition = {\n          ...defaultTransitionConfig,\n          ...animate?.transition,\n        };\n\n        if (visible) {\n          Animated.sequence([\n            // @ts-ignore - delay is present in defaultTransitionConfig\n            Animated.delay(entryTransition.delay),\n            Animated[entryTransition.type ?? 'timing'](animateValue, {\n              toValue: 1,\n              useNativeDriver: true,\n              ...entryTransition,\n            }),\n          ]).start(() => {\n            setAnimationState('entered');\n          });\n        }\n      },\n      [visible, onTransitionComplete, animateValue, animate]\n    );\n\n    React.useEffect(() => {\n      // Exit request\n      if (prevVisible.current !== visible && !visible) {\n        setAnimationState('exiting');\n      }\n      prevVisible.current = visible;\n    }, [visible]);\n\n    React.useEffect(\n      function startExitTransition() {\n        const exitTransition = {\n          ...defaultTransitionConfig,\n          ...exit?.transition,\n        };\n\n        if (animationState === 'exiting') {\n          Animated.sequence([\n            // @ts-ignore - delay is present in defaultTransitionConfig\n            Animated.delay(exitTransition.delay),\n            Animated[exitTransition.type ?? 'timing'](animateValue, {\n              toValue: 0,\n              useNativeDriver: true,\n              ...exitTransition,\n            }),\n          ]).start(() => {\n            setAnimationState('exited');\n          });\n        }\n      },\n      [\n        exit,\n        onTransitionComplete,\n        setAnimationState,\n        animationState,\n        animateValue,\n      ]\n    );\n\n    // If exit animation is present and state is exiting, we replace 'initial' with 'exit' animation\n    initial =\n      animationState === 'exiting' && exit\n        ? { ...defaultStyles, ...exit }\n        : { ...defaultStyles, ...initial };\n\n    animate = { ...defaultStyles, ...animate };\n\n    const styles = React.useMemo(() => {\n      return [\n        getAnimatedStyles(animateValue)(\n          initial as ISupportedTransitions,\n          animate as ISupportedTransitions\n        ),\n        style,\n      ];\n    }, [animateValue, initial, animate, style]);\n\n    React.useEffect(() => {\n      if (animationState === 'exited') {\n        onTransitionComplete && onTransitionComplete('exited');\n      } else if (animationState === 'entered') {\n        onTransitionComplete && onTransitionComplete('entered');\n      }\n    }, [animationState, onTransitionComplete]);\n\n    return (\n      <Component\n        pointerEvents=\"box-none\"\n        // https://github.com/facebook/react-native/issues/23090#issuecomment-710803743\n        needsOffscreenAlphaCompositing\n        style={styles}\n        ref={ref}\n        {...rest}\n      >\n        {children}\n      </Component>\n    );\n  }\n);\n"]}