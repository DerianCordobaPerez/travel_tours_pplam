var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.Transition=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _react=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _this=this,_jsxFileName="/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Transitions/Transition.tsx";var transformStylesMap={translateY:true,translateX:true,scale:true,scaleX:true,scaleY:true,rotate:true};var defaultStyles={opacity:1,translateY:0,translateX:0,scale:1,scaleX:1,scaleY:1,rotate:'0deg'};var getAnimatedStyles=function getAnimatedStyles(animateValue){return function(initial,to){var styles={transform:[]};for(var key in initial){if(key==='transition'){continue;}if(key in transformStylesMap){var _styles$transform;(_styles$transform=styles.transform)==null?void 0:_styles$transform.push((0,_defineProperty2.default)({},key,animateValue.interpolate({inputRange:[0,1],outputRange:[initial[key],to[key]]})));}else{styles[key]=animateValue.interpolate({inputRange:[0,1],outputRange:[initial[key],to[key]]});}}return styles;};};var defaultTransitionConfig={type:'timing',useNativeDriver:true,duration:250,delay:0};var Transition=(0,_react.forwardRef)(function(_ref,ref){var children=_ref.children,onTransitionComplete=_ref.onTransitionComplete,_ref$visible=_ref.visible,visible=_ref$visible===void 0?false:_ref$visible,initial=_ref.initial,animate=_ref.animate,exit=_ref.exit,style=_ref.style,as=_ref.as,rest=(0,_objectWithoutProperties2.default)(_ref,["children","onTransitionComplete","visible","initial","animate","exit","style","as"]);var animateValue=_react.default.useRef(new _reactNative.Animated.Value(0)).current;var Component=_react.default.useMemo(function(){if(as){return _reactNative.Animated.createAnimatedComponent(as);}return _reactNative.Animated.View;},[as]);var _React$useState=_react.default.useState(visible?'entering':'exited'),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),animationState=_React$useState2[0],setAnimationState=_React$useState2[1];var prevVisible=_react.default.useRef(visible);_react.default.useEffect(function startEntryTransition(){var _animate;var entryTransition=(0,_extends2.default)({},defaultTransitionConfig,(_animate=animate)==null?void 0:_animate.transition);if(visible){var _entryTransition$type;_reactNative.Animated.sequence([_reactNative.Animated.delay(entryTransition.delay),_reactNative.Animated[(_entryTransition$type=entryTransition.type)!=null?_entryTransition$type:'timing'](animateValue,(0,_extends2.default)({toValue:1,useNativeDriver:true},entryTransition))]).start(function(){setAnimationState('entered');});}},[visible,onTransitionComplete,animateValue,animate]);_react.default.useEffect(function(){if(prevVisible.current!==visible&&!visible){setAnimationState('exiting');}prevVisible.current=visible;},[visible]);_react.default.useEffect(function startExitTransition(){var exitTransition=(0,_extends2.default)({},defaultTransitionConfig,exit==null?void 0:exit.transition);if(animationState==='exiting'){var _exitTransition$type;_reactNative.Animated.sequence([_reactNative.Animated.delay(exitTransition.delay),_reactNative.Animated[(_exitTransition$type=exitTransition.type)!=null?_exitTransition$type:'timing'](animateValue,(0,_extends2.default)({toValue:0,useNativeDriver:true},exitTransition))]).start(function(){setAnimationState('exited');});}},[exit,onTransitionComplete,setAnimationState,animationState,animateValue]);initial=animationState==='exiting'&&exit?(0,_extends2.default)({},defaultStyles,exit):(0,_extends2.default)({},defaultStyles,initial);animate=(0,_extends2.default)({},defaultStyles,animate);var styles=_react.default.useMemo(function(){return[getAnimatedStyles(animateValue)(initial,animate),style];},[animateValue,initial,animate,style]);_react.default.useEffect(function(){if(animationState==='exited'){onTransitionComplete&&onTransitionComplete('exited');}else if(animationState==='entered'){onTransitionComplete&&onTransitionComplete('entered');}},[animationState,onTransitionComplete]);return _react.default.createElement(Component,(0,_extends2.default)({pointerEvents:"box-none",needsOffscreenAlphaCompositing:true,style:styles,ref:ref},rest,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:185,columnNumber:7}}),children);});exports.Transition=Transition;
//# sourceMappingURL=Transition.js.map