{"version":3,"sources":["Group.tsx"],"names":["getAvatarGroupChildren","children","space","max","plusAvatarBg","props","childrenArray","React","Children","toArray","plusAvatars","length","slice","trailingChildren","defaultProps","ml","map","reverse","child","index","cloneElement","key","AvatarGroup","allProps","ref","borderColor","borderWidth","bg"],"mappings":"wbAAA,qDACA,mEACA,2DACA,4DAEA,wD,kIAIA,GAAMA,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAC7BC,QAD6B,CAE7BC,KAF6B,CAG7BC,GAH6B,CAI7BC,YAJ6B,CAK7BC,KAL6B,CAM1B,CACH,GAAIC,CAAAA,aAAkB,CAAGC,eAAMC,QAAN,CAAeC,OAAf,CAAuBR,QAAvB,CAAzB,CACA,GAAIS,CAAAA,WAAmB,CAAG,CAA1B,CACA,GAAI,CAAC,oBAAMP,GAAN,CAAD,EAAeA,GAAG,CAAGG,aAAa,CAACK,MAAnC,EAA6CR,GAAG,CAAG,CAAvD,CAA0D,CACxDO,WAAW,CAAGJ,aAAa,CAACK,MAAd,CAAuBR,GAArC,CACAG,aAAa,CAAGA,aAAa,CAACM,KAAd,CAAoB,CAApB,CAAuBT,GAAvB,CAAhB,CACD,CACD,GAAIU,CAAAA,gBAAgB,CAAGP,aAAa,CAACM,KAAd,CAAoB,CAApB,CAAvB,CACA,GAAME,CAAAA,YAAY,CAAG,CACnBC,EAAE,CAAEb,KADe,CAArB,CAGA,MAAO,CACLQ,WAAW,CAAG,CAAd,CACE,6BAAC,eAAD,wBAAQ,EAAE,CAAEN,YAAZ,EAA8BU,YAA9B,CAAgDT,KAAhD,+EACG,KAAOK,WADV,CADF,CAII,IALC,CAMLH,eAAMC,QAAN,CAAeQ,GAAf,CACEH,gBAAgB,CAACI,OAAjB,EADF,CAEE,SAACC,KAAD,CAAaC,KAAb,CAA+B,CAC7B,MAAOZ,gBAAMa,YAAN,CACLF,KADK,wBAGHG,GAAG,uBAAwBF,KAHxB,EAIAd,KAJA,CAKAS,YALA,CAMAI,KAAK,CAACb,KANN,EAQLa,KAAK,CAACb,KAAN,CAAYJ,QARP,CAAP,CAUD,CAbH,CANK,CAqBLM,eAAMa,YAAN,CACEd,aAAa,CAAC,CAAD,CADf,0BAGOD,KAHP,CAIOC,aAAa,CAAC,CAAD,CAAb,CAAiBD,KAJxB,EAMEC,aAAa,CAAC,CAAD,CAAb,CAAiBD,KAAjB,CAAuBJ,QANzB,CArBK,CAAP,CA8BD,CA/CD,CAiDA,GAAMqB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,CAA8BC,GAA9B,CAA2C,IACrDvB,CAAAA,QADqD,CACzBsB,QADyB,CACrDtB,QADqD,CAC3CE,GAD2C,CACzBoB,QADyB,CAC3CpB,GAD2C,CACnCE,KADmC,uCACzBkB,QADyB,6CAEb,sCAC9C,aAD8C,CAE9ClB,KAF8C,CAFa,CAErDoB,WAFqD,qBAErDA,WAFqD,CAExCC,WAFwC,qBAExCA,WAFwC,CAE3BC,EAF2B,qBAE3BA,EAF2B,CAEvBzB,KAFuB,qBAEvBA,KAFuB,CAM7D,MACE,8BAAC,aAAD,EAAM,SAAS,CAAC,aAAhB,CAA8B,GAAG,CAAEsB,GAAnC,6EACGxB,sBAAsB,CAACC,QAAD,CAAWC,KAAX,CAAkBC,GAAlB,CAAuBwB,EAAvB,wBACrBF,WAAW,CAAXA,WADqB,CAErBC,WAAW,CAAXA,WAFqB,EAGlBrB,KAHkB,EADzB,CADF,CASD,CAfD,C,aAiBe,gBAAK,sBAAWiB,WAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Flex from '../../primitives/Flex';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport isNil from 'lodash.isnil';\nimport type { IAvatarGroupProps } from './types';\nimport { default as Avatar } from './Avatar';\n\n// Todo: Try using HStack instead\n\nconst getAvatarGroupChildren = (\n  children?: JSX.Element[] | JSX.Element,\n  space?: number,\n  max?: number,\n  plusAvatarBg?: string,\n  props?: any\n) => {\n  let childrenArray: any = React.Children.toArray(children);\n  let plusAvatars: number = 0;\n  if (!isNil(max) && max < childrenArray.length && max > 0) {\n    plusAvatars = childrenArray.length - max;\n    childrenArray = childrenArray.slice(0, max);\n  }\n  let trailingChildren = childrenArray.slice(1);\n  const defaultProps = {\n    ml: space,\n  };\n  return [\n    plusAvatars > 0 ? (\n      <Avatar bg={plusAvatarBg} {...defaultProps} {...props}>\n        {'+ ' + plusAvatars}\n      </Avatar>\n    ) : null,\n    React.Children.map(\n      trailingChildren.reverse(),\n      (child: any, index: number) => {\n        return React.cloneElement(\n          child,\n          {\n            key: `avatar-group-child-${index}`,\n            ...props,\n            ...defaultProps,\n            ...child.props,\n          },\n          child.props.children\n        );\n      }\n    ),\n    React.cloneElement(\n      childrenArray[0],\n      {\n        ...props,\n        ...childrenArray[0].props,\n      },\n      childrenArray[0].props.children\n    ),\n  ];\n};\n\nconst AvatarGroup = (allProps: IAvatarGroupProps, ref: any) => {\n  const { children, max, ...props } = allProps;\n  const { borderColor, borderWidth, bg, space } = usePropsResolution(\n    'AvatarGroup',\n    props\n  );\n  return (\n    <Flex direction=\"row-reverse\" ref={ref}>\n      {getAvatarGroupChildren(children, space, max, bg, {\n        borderColor,\n        borderWidth,\n        ...props,\n      })}\n    </Flex>\n  );\n};\n\nexport default memo(forwardRef(AvatarGroup));\n"]}