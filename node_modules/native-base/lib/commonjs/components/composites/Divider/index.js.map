{"version":3,"sources":["index.tsx"],"names":["Divider","props","ref","orientation","newProps","remainingProps","Platform","OS","undefined"],"mappings":"ohBAAA,qDACA,yCACA,2DACA,mEAEA,2C,mIAEA,GAAMA,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAuBC,GAAvB,CAAqC,yBACd,sCAAmB,SAAnB,CAA8BD,KAA9B,CADc,CAC3CE,WAD2C,qBAC3CA,WAD2C,CAC3BC,QAD2B,iGAExB,2BAAgBA,QAAhB,CAA0B,CAAC,MAAD,CAA1B,CAFwB,mEAE1CC,cAF0C,sBAGnD,MACE,8BAAC,YAAD,0BACMA,cADN,EAEE,GAAG,CAAEH,GAFP,CAGE,mBAAkBC,WAHpB,CAKE,iBAAiB,CAAEG,sBAASC,EAAT,GAAgB,KAAhB,CAAwB,WAAxB,CAAsCC,SAL3D,8EADF,CASD,CAZD,C,aAce,gBAAK,sBAAWR,OAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport Box from './../../primitives/Box';\nimport type { IDividerProps } from './types';\nimport { extractInObject } from '../../../theme/tools';\n\nconst Divider = (props: IDividerProps, ref?: any) => {\n  const { orientation, ...newProps } = usePropsResolution('Divider', props);\n  const [, remainingProps] = extractInObject(newProps, ['size']);\n  return (\n    <Box\n      {...remainingProps}\n      ref={ref}\n      aria-orientation={orientation}\n      //@ts-ignore web only role\n      accessibilityRole={Platform.OS === 'web' ? 'separator' : undefined}\n    />\n  );\n};\n\nexport default memo(forwardRef(Divider));\n"]}