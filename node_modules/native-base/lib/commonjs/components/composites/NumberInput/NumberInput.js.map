{"version":3,"sources":["NumberInput.tsx"],"names":["NumberInput","ref","children","props","defaultValue","keepWithinRange","value","min","max","onChange","newProps","formControlContext","React","useState","parseInt","numberInputValue","setNumberInputValue","numberInputStepper","setNumberInputStepper","handleChange","newValue","temp","handleChangeWithoutCheck","useEffect","undefined","isControlled","memo","forwardRef"],"mappings":"+bAAA,oDACA,qCACA,2CAEA,kCACA,iE,6IAEA,GAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAA4CC,GAA5C,CAA0D,IAAvDC,CAAAA,QAAuD,MAAvDA,QAAuD,CAA1CC,KAA0C,6EASxE,yBAAc,aAAd,CAA6BA,KAA7B,CATwE,CAE1EC,YAF0E,gBAE1EA,YAF0E,CAG1EC,eAH0E,gBAG1EA,eAH0E,CAI1EC,KAJ0E,gBAI1EA,KAJ0E,CAK1EC,GAL0E,gBAK1EA,GAL0E,CAM1EC,GAN0E,gBAM1EA,GAN0E,CAO1EC,QAP0E,gBAO1EA,QAP0E,CAQvEC,QARuE,yHAU5E,GAAMC,CAAAA,kBAAkB,CAAG,wCAA3B,CAV4E,oBAY5BC,eAAMC,QAAN,CAC9CC,QAAQ,CAACR,KAAK,EAAIF,YAAV,CAAwB,EAAxB,CADsC,CAZ4B,iEAYrEW,gBAZqE,qBAYnDC,mBAZmD,0CAexBJ,eAAMC,QAAN,CAAe,IAAf,CAfwB,kEAerEI,kBAfqE,qBAejDC,qBAfiD,qBAgB5E,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,QAAD,CAAsB,CACzC,GAAMC,CAAAA,IAAI,CAAGD,QAAb,CACAJ,mBAAmB,CAACK,IAAD,CAAnB,CACA,GAAIhB,eAAJ,CAAqB,CACnB,GAAIe,QAAQ,CAAGb,GAAf,CAAoBS,mBAAmB,CAACT,GAAD,CAAnB,CAApB,IACK,IAAIa,QAAQ,CAAGZ,GAAf,CAAoBQ,mBAAmB,CAACR,GAAD,CAAnB,CAC1B,CAEDC,QAAQ,EAAIA,QAAQ,CAACY,IAAD,CAApB,CACD,CATD,CAUA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACF,QAAD,CAAsB,CACrD,GAAMC,CAAAA,IAAI,CAAGD,QAAb,CACAJ,mBAAmB,CAACK,IAAD,CAAnB,CACD,CAHD,CAKAT,eAAMW,SAAN,CAAgB,UAAM,CACpB,GAAIjB,KAAK,GAAKkB,SAAV,EAAuBlB,KAAK,EAAIS,gBAApC,CACEC,mBAAmB,CAACV,KAAD,CAAnB,CACH,CAHD,CAGG,CAACA,KAAD,CAAQS,gBAAR,CAA0BC,mBAA1B,CAHH,EAIA,MACE,8BAAC,YAAD,EAAK,GAAG,CAAEf,GAAV,6EACE,6BAAC,2BAAD,CAAoB,QAApB,EACE,KAAK,0BACAU,kBADA,CAEAD,QAFA,EAGHH,GAAG,CAAHA,GAHG,CAIHC,GAAG,CAAHA,GAJG,CAKHW,YAAY,CAAZA,YALG,CAMHG,wBAAwB,CAAxBA,wBANG,CAOHP,gBAAgB,CAAhBA,gBAPG,CAQHE,kBAAkB,CAAlBA,kBARG,CASHC,qBAAqB,CAArBA,qBATG,CAUHO,YAAY,CAAEnB,KAAK,GAAKkB,SAVrB,EADP,6EAcGtB,QAdH,CADF,CADF,CAoBD,CAvDD,C,aAyDeU,eAAMc,IAAN,CAAWd,eAAMe,UAAN,CAAiB3B,WAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { useThemeProps } from '../../../hooks';\nimport { useFormControlContext } from '../FormControl';\nimport type { INumberInputProps } from './types';\nimport { NumberInputContext } from './Context';\nimport Box from '../../primitives/Box';\n\nconst NumberInput = ({ children, ...props }: INumberInputProps, ref?: any) => {\n  const {\n    defaultValue,\n    keepWithinRange,\n    value,\n    min,\n    max,\n    onChange,\n    ...newProps\n  } = useThemeProps('NumberInput', props);\n  const formControlContext = useFormControlContext();\n\n  const [numberInputValue, setNumberInputValue] = React.useState(\n    parseInt(value || defaultValue, 10)\n  );\n  const [numberInputStepper, setNumberInputStepper] = React.useState(null);\n  const handleChange = (newValue: number) => {\n    const temp = newValue;\n    setNumberInputValue(temp);\n    if (keepWithinRange) {\n      if (newValue < min) setNumberInputValue(min);\n      else if (newValue > max) setNumberInputValue(max);\n    }\n    //NOTE: only calling onChange on stepper click or blur event of input.\n    onChange && onChange(temp);\n  };\n  const handleChangeWithoutCheck = (newValue: number) => {\n    const temp = newValue;\n    setNumberInputValue(temp);\n  };\n\n  React.useEffect(() => {\n    if (value !== undefined && value != numberInputValue)\n      setNumberInputValue(value);\n  }, [value, numberInputValue, setNumberInputValue]);\n  return (\n    <Box ref={ref}>\n      <NumberInputContext.Provider\n        value={{\n          ...formControlContext,\n          ...newProps,\n          min,\n          max,\n          handleChange,\n          handleChangeWithoutCheck,\n          numberInputValue,\n          numberInputStepper,\n          setNumberInputStepper,\n          isControlled: value !== undefined,\n        }}\n      >\n        {children}\n      </NumberInputContext.Provider>\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(NumberInput));\n"]}