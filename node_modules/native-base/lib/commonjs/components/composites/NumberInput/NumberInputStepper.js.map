{"version":3,"sources":["NumberInputStepper.tsx"],"names":["NBStepper","React","forwardRef","ref","children","props","style","isIncrement","disablitityCheck","_active","_disabled","isDisabled","accessibilityLabel","pressHandler","iconColor","newProps","Platform","OS","disabled","cursor","NumberInputStepper","useContext","NumberInputContext","numberInputStepper","setNumberInputStepper","useEffect","memo"],"mappings":"qXAAA,oDACA,yCACA,4CACA,qCAEA,kCACA,kD,oJAEO,GAAMA,CAAAA,SAAS,CAAGC,eAAMC,UAAN,CACvB,cAA8BC,GAA9B,CAA4C,IAAzCC,CAAAA,QAAyC,MAAzCA,QAAyC,CAA5BC,KAA4B,6EAYtC,yBAAc,oBAAd,CAAoCA,KAApC,CAZsC,CAExCC,KAFwC,gBAExCA,KAFwC,CAGxCC,WAHwC,gBAGxCA,WAHwC,CAIxCC,gBAJwC,gBAIxCA,gBAJwC,CAKxCC,OALwC,gBAKxCA,OALwC,CAMxCC,SANwC,gBAMxCA,SANwC,CAOxCC,UAPwC,gBAOxCA,UAPwC,CAQxCC,kBARwC,gBAQxCA,kBARwC,CASxCC,YATwC,gBASxCA,YATwC,CAUxCC,SAVwC,gBAUxCA,SAVwC,CAWrCC,QAXqC,qLAa1C,MACE,8BAAC,6BAAD,EACE,aAAa,CAAE,GADjB,CAEE,QAAQ,CAAEP,gBAAgB,EAAIG,UAFhC,CAGE,OAAO,CAAEE,YAHX,CAIE,UAAU,KAJZ,CAKE,kBAAkB,CAAED,kBALtB,CAME,GAAG,CAAET,GANP,6EAQE,6BAAC,eAAD,0BACMY,QADN,CAEMN,OAFN,CAGOD,gBAAgB,EAAIG,UAApB,CAAiCD,SAAjC,CAA6C,EAHpD,EAIE,WAAW,CAAC,aAJd,CAKE,KAAK,CAAEJ,KALT,CAME,OAAO,CAAEE,gBAAgB,EAAIG,UAApB,CAAiC,GAAjC,CAAuC,CANlD,EAOOK,sBAASC,EAAT,GAAgB,KAAhB,CACD,CACEC,QAAQ,CAAEV,gBAAgB,EAAIG,UADhC,CAEEQ,MAAM,CAAEX,gBAAgB,EAAIG,UAApB,CAAiC,aAAjC,CAAiD,MAF3D,CADC,CAKD,EAZN,+EAcGP,QAAQ,EAAIG,WAAZ,CACC,6BAAC,oBAAD,EAAe,KAAK,CAAEO,SAAtB,8EADD,CAGC,6BAAC,sBAAD,EAAiB,KAAK,CAAEA,SAAxB,8EAjBJ,CARF,CADF,CA+BD,CA7CsB,CAAlB,C,4BAgDP,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,OAEzBjB,GAFyB,CAGtB,IAFDC,CAAAA,QAEC,OAFDA,QAEC,CAFYC,KAEZ,iFAIsBJ,eAAMoB,UAAN,CAAiBC,2BAAjB,CAJtB,CAEDC,kBAFC,mBAEDA,kBAFC,CAGDC,qBAHC,mBAGDA,qBAHC,CAMHvB,eAAMwB,SAAN,CAAgB,UAAM,CACpB,CAACF,kBAAD,EACEC,qBAAqB,CACnB,6BAAC,kBAAD,0BAAYnB,KAAZ,EAAmB,GAAG,CAAEF,GAAxB,8EACGC,QADH,CADmB,CADvB,CAMD,CAPD,CAOG,CAACmB,kBAAD,CAAqBC,qBAArB,CAA4CnB,KAA5C,CAAmDD,QAAnD,CAA6DD,GAA7D,CAPH,EAQA,MAAO,KAAP,CACD,CAlBD,C,aAoBeF,eAAMyB,IAAN,CAAWzB,eAAMC,UAAN,CAAiBkB,kBAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport { VStack, Box } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport type { INumberInputSteppersProps, INumberInputContext } from './types';\nimport { NumberInputContext } from './Context';\nimport { ChevronUpIcon, ChevronDownIcon } from '../../primitives/Icon/Icons';\n\nexport const NBStepper = React.forwardRef(\n  ({ children, ...props }: any, ref?: any) => {\n    const {\n      style,\n      isIncrement,\n      disablitityCheck,\n      _active,\n      _disabled,\n      isDisabled,\n      accessibilityLabel,\n      pressHandler,\n      iconColor,\n      ...newProps\n    } = useThemeProps('NumberInputStepper', props);\n    return (\n      <TouchableOpacity\n        activeOpacity={0.2}\n        disabled={disablitityCheck || isDisabled}\n        onPress={pressHandler}\n        accessible\n        accessibilityLabel={accessibilityLabel}\n        ref={ref}\n      >\n        <Box\n          {...newProps}\n          {..._active}\n          {...(disablitityCheck || isDisabled ? _disabled : {})}\n          borderColor=\"transparent\"\n          style={style}\n          opacity={disablitityCheck || isDisabled ? 0.4 : 1}\n          {...(Platform.OS === 'web'\n            ? {\n                disabled: disablitityCheck || isDisabled,\n                cursor: disablitityCheck || isDisabled ? 'not-allowed' : 'auto',\n              }\n            : {})}\n        >\n          {children || isIncrement ? (\n            <ChevronUpIcon color={iconColor} />\n          ) : (\n            <ChevronDownIcon color={iconColor} />\n          )}\n        </Box>\n      </TouchableOpacity>\n    );\n  }\n);\n\nconst NumberInputStepper = (\n  { children, ...props }: INumberInputSteppersProps,\n  ref?: any\n) => {\n  const {\n    numberInputStepper,\n    setNumberInputStepper,\n  }: INumberInputContext = React.useContext(NumberInputContext);\n\n  React.useEffect(() => {\n    !numberInputStepper &&\n      setNumberInputStepper(\n        <VStack {...props} ref={ref}>\n          {children}\n        </VStack>\n      );\n  }, [numberInputStepper, setNumberInputStepper, props, children, ref]);\n  return null;\n};\n\nexport default React.memo(React.forwardRef(NumberInputStepper));\n"]}