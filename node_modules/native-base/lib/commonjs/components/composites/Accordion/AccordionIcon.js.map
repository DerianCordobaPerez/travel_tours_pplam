{"version":3,"sources":["AccordionIcon.tsx"],"names":["AccordionIcon","ref","props","React","useContext","AccordionItemContext","isOpen","newProps","memo","forwardRef"],"mappings":"mPAAA,oDACA,kDAEA,kCACA,qC,6IAEA,GAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAoCC,GAApC,CAAkD,IAA5CC,CAAAA,KAA4C,sDACvBC,eAAMC,UAAN,CAC7CC,6BAD6C,CADuB,CAC9DC,MAD8D,mBAC9DA,MAD8D,oBAI9C,yBAAc,eAAd,CAA+BJ,KAA/B,CAJ8C,CAI3DK,QAJ2D,0CAKtE,MAAOD,CAAAA,MAAM,CACX,6BAAC,oBAAD,wBAAe,KAAK,CAAC,OAArB,EAAiCC,QAAjC,EAA2C,GAAG,CAAEN,GAAhD,8EADW,CAGX,6BAAC,sBAAD,0BAAqBM,QAArB,EAA+B,GAAG,CAAEN,GAApC,8EAHF,CAKD,CAVD,C,aAYeE,eAAMK,IAAN,CAAWL,eAAMM,UAAN,CAAiBT,aAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { ChevronDownIcon, ChevronUpIcon } from '../../primitives/Icon/Icons';\nimport type { IAccordionIconProps, IAccordionItemContextProps } from './types';\nimport { AccordionItemContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\n\nconst AccordionIcon = ({ ...props }: IAccordionIconProps, ref?: any) => {\n  const { isOpen }: IAccordionItemContextProps = React.useContext(\n    AccordionItemContext\n  );\n  const { ...newProps } = useThemeProps('AccordionIcon', props);\n  return isOpen ? (\n    <ChevronUpIcon color=\"white\" {...newProps} ref={ref} />\n  ) : (\n    <ChevronDownIcon {...newProps} ref={ref} />\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionIcon));\n"]}