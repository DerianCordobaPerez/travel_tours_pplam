{"version":3,"sources":["SectionList.tsx"],"names":["StyledSectionList","RNSectionList","SectionList","props","ref","ignoreProps","resolvedProps"],"mappings":"4UAAA,qDACA,yCACA,qCACA,6C,wIAGA,GAAMA,CAAAA,iBAAsB,CAAG,0BAAcC,wBAAd,CAA/B,CAEO,GAAMC,CAAAA,WAAW,CAAG,sBAAW,SAACC,KAAD,CAA2BC,GAA3B,CAAwC,yBAC/C,8BAAmB,aAAnB,CAAkCD,KAAlC,CAAyC,CACpEE,WAAW,CAAE,CACX,UADW,CAEX,YAFW,CAGX,cAHW,CAIX,qBAJW,CADuD,CAAzC,CAD+C,CACjEC,aADiE,+CAU5E,MAAO,8BAAC,iBAAD,0BAAuBA,aAAvB,EAAsC,GAAG,CAAEF,GAA3C,+EAAP,CACD,CAX0B,CAApB,C","sourcesContent":["import React, { forwardRef } from 'react';\nimport { SectionList as RNSectionList } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledBox } from '../../../utils/styled';\nimport type { ISectionListProps } from './types';\n\nconst StyledSectionList: any = makeStyledBox(RNSectionList);\n\nexport const SectionList = forwardRef((props: ISectionListProps, ref: any) => {\n  const { ...resolvedProps } = usePropsResolution('SectionList', props, {\n    ignoreProps: [\n      'sections',\n      'renderItem',\n      'keyExtractor',\n      'renderSectionHeader',\n    ],\n  });\n\n  return <StyledSectionList {...resolvedProps} ref={ref} />;\n});\n"]}