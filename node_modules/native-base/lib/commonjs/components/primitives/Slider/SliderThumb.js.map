{"version":3,"sources":["SliderThumb.tsx"],"names":["SliderThumb","props","ref","React","useContext","SliderContext","state","trackLayout","orientation","colorScheme","thumbSize","themeProps","size","inputRef","useRef","index","thumbProps","inputProps","thumbAbsoluteSize","thumbStyles","bottom","getThumbPercent","undefined","left","transform","translateY","parseInt","translateX","push","scale","isThumbDragging","scaleOnPressed","style","children","Platform","OS","displayName"],"mappings":"wUAAA,qDACA,yCACA,iDACA,2DACA,qCACA,2DAEA,mDACA,kC,6HAEA,QAASA,CAAAA,WAAT,CAAqBC,KAArB,CAA+CC,GAA/C,CAAyD,uBAOnDC,eAAMC,UAAN,CAAiBC,sBAAjB,CAPmD,CAErDC,KAFqD,mBAErDA,KAFqD,CAGrDC,WAHqD,mBAGrDA,WAHqD,CAIrDC,WAJqD,mBAIrDA,WAJqD,CAKrDC,WALqD,mBAKrDA,WALqD,CAMrDC,SANqD,mBAMrDA,SANqD,CAQvD,GAAMC,CAAAA,UAAU,CAAG,sCAAmB,aAAnB,wBACjBC,IAAI,CAAEF,SADW,CAEjBD,WAAW,CAAXA,WAFiB,EAGdR,KAHc,EAAnB,CAKA,GAAIY,CAAAA,QAAQ,CAAGV,eAAMW,MAAN,CAAa,IAAb,CAAf,CAbuD,oBActB,2BAC/B,CACEC,KAAK,CAAE,CADT,CAEER,WAAW,CAAXA,WAFF,CAGEM,QAAQ,CAARA,QAHF,CAIEL,WAAW,CAAXA,WAJF,CAD+B,CAO/BF,KAP+B,CAdsB,CAcjDU,UAdiD,iBAcjDA,UAdiD,CAcrCC,UAdqC,iBAcrCA,UAdqC,CAwBvD,GAAMC,CAAAA,iBAAiB,CAAG,oBAAS,OAAT,CAAkBP,UAAU,CAACC,IAA7B,CAA1B,CAEA,GAAMO,CAAAA,WAAgB,CAAG,CACvBC,MAAM,CACJZ,WAAW,GAAK,UAAhB,CACOF,KAAK,CAACe,eAAN,CAAsB,CAAtB,EAA2B,GADlC,KAEIC,SAJiB,CAKvBC,IAAI,CACFf,WAAW,GAAK,UAAhB,CACOF,KAAK,CAACe,eAAN,CAAsB,CAAtB,EAA2B,GADlC,KAEIC,SARiB,CASvBE,SAAS,CACPhB,WAAW,GAAK,UAAhB,CACI,CAAC,CAAEiB,UAAU,CAAEC,QAAQ,CAACR,iBAAD,CAAR,CAA8B,CAA5C,CAAD,CADJ,CAEI,CAAC,CAAES,UAAU,CAAE,CAACD,QAAQ,CAACR,iBAAD,CAAT,CAA+B,CAA7C,CAAD,CAZiB,CAAzB,CAeAC,WAAW,CAACK,SAAZ,CAAsBI,IAAtB,CAA2B,CACzBC,KAAK,CAAEvB,KAAK,CAACwB,eAAN,CAAsB,CAAtB,EAA2BnB,UAAU,CAACoB,cAAtC,CAAuD,CADrC,CAA3B,EAIA,MACE,8BAAC,YAAD,wBACE,QAAQ,CAAC,UADX,EAEMf,UAFN,CAGML,UAHN,EAIE,GAAG,CAAET,GAJP,CAKE,KAAK,CAAE,CAACiB,WAAD,CAAclB,KAAK,CAAC+B,KAApB,CALT,6EAOG/B,KAAK,CAACgC,QAPT,CAQGC,sBAASC,EAAT,GAAgB,KAAhB,EACC,6BAAC,8BAAD,6EACE,4DAAO,GAAG,CAAEtB,QAAZ,EAA0BI,UAA1B,+EADF,CATJ,CADF,CAgBD,CAEDjB,WAAW,CAACoC,WAAZ,CAA0B,aAA1B,C,aAEe,sBAAWpC,WAAX,C","sourcesContent":["import React, { forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { useSliderThumb } from '@react-native-aria/slider';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { useToken } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { ISliderThumbProps } from './types';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\n\nfunction SliderThumb(props: ISliderThumbProps, ref: any) {\n  let {\n    state,\n    trackLayout,\n    orientation,\n    colorScheme,\n    thumbSize,\n  } = React.useContext(SliderContext);\n  const themeProps = usePropsResolution('SliderThumb', {\n    size: thumbSize,\n    colorScheme,\n    ...props,\n  });\n  let inputRef = React.useRef(null);\n  let { thumbProps, inputProps } = useSliderThumb(\n    {\n      index: 0,\n      trackLayout,\n      inputRef,\n      orientation,\n    },\n    state\n  );\n\n  const thumbAbsoluteSize = useToken('sizes', themeProps.size);\n\n  const thumbStyles: any = {\n    bottom:\n      orientation === 'vertical'\n        ? `${state.getThumbPercent(0) * 100}%`\n        : undefined,\n    left:\n      orientation !== 'vertical'\n        ? `${state.getThumbPercent(0) * 100}%`\n        : undefined,\n    transform:\n      orientation === 'vertical'\n        ? [{ translateY: parseInt(thumbAbsoluteSize) / 2 }]\n        : [{ translateX: -parseInt(thumbAbsoluteSize) / 2 }],\n  };\n\n  thumbStyles.transform.push({\n    scale: state.isThumbDragging(0) ? themeProps.scaleOnPressed : 1,\n  });\n\n  return (\n    <Box\n      position=\"absolute\"\n      {...thumbProps}\n      {...themeProps}\n      ref={ref}\n      style={[thumbStyles, props.style]}\n    >\n      {props.children}\n      {Platform.OS === 'web' && (\n        <VisuallyHidden>\n          <input ref={inputRef} {...inputProps} />\n        </VisuallyHidden>\n      )}\n    </Box>\n  );\n}\n\nSliderThumb.displayName = 'SliderThumb';\n\nexport default forwardRef(SliderThumb);\n"]}