var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.useColorModeValue=useColorModeValue;exports.useModeManager=useModeManager;exports.useAccessibleColors=useAccessibleColors;exports.useColorMode=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _react=_interopRequireWildcard(require("react"));var _Context=require("./../hybrid-overlay/Context");var useColorMode=function useColorMode(){var _React$useContext=_react.default.useContext(_Context.HybridContext),colorModeContext=_React$useContext.colorMode;if(colorModeContext===undefined){throw new Error('useColorMode must be used within a NativeBaseProvider');}return colorModeContext;};exports.useColorMode=useColorMode;function useColorModeValue(light,dark){var _useColorMode=useColorMode(),colorMode=_useColorMode.colorMode;return colorMode==='dark'?dark:light;}function useModeManager(initialColorMode,colorModeManager){var _useState=(0,_react.useState)(initialColorMode),_useState2=(0,_slicedToArray2.default)(_useState,2),colorMode=_useState2[0],setRawMode=_useState2[1];function setColorMode(val){return _regenerator.default.async(function setColorMode$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!colorModeManager){_context.next=3;break;}_context.next=3;return _regenerator.default.awrap(colorModeManager.set(val));case 3:setRawMode(val);case 4:case"end":return _context.stop();}}},null,null,null,Promise);}(0,_react.useEffect)(function(){if(colorModeManager){(function getMode(){var value;return _regenerator.default.async(function getMode$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regenerator.default.awrap(colorModeManager.get(initialColorMode));case 2:value=_context2.sent;if(value&&value!==colorMode){setRawMode(value);}case 4:case"end":return _context2.stop();}}},null,null,null,Promise);})();}},[colorMode,initialColorMode,colorModeManager]);return{colorMode:colorMode,setColorMode:setColorMode};}function useAccessibleColors(){var _React$useContext2=_react.default.useContext(_Context.HybridContext),colorModeContext=_React$useContext2.colorMode;var toggleAccessibleColors=function toggleAccessibleColors(){return colorModeContext.setAccessibleColors(!colorModeContext.accessibleColors);};return[colorModeContext.accessibleColors,colorModeContext.setAccessibleColors,toggleAccessibleColors];}
//# sourceMappingURL=hooks.js.map