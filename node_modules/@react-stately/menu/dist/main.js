var {
  useState
} = require("react");

var {
  useOverlayTriggerState
} = require("@react-stately/overlays");

var _babelRuntimeHelpersExtends = $parcel$interopDefault(require("@babel/runtime/helpers/extends"));

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}

/**
 * Manages state for a menu trigger. Tracks whether the menu is currently open,
 * and controls which item will receive focus when it opens.
 */
function useMenuTriggerState(props) {
  let overlayTriggerState = useOverlayTriggerState(props);
  let [focusStrategy, setFocusStrategy] = useState(null);
  return _babelRuntimeHelpersExtends({
    focusStrategy
  }, overlayTriggerState, {
    open(focusStrategy) {
      if (focusStrategy === void 0) {
        focusStrategy = null;
      }

      setFocusStrategy(focusStrategy);
      overlayTriggerState.open();
    },

    toggle(focusStrategy) {
      if (focusStrategy === void 0) {
        focusStrategy = null;
      }

      setFocusStrategy(focusStrategy);
      overlayTriggerState.toggle();
    }

  });
}

exports.useMenuTriggerState = useMenuTriggerState;
//# sourceMappingURL=main.js.map
