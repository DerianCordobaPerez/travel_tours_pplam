{"mappings":";;;;;;;;;;;;;;AAAA,SAASA,sBAAT,CAAgCC,CAAhC,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAACC,UAAP,GAAoBD,CAAC,CAACE,OAAtB,GAAgCF,CAAvC;AACD;;ACuBD;;;;;AAKO,SAASG,cAAT,CAA0CC,KAA1C,EAAkF;AACvF,MAAIC,YAAY,GAAGC,mBAAmB,CAACF,KAAD,CAAtC;AACA,MAAIG,SAAS,GAAGC,wBAAwB,iCACnCJ,KADmC;AAEtCK,IAAAA,iBAAiB,EAAGC,GAAD,IAAS;AAC1B,UAAIN,KAAK,CAACK,iBAAN,IAA2B,IAA/B,EAAqC;AACnCL,QAAAA,KAAK,CAACK,iBAAN,CAAwBC,GAAxB;AACD;;AAEDL,MAAAA,YAAY,CAACM,KAAb;AACD;AARqC,KAAxC;AAWA,MAAI,CAACC,SAAD,EAAYC,UAAZ,IAA0BC,QAAQ,CAAC,KAAD,CAAtC;AAEA,yCACKP,SADL,EAEKF,YAFL;AAGEU,IAAAA,IAAI,GAAG;AACL;AACA,UAAIR,SAAS,CAACS,UAAV,CAAqBC,IAArB,KAA8B,CAAlC,EAAqC;AACnCZ,QAAAA,YAAY,CAACU,IAAb;AACD;AACF,KARH;;AASEG,IAAAA,MAAM,CAACC,aAAD,EAAgB;AACpB,UAAIZ,SAAS,CAACS,UAAV,CAAqBC,IAArB,KAA8B,CAAlC,EAAqC;AACnCZ,QAAAA,YAAY,CAACa,MAAb,CAAoBC,aAApB;AACD;AACF,KAbH;;AAcEP,IAAAA,SAdF;AAeEC,IAAAA;AAfF;AAiBD","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-stately/select/src/useSelectState.ts"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {MenuTriggerState, useMenuTriggerState} from '@react-stately/menu';\nimport {SelectProps} from '@react-types/select';\nimport {SingleSelectListState, useSingleSelectListState} from '@react-stately/list';\nimport {useState} from 'react';\n\nexport interface SelectState<T> extends SingleSelectListState<T>, MenuTriggerState {\n  /** Whether the select is currently focused. */\n  readonly isFocused: boolean,\n\n  /** Sets whether the select is focused. */\n  setFocused(isFocused: boolean): void\n}\n\n/**\n * Provides state management for a select component. Handles building a collection\n * of items from props, handles the open state for the popup menu, and manages\n * multiple selection state.\n */\nexport function useSelectState<T extends object>(props: SelectProps<T>): SelectState<T>  {\n  let triggerState = useMenuTriggerState(props);\n  let listState = useSingleSelectListState({\n    ...props,\n    onSelectionChange: (key) => {\n      if (props.onSelectionChange != null) {\n        props.onSelectionChange(key);\n      }\n\n      triggerState.close();\n    }\n  });\n\n  let [isFocused, setFocused] = useState(false);\n\n  return {\n    ...listState,\n    ...triggerState,\n    open() {\n      // Don't open if the collection is empty.\n      if (listState.collection.size !== 0) {\n        triggerState.open();\n      }\n    },\n    toggle(focusStrategy) {\n      if (listState.collection.size !== 0) {\n        triggerState.toggle(focusStrategy);\n      }\n    },\n    isFocused,\n    setFocused\n  };\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","useSelectState","props","triggerState","useMenuTriggerState","listState","useSingleSelectListState","onSelectionChange","key","close","isFocused","setFocused","useState","open","collection","size","toggle","focusStrategy"],"version":3,"file":"main.js.map"}