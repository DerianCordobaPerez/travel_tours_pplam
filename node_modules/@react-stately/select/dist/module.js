import { useState } from "react";
import { useSingleSelectListState } from "@react-stately/list";
import { useMenuTriggerState } from "@react-stately/menu";
import _babelRuntimeHelpersEsmExtends from "@babel/runtime/helpers/esm/extends";

/**
 * Provides state management for a select component. Handles building a collection
 * of items from props, handles the open state for the popup menu, and manages
 * multiple selection state.
 */
export function useSelectState(props) {
  let triggerState = useMenuTriggerState(props);
  let listState = useSingleSelectListState(_babelRuntimeHelpersEsmExtends({}, props, {
    onSelectionChange: key => {
      if (props.onSelectionChange != null) {
        props.onSelectionChange(key);
      }

      triggerState.close();
    }
  }));
  let [isFocused, setFocused] = useState(false);
  return _babelRuntimeHelpersEsmExtends({}, listState, triggerState, {
    open() {
      // Don't open if the collection is empty.
      if (listState.collection.size !== 0) {
        triggerState.open();
      }
    },

    toggle(focusStrategy) {
      if (listState.collection.size !== 0) {
        triggerState.toggle(focusStrategy);
      }
    },

    isFocused,
    setFocused
  });
}
//# sourceMappingURL=module.js.map
